/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _peppercorn = __webpack_require__(488);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// const backAction = <ActionItem label="Back" icon="angle-left" primary />
	// const menuAction = <ActionItem label="Menu" icon={{icon:"bars", size: 24}} energized />

	// Components
	var backAction = _react2.default.createElement(_peppercorn.ActionItem, { label: 'Back', primary: true });
	var menuAction = _react2.default.createElement(_peppercorn.ActionItem, { label: 'Menu', primary: true });
	var Example = function Example() {
	  return _react2.default.createElement(
	    _peppercorn.Container,
	    null,
	    _react2.default.createElement(_peppercorn.ActionBar, { title: 'ActionItem', stable: true, header: true }),
	    _react2.default.createElement(
	      _peppercorn.ScrollContainer,
	      { style: { backgroundColor: '#DCDCDC' } },
	      _react2.default.createElement(_peppercorn.ActionBar, { title: 'Header', left: backAction, right: menuAction, primary: true })
	    )
	  );
	};

	// App registration and rendering
	_reactNative.AppRegistry.registerComponent('ex', function () {
	  return Example;
	});
	_reactNative.AppRegistry.runApplication('ex', { rootTag: document.getElementById('react-root') });

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(2);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactChildren = __webpack_require__(4);
	var ReactComponent = __webpack_require__(16);
	var ReactPureComponent = __webpack_require__(19);
	var ReactClass = __webpack_require__(20);
	var ReactDOMFactories = __webpack_require__(25);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypes = __webpack_require__(26);
	var ReactVersion = __webpack_require__(28);

	var onlyChild = __webpack_require__(29);
	var warning = __webpack_require__(10);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (false) {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(5);
	var ReactElement = __webpack_require__(8);

	var emptyFunction = __webpack_require__(11);
	var traverseAllChildren = __webpack_require__(13);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 6 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactCurrentOwner = __webpack_require__(9);

	var warning = __webpack_require__(10);
	var canDefineProperty = __webpack_require__(12);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(11);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (false) {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactElement = __webpack_require__(8);

	var getIteratorFn = __webpack_require__(14);
	var invariant = __webpack_require__(7);
	var KeyEscapeUtils = __webpack_require__(15);
	var warning = __webpack_require__(10);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactNoopUpdateQueue = __webpack_require__(17);

	var canDefineProperty = __webpack_require__(12);
	var emptyObject = __webpack_require__(18);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(10);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactComponent = __webpack_require__(16);
	var ReactNoopUpdateQueue = __webpack_require__(17);

	var emptyObject = __webpack_require__(18);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactComponent = __webpack_require__(16);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactNoopUpdateQueue = __webpack_require__(17);

	var emptyObject = __webpack_require__(18);
	var invariant = __webpack_require__(7);
	var keyMirror = __webpack_require__(22);
	var keyOf = __webpack_require__(24);
	var warning = __webpack_require__(10);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (false) {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(22);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 24 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(27);

	var emptyFunction = __webpack_require__(11);
	var getIteratorFn = __webpack_require__(14);
	var warning = __webpack_require__(10);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
	  if (false) {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (false) {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 27 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.3.1';

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(31);

	var _findNodeHandle=__webpack_require__(46);var _findNodeHandle2=_interopRequireDefault(_findNodeHandle);
	var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);
	var _server=__webpack_require__(171);var _server2=_interopRequireDefault(_server);


	var _Animated=__webpack_require__(175);var _Animated2=_interopRequireDefault(_Animated);
	var _AppRegistry=__webpack_require__(312);var _AppRegistry2=_interopRequireDefault(_AppRegistry);
	var _AppState=__webpack_require__(315);var _AppState2=_interopRequireDefault(_AppState);
	var _AsyncStorage=__webpack_require__(424);var _AsyncStorage2=_interopRequireDefault(_AsyncStorage);
	var _Dimensions=__webpack_require__(425);var _Dimensions2=_interopRequireDefault(_Dimensions);
	var _Easing=__webpack_require__(246);var _Easing2=_interopRequireDefault(_Easing);
	var _I18nManager=__webpack_require__(269);var _I18nManager2=_interopRequireDefault(_I18nManager);
	var _InteractionManager=__webpack_require__(428);var _InteractionManager2=_interopRequireDefault(_InteractionManager);
	var _NetInfo=__webpack_require__(429);var _NetInfo2=_interopRequireDefault(_NetInfo);
	var _PanResponder=__webpack_require__(430);var _PanResponder2=_interopRequireDefault(_PanResponder);
	var _PixelRatio=__webpack_require__(432);var _PixelRatio2=_interopRequireDefault(_PixelRatio);
	var _Platform=__webpack_require__(433);var _Platform2=_interopRequireDefault(_Platform);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _UIManager=__webpack_require__(262);var _UIManager2=_interopRequireDefault(_UIManager);
	var _Vibration=__webpack_require__(434);var _Vibration2=_interopRequireDefault(_Vibration);


	var _ActivityIndicator=__webpack_require__(435);var _ActivityIndicator2=_interopRequireDefault(_ActivityIndicator);
	var _Image=__webpack_require__(259);var _Image2=_interopRequireDefault(_Image);
	var _ListView=__webpack_require__(436);var _ListView2=_interopRequireDefault(_ListView);
	var _ProgressBar=__webpack_require__(454);var _ProgressBar2=_interopRequireDefault(_ProgressBar);
	var _ScrollView=__webpack_require__(440);var _ScrollView2=_interopRequireDefault(_ScrollView);
	var _Switch=__webpack_require__(455);var _Switch2=_interopRequireDefault(_Switch);
	var _Text=__webpack_require__(311);var _Text2=_interopRequireDefault(_Text);
	var _TextInput=__webpack_require__(456);var _TextInput2=_interopRequireDefault(_TextInput);
	var _Touchable=__webpack_require__(475);var _Touchable2=_interopRequireDefault(_Touchable);
	var _TouchableBounce=__webpack_require__(479);var _TouchableBounce2=_interopRequireDefault(_TouchableBounce);
	var _TouchableHighlight=__webpack_require__(480);var _TouchableHighlight2=_interopRequireDefault(_TouchableHighlight);
	var _TouchableOpacity=__webpack_require__(485);var _TouchableOpacity2=_interopRequireDefault(_TouchableOpacity);
	var _TouchableWithoutFeedback=__webpack_require__(482);var _TouchableWithoutFeedback2=_interopRequireDefault(_TouchableWithoutFeedback);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);


	var _NativeModules=__webpack_require__(486);var _NativeModules2=_interopRequireDefault(_NativeModules);



	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _EdgeInsetsPropType=__webpack_require__(310);var _EdgeInsetsPropType2=_interopRequireDefault(_EdgeInsetsPropType);
	var _PointPropType=__webpack_require__(487);var _PointPropType2=_interopRequireDefault(_PointPropType);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// modules
	// components
	var ReactNative={
	// top-level API
	findNodeHandle:_findNodeHandle2.default,
	render:_reactDom2.default.render,
	unmountComponentAtNode:_reactDom2.default.unmountComponentAtNode,
	// web-only
	renderToStaticMarkup:_server2.default.renderToStaticMarkup,
	renderToString:_server2.default.renderToString,

	// APIs
	Animated:_Animated2.default,
	AppRegistry:_AppRegistry2.default,
	AppState:_AppState2.default,
	AsyncStorage:_AsyncStorage2.default,
	Dimensions:_Dimensions2.default,
	Easing:_Easing2.default,
	I18nManager:_I18nManager2.default,
	InteractionManager:_InteractionManager2.default,
	NetInfo:_NetInfo2.default,
	PanResponder:_PanResponder2.default,
	PixelRatio:_PixelRatio2.default,
	Platform:_Platform2.default,
	StyleSheet:_StyleSheet2.default,
	UIManager:_UIManager2.default,
	Vibration:_Vibration2.default,

	// components
	ActivityIndicator:_ActivityIndicator2.default,
	Image:_Image2.default,
	ListView:_ListView2.default,
	ProgressBar:_ProgressBar2.default,
	ScrollView:_ScrollView2.default,
	Switch:_Switch2.default,
	Text:_Text2.default,
	TextInput:_TextInput2.default,
	Touchable:_Touchable2.default,
	TouchableBounce:_TouchableBounce2.default,
	TouchableHighlight:_TouchableHighlight2.default,
	TouchableOpacity:_TouchableOpacity2.default,
	TouchableWithoutFeedback:_TouchableWithoutFeedback2.default,
	View:_View2.default,

	// modules
	NativeModules:_NativeModules2.default,

	// propTypes
	ColorPropType:_ColorPropType2.default,
	EdgeInsetsPropType:_EdgeInsetsPropType2.default,
	PointPropType:_PointPropType2.default};// propTypes
	// APIs

	module.exports=ReactNative;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	

	var _EventConstants=__webpack_require__(32);var _EventConstants2=_interopRequireDefault(_EventConstants);
	var _EventPluginRegistry=__webpack_require__(33);var _EventPluginRegistry2=_interopRequireDefault(_EventPluginRegistry);
	var _normalizeNativeEvent=__webpack_require__(34);var _normalizeNativeEvent2=_interopRequireDefault(_normalizeNativeEvent);
	var _ResponderEventPlugin=__webpack_require__(35);var _ResponderEventPlugin2=_interopRequireDefault(_ResponderEventPlugin);
	var _ResponderTouchHistoryStore=__webpack_require__(44);var _ResponderTouchHistoryStore2=_interopRequireDefault(_ResponderTouchHistoryStore);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var _EventConstants$topLe=











	_EventConstants2.default.topLevelTypes;// based on https://github.com/facebook/react/pull/4303/files
	var topMouseDown=_EventConstants$topLe.topMouseDown;var topMouseMove=_EventConstants$topLe.topMouseMove;var topMouseUp=_EventConstants$topLe.topMouseUp;var topScroll=_EventConstants$topLe.topScroll;var topSelectionChange=_EventConstants$topLe.topSelectionChange;var topTouchCancel=_EventConstants$topLe.topTouchCancel;var topTouchEnd=_EventConstants$topLe.topTouchEnd;var topTouchMove=_EventConstants$topLe.topTouchMove;var topTouchStart=_EventConstants$topLe.topTouchStart;
	var endDependencies=[topTouchCancel,topTouchEnd,topMouseUp];
	var moveDependencies=[topTouchMove,topMouseMove];
	var startDependencies=[topTouchStart,topMouseDown];

	/**
	 * Setup ResponderEventPlugin dependencies
	 */
	_ResponderEventPlugin2.default.eventTypes.responderMove.dependencies=moveDependencies;
	_ResponderEventPlugin2.default.eventTypes.responderEnd.dependencies=endDependencies;
	_ResponderEventPlugin2.default.eventTypes.responderStart.dependencies=startDependencies;
	_ResponderEventPlugin2.default.eventTypes.responderRelease.dependencies=endDependencies;
	_ResponderEventPlugin2.default.eventTypes.responderTerminationRequest.dependencies=[];
	_ResponderEventPlugin2.default.eventTypes.responderGrant.dependencies=[];
	_ResponderEventPlugin2.default.eventTypes.responderReject.dependencies=[];
	_ResponderEventPlugin2.default.eventTypes.responderTerminate.dependencies=[];
	_ResponderEventPlugin2.default.eventTypes.moveShouldSetResponder.dependencies=moveDependencies;
	_ResponderEventPlugin2.default.eventTypes.selectionChangeShouldSetResponder.dependencies=[topSelectionChange];
	_ResponderEventPlugin2.default.eventTypes.scrollShouldSetResponder.dependencies=[topScroll];
	_ResponderEventPlugin2.default.eventTypes.startShouldSetResponder.dependencies=startDependencies;

	var originalRecordTouchTrack=_ResponderTouchHistoryStore2.default.recordTouchTrack;

	_ResponderTouchHistoryStore2.default.recordTouchTrack=function(topLevelType,nativeEvent){
	// Filter out mouse-move events when the mouse button is not down
	if(topLevelType===topMouseMove&&!_ResponderTouchHistoryStore2.default.touchHistory.touchBank.length){
	return;
	}

	var normalizedEvent=(0,_normalizeNativeEvent2.default)(nativeEvent);
	originalRecordTouchTrack.call(_ResponderTouchHistoryStore2.default,topLevelType,normalizedEvent);
	};

	_EventPluginRegistry2.default.injectEventPluginsByName({
	ResponderEventPlugin:_ResponderEventPlugin2.default});

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(22);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

/***/ },
/* 34 */
/***/ function(module, exports) {

	// Mobile Safari re-uses touch objects, so we copy the properties we want and normalize the identifier
	var normalizeTouches=function normalizeTouches(){var touches=arguments.length<=0||arguments[0]===undefined?[]:arguments[0];return Array.prototype.slice.call(touches).map(function(touch){
	var identifier=touch.identifier>20?touch.identifier%20:touch.identifier;

	var rect=touch.target&&touch.target.getBoundingClientRect();
	var locationX=touch.pageX-rect.left;
	var locationY=touch.pageY-rect.top;

	return{
	_normalized:true,
	clientX:touch.clientX,
	clientY:touch.clientY,
	force:touch.force,
	locationX:locationX,
	locationY:locationY,
	identifier:identifier,
	pageX:touch.pageX,
	pageY:touch.pageY,
	radiusX:touch.radiusX,
	radiusY:touch.radiusY,
	rotationAngle:touch.rotationAngle,
	screenX:touch.screenX,
	screenY:touch.screenY,
	target:touch.target,
	// normalize the timestamp
	// https://stackoverflow.com/questions/26177087/ios-8-mobile-safari-wrong-timestamp-on-touch-events
	timestamp:Date.now()};

	});};

	function normalizeTouchEvent(nativeEvent){
	var changedTouches=normalizeTouches(nativeEvent.changedTouches);
	var touches=normalizeTouches(nativeEvent.touches);

	var event={
	_normalized:true,
	changedTouches:changedTouches,
	pageX:nativeEvent.pageX,
	pageY:nativeEvent.pageY,
	preventDefault:nativeEvent.preventDefault.bind(nativeEvent),
	stopImmediatePropagation:nativeEvent.stopImmediatePropagation.bind(nativeEvent),
	stopPropagation:nativeEvent.stopPropagation.bind(nativeEvent),
	target:nativeEvent.target,
	// normalize the timestamp
	// https://stackoverflow.com/questions/26177087/ios-8-mobile-safari-wrong-timestamp-on-touch-events
	timestamp:Date.now(),
	touches:touches};


	if(changedTouches[0]){
	event.identifier=changedTouches[0].identifier;
	event.pageX=changedTouches[0].pageX;
	event.pageY=changedTouches[0].pageY;
	event.locationX=changedTouches[0].locationX;
	event.locationY=changedTouches[0].locationY;
	}

	return event;
	}

	function normalizeMouseEvent(nativeEvent){
	var touches=[{
	_normalized:true,
	clientX:nativeEvent.clientX,
	clientY:nativeEvent.clientY,
	force:nativeEvent.force,
	locationX:nativeEvent.clientX,
	locationY:nativeEvent.clientY,
	identifier:0,
	pageX:nativeEvent.pageX,
	pageY:nativeEvent.pageY,
	screenX:nativeEvent.screenX,
	screenY:nativeEvent.screenY,
	target:nativeEvent.target,
	timestamp:Date.now()}];

	return{
	_normalized:true,
	changedTouches:touches,
	identifier:touches[0].identifier,
	locationX:nativeEvent.offsetX,
	locationY:nativeEvent.offsetY,
	pageX:nativeEvent.pageX,
	pageY:nativeEvent.pageY,
	preventDefault:nativeEvent.preventDefault.bind(nativeEvent),
	stopImmediatePropagation:nativeEvent.stopImmediatePropagation.bind(nativeEvent),
	stopPropagation:nativeEvent.stopPropagation.bind(nativeEvent),
	target:nativeEvent.target,
	timestamp:touches[0].timestamp,
	touches:nativeEvent.type==='mouseup'?[]:touches};

	}

	function normalizeNativeEvent(nativeEvent){
	if(nativeEvent._normalized){return nativeEvent;}
	var eventType=nativeEvent.type||'';
	var mouse=eventType.indexOf('mouse')>=0;
	return mouse?normalizeMouseEvent(nativeEvent):normalizeTouchEvent(nativeEvent);
	}

	module.exports=normalizeNativeEvent;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ResponderEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(32);
	var EventPluginUtils = __webpack_require__(36);
	var EventPropagators = __webpack_require__(38);
	var ResponderSyntheticEvent = __webpack_require__(42);
	var ResponderTouchHistoryStore = __webpack_require__(44);

	var accumulate = __webpack_require__(45);
	var keyOf = __webpack_require__(24);

	var isStartish = EventPluginUtils.isStartish;
	var isMoveish = EventPluginUtils.isMoveish;
	var isEndish = EventPluginUtils.isEndish;
	var executeDirectDispatch = EventPluginUtils.executeDirectDispatch;
	var hasDispatches = EventPluginUtils.hasDispatches;
	var executeDispatchesInOrderStopAtTrue = EventPluginUtils.executeDispatchesInOrderStopAtTrue;

	/**
	 * Instance of element that should respond to touch/move types of interactions,
	 * as indicated explicitly by relevant callbacks.
	 */
	var responderInst = null;

	/**
	 * Count of current touches. A textInput should become responder iff the
	 * selection changes while there is a touch on the screen.
	 */
	var trackedTouchCount = 0;

	/**
	 * Last reported number of active touches.
	 */
	var previousActiveTouches = 0;

	var changeResponder = function (nextResponderInst, blockHostResponder) {
	  var oldResponderInst = responderInst;
	  responderInst = nextResponderInst;
	  if (ResponderEventPlugin.GlobalResponderHandler !== null) {
	    ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
	  }
	};

	var eventTypes = {
	  /**
	   * On a `touchStart`/`mouseDown`, is it desired that this element become the
	   * responder?
	   */
	  startShouldSetResponder: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStartShouldSetResponder: null }),
	      captured: keyOf({ onStartShouldSetResponderCapture: null })
	    }
	  },

	  /**
	   * On a `scroll`, is it desired that this element become the responder? This
	   * is usually not needed, but should be used to retroactively infer that a
	   * `touchStart` had occurred during momentum scroll. During a momentum scroll,
	   * a touch start will be immediately followed by a scroll event if the view is
	   * currently scrolling.
	   *
	   * TODO: This shouldn't bubble.
	   */
	  scrollShouldSetResponder: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScrollShouldSetResponder: null }),
	      captured: keyOf({ onScrollShouldSetResponderCapture: null })
	    }
	  },

	  /**
	   * On text selection change, should this element become the responder? This
	   * is needed for text inputs or other views with native selection, so the
	   * JS view can claim the responder.
	   *
	   * TODO: This shouldn't bubble.
	   */
	  selectionChangeShouldSetResponder: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelectionChangeShouldSetResponder: null }),
	      captured: keyOf({ onSelectionChangeShouldSetResponderCapture: null })
	    }
	  },

	  /**
	   * On a `touchMove`/`mouseMove`, is it desired that this element become the
	   * responder?
	   */
	  moveShouldSetResponder: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMoveShouldSetResponder: null }),
	      captured: keyOf({ onMoveShouldSetResponderCapture: null })
	    }
	  },

	  /**
	   * Direct responder events dispatched directly to responder. Do not bubble.
	   */
	  responderStart: { registrationName: keyOf({ onResponderStart: null }) },
	  responderMove: { registrationName: keyOf({ onResponderMove: null }) },
	  responderEnd: { registrationName: keyOf({ onResponderEnd: null }) },
	  responderRelease: { registrationName: keyOf({ onResponderRelease: null }) },
	  responderTerminationRequest: {
	    registrationName: keyOf({ onResponderTerminationRequest: null })
	  },
	  responderGrant: { registrationName: keyOf({ onResponderGrant: null }) },
	  responderReject: { registrationName: keyOf({ onResponderReject: null }) },
	  responderTerminate: { registrationName: keyOf({ onResponderTerminate: null }) }
	};

	/**
	 *
	 * Responder System:
	 * ----------------
	 *
	 * - A global, solitary "interaction lock" on a view.
	 * - If a node becomes the responder, it should convey visual feedback
	 *   immediately to indicate so, either by highlighting or moving accordingly.
	 * - To be the responder means, that touches are exclusively important to that
	 *   responder view, and no other view.
	 * - While touches are still occurring, the responder lock can be transferred to
	 *   a new view, but only to increasingly "higher" views (meaning ancestors of
	 *   the current responder).
	 *
	 * Responder being granted:
	 * ------------------------
	 *
	 * - Touch starts, moves, and scrolls can cause an ID to become the responder.
	 * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to
	 *   the "appropriate place".
	 * - If nothing is currently the responder, the "appropriate place" is the
	 *   initiating event's `targetID`.
	 * - If something *is* already the responder, the "appropriate place" is the
	 *   first common ancestor of the event target and the current `responderInst`.
	 * - Some negotiation happens: See the timing diagram below.
	 * - Scrolled views automatically become responder. The reasoning is that a
	 *   platform scroll view that isn't built on top of the responder system has
	 *   began scrolling, and the active responder must now be notified that the
	 *   interaction is no longer locked to it - the system has taken over.
	 *
	 * - Responder being released:
	 *   As soon as no more touches that *started* inside of descendants of the
	 *   *current* responderInst, an `onResponderRelease` event is dispatched to the
	 *   current responder, and the responder lock is released.
	 *
	 * TODO:
	 * - on "end", a callback hook for `onResponderEndShouldRemainResponder` that
	 *   determines if the responder lock should remain.
	 * - If a view shouldn't "remain" the responder, any active touches should by
	 *   default be considered "dead" and do not influence future negotiations or
	 *   bubble paths. It should be as if those touches do not exist.
	 * -- For multitouch: Usually a translate-z will choose to "remain" responder
	 *  after one out of many touches ended. For translate-y, usually the view
	 *  doesn't wish to "remain" responder after one of many touches end.
	 * - Consider building this on top of a `stopPropagation` model similar to
	 *   `W3C` events.
	 * - Ensure that `onResponderTerminate` is called on touch cancels, whether or
	 *   not `onResponderTerminationRequest` returns `true` or `false`.
	 *
	 */

	/*                                             Negotiation Performed
	                                             +-----------------------+
	                                            /                         \
	Process low level events to    +     Current Responder      +   wantsResponderID
	determine who to perform negot-|   (if any exists at all)   |
	iation/transition              | Otherwise just pass through|
	-------------------------------+----------------------------+------------------+
	Bubble to find first ID        |                            |
	to return true:wantsResponderID|                            |
	                               |                            |
	     +-------------+           |                            |
	     | onTouchStart|           |                            |
	     +------+------+     none  |                            |
	            |            return|                            |
	+-----------v-------------+true| +------------------------+ |
	|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+
	+-----------+-------------+    | +------------------------+ |          |
	            |                  |                            | +--------+-------+
	            | returned true for|       false:REJECT +-------->|onResponderReject
	            | wantsResponderID |                    |       | +----------------+
	            | (now attempt     | +------------------+-----+ |
	            |  handoff)        | |   onResponder          | |
	            +------------------->|      TerminationRequest| |
	                               | +------------------+-----+ |
	                               |                    |       | +----------------+
	                               |         true:GRANT +-------->|onResponderGrant|
	                               |                            | +--------+-------+
	                               | +------------------------+ |          |
	                               | |   onResponderTerminate |<-----------+
	                               | +------------------+-----+ |
	                               |                    |       | +----------------+
	                               |                    +-------->|onResponderStart|
	                               |                            | +----------------+
	Bubble to find first ID        |                            |
	to return true:wantsResponderID|                            |
	                               |                            |
	     +-------------+           |                            |
	     | onTouchMove |           |                            |
	     +------+------+     none  |                            |
	            |            return|                            |
	+-----------v-------------+true| +------------------------+ |
	|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+
	+-----------+-------------+    | +------------------------+ |          |
	            |                  |                            | +--------+-------+
	            | returned true for|       false:REJECT +-------->|onResponderRejec|
	            | wantsResponderID |                    |       | +----------------+
	            | (now attempt     | +------------------+-----+ |
	            |  handoff)        | |   onResponder          | |
	            +------------------->|      TerminationRequest| |
	                               | +------------------+-----+ |
	                               |                    |       | +----------------+
	                               |         true:GRANT +-------->|onResponderGrant|
	                               |                            | +--------+-------+
	                               | +------------------------+ |          |
	                               | |   onResponderTerminate |<-----------+
	                               | +------------------+-----+ |
	                               |                    |       | +----------------+
	                               |                    +-------->|onResponderMove |
	                               |                            | +----------------+
	                               |                            |
	                               |                            |
	      Some active touch started|                            |
	      inside current responder | +------------------------+ |
	      +------------------------->|      onResponderEnd    | |
	      |                        | +------------------------+ |
	  +---+---------+              |                            |
	  | onTouchEnd  |              |                            |
	  +---+---------+              |                            |
	      |                        | +------------------------+ |
	      +------------------------->|     onResponderEnd     | |
	      No active touches started| +-----------+------------+ |
	      inside current responder |             |              |
	                               |             v              |
	                               | +------------------------+ |
	                               | |    onResponderRelease  | |
	                               | +------------------------+ |
	                               |                            |
	                               +                            + */

	/**
	 * A note about event ordering in the `EventPluginHub`.
	 *
	 * Suppose plugins are injected in the following order:
	 *
	 * `[R, S, C]`
	 *
	 * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for
	 * `onClick` etc) and `R` is `ResponderEventPlugin`.
	 *
	 * "Deferred-Dispatched Events":
	 *
	 * - The current event plugin system will traverse the list of injected plugins,
	 *   in order, and extract events by collecting the plugin's return value of
	 *   `extractEvents()`.
	 * - These events that are returned from `extractEvents` are "deferred
	 *   dispatched events".
	 * - When returned from `extractEvents`, deferred-dispatched events contain an
	 *   "accumulation" of deferred dispatches.
	 * - These deferred dispatches are accumulated/collected before they are
	 *   returned, but processed at a later time by the `EventPluginHub` (hence the
	 *   name deferred).
	 *
	 * In the process of returning their deferred-dispatched events, event plugins
	 * themselves can dispatch events on-demand without returning them from
	 * `extractEvents`. Plugins might want to do this, so that they can use event
	 * dispatching as a tool that helps them decide which events should be extracted
	 * in the first place.
	 *
	 * "On-Demand-Dispatched Events":
	 *
	 * - On-demand-dispatched events are not returned from `extractEvents`.
	 * - On-demand-dispatched events are dispatched during the process of returning
	 *   the deferred-dispatched events.
	 * - They should not have side effects.
	 * - They should be avoided, and/or eventually be replaced with another
	 *   abstraction that allows event plugins to perform multiple "rounds" of event
	 *   extraction.
	 *
	 * Therefore, the sequence of event dispatches becomes:
	 *
	 * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)
	 * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)
	 * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)
	 * - `R`s extracted events (if any)   (dispatched by `EventPluginHub`)
	 * - `S`s extracted events (if any)   (dispatched by `EventPluginHub`)
	 * - `C`s extracted events (if any)   (dispatched by `EventPluginHub`)
	 *
	 * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`
	 * on-demand dispatch returns `true` (and some other details are satisfied) the
	 * `onResponderGrant` deferred dispatched event is returned from
	 * `extractEvents`. The sequence of dispatch executions in this case
	 * will appear as follows:
	 *
	 * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)
	 * - `touchStartCapture`       (`EventPluginHub` dispatches as usual)
	 * - `touchStart`              (`EventPluginHub` dispatches as usual)
	 * - `responderGrant/Reject`   (`EventPluginHub` dispatches as usual)
	 */

	function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === EventConstants.topLevelTypes.topSelectionChange ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;

	  // TODO: stop one short of the current responder.
	  var bubbleShouldSetFrom = !responderInst ? targetInst : EventPluginUtils.getLowestCommonAncestor(responderInst, targetInst);

	  // When capturing/bubbling the "shouldSet" event, we want to skip the target
	  // (deepest ID) if it happens to be the current responder. The reasoning:
	  // It's strange to get an `onMoveShouldSetResponder` when you're *already*
	  // the responder.
	  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;
	  var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
	  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
	  if (skipOverBubbleShouldSetFrom) {
	    EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);
	  } else {
	    EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);
	  }
	  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);
	  if (!shouldSetEvent.isPersistent()) {
	    shouldSetEvent.constructor.release(shouldSetEvent);
	  }

	  if (!wantsResponderInst || wantsResponderInst === responderInst) {
	    return null;
	  }
	  var extracted;
	  var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
	  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

	  EventPropagators.accumulateDirectDispatches(grantEvent);
	  var blockHostResponder = executeDirectDispatch(grantEvent) === true;
	  if (responderInst) {

	    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
	    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
	    EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
	    var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);
	    if (!terminationRequestEvent.isPersistent()) {
	      terminationRequestEvent.constructor.release(terminationRequestEvent);
	    }

	    if (shouldSwitch) {
	      var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
	      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
	      EventPropagators.accumulateDirectDispatches(terminateEvent);
	      extracted = accumulate(extracted, [grantEvent, terminateEvent]);
	      changeResponder(wantsResponderInst, blockHostResponder);
	    } else {
	      var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
	      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
	      EventPropagators.accumulateDirectDispatches(rejectEvent);
	      extracted = accumulate(extracted, rejectEvent);
	    }
	  } else {
	    extracted = accumulate(extracted, grantEvent);
	    changeResponder(wantsResponderInst, blockHostResponder);
	  }
	  return extracted;
	}

	/**
	 * A transfer is a negotiation between a currently set responder and the next
	 * element to claim responder status. Any start event could trigger a transfer
	 * of responderInst. Any move event could trigger a transfer.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @return {boolean} True if a transfer of responder could possibly occur.
	 */
	function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
	  return topLevelInst && (
	  // responderIgnoreScroll: We are trying to migrate away from specifically
	  // tracking native scroll events here and responderIgnoreScroll indicates we
	  // will send topTouchCancel to handle canceling touch events instead
	  topLevelType === EventConstants.topLevelTypes.topScroll && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === EventConstants.topLevelTypes.topSelectionChange || isStartish(topLevelType) || isMoveish(topLevelType));
	}

	/**
	 * Returns whether or not this touch end event makes it such that there are no
	 * longer any touches that started inside of the current `responderInst`.
	 *
	 * @param {NativeEvent} nativeEvent Native touch end event.
	 * @return {boolean} Whether or not this touch end event ends the responder.
	 */
	function noResponderTouches(nativeEvent) {
	  var touches = nativeEvent.touches;
	  if (!touches || touches.length === 0) {
	    return true;
	  }
	  for (var i = 0; i < touches.length; i++) {
	    var activeTouch = touches[i];
	    var target = activeTouch.target;
	    if (target !== null && target !== undefined && target !== 0) {
	      // Is the original touch location inside of the current responder?
	      var targetInst = EventPluginUtils.getInstanceFromNode(target);
	      if (EventPluginUtils.isAncestor(responderInst, targetInst)) {
	        return false;
	      }
	    }
	  }
	  return true;
	}

	var ResponderEventPlugin = {

	  /* For unit testing only */
	  _getResponderID: function () {
	    return responderInst ? responderInst._rootNodeID : null;
	  },

	  eventTypes: eventTypes,

	  /**
	   * We must be resilient to `targetInst` being `null` on `touchMove` or
	   * `touchEnd`. On certain platforms, this means that a native scroll has
	   * assumed control and the original touch targets are destroyed.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (isStartish(topLevelType)) {
	      trackedTouchCount += 1;
	    } else if (isEndish(topLevelType)) {
	      if (trackedTouchCount >= 0) {
	        trackedTouchCount -= 1;
	      } else {
	        console.error('Ended a touch event which was not counted in `trackedTouchCount`.');
	        return null;
	      }
	    }

	    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

	    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;
	    // Responder may or may not have transferred on a new touch start/move.
	    // Regardless, whoever is the responder after any potential transfer, we
	    // direct all touch start/move/ends to them in the form of
	    // `onResponderMove/Start/End`. These will be called for *every* additional
	    // finger that move/start/end, dispatched directly to whoever is the
	    // current responder at that moment, until the responder is "released".
	    //
	    // These multiple individual change touch events are are always bookended
	    // by `onResponderGrant`, and one of
	    // (`onResponderRelease/onResponderTerminate`).
	    var isResponderTouchStart = responderInst && isStartish(topLevelType);
	    var isResponderTouchMove = responderInst && isMoveish(topLevelType);
	    var isResponderTouchEnd = responderInst && isEndish(topLevelType);
	    var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;

	    if (incrementalTouch) {
	      var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
	      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
	      EventPropagators.accumulateDirectDispatches(gesture);
	      extracted = accumulate(extracted, gesture);
	    }

	    var isResponderTerminate = responderInst && topLevelType === EventConstants.topLevelTypes.topTouchCancel;
	    var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);
	    var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
	    if (finalTouch) {
	      var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
	      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
	      EventPropagators.accumulateDirectDispatches(finalEvent);
	      extracted = accumulate(extracted, finalEvent);
	      changeResponder(null);
	    }

	    var numberActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
	    if (ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches) {
	      ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches);
	    }
	    previousActiveTouches = numberActiveTouches;

	    return extracted;
	  },

	  GlobalResponderHandler: null,
	  GlobalInteractionHandler: null,

	  injection: {
	    /**
	     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler
	     * Object that handles any change in responder. Use this to inject
	     * integration with an existing touch handling system etc.
	     */
	    injectGlobalResponderHandler: function (GlobalResponderHandler) {
	      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
	    },

	    /**
	     * @param {{onChange: (numberActiveTouches) => void} GlobalInteractionHandler
	     * Object that handles any change in the number of active touches.
	     */
	    injectGlobalInteractionHandler: function (GlobalInteractionHandler) {
	      ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
	    }
	  }
	};

	module.exports = ResponderEventPlugin;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var EventConstants = __webpack_require__(32);
	var ReactErrorUtils = __webpack_require__(37);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(32);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginUtils = __webpack_require__(36);

	var accumulateInto = __webpack_require__(40);
	var forEachAccumulated = __webpack_require__(41);
	var warning = __webpack_require__(10);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var EventPluginRegistry = __webpack_require__(33);
	var EventPluginUtils = __webpack_require__(36);
	var ReactErrorUtils = __webpack_require__(37);

	var accumulateInto = __webpack_require__(40);
	var forEachAccumulated = __webpack_require__(41);
	var invariant = __webpack_require__(7);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ },
/* 41 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ResponderSyntheticEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	/**
	 * `touchHistory` isn't actually on the native event, but putting it in the
	 * interface will ensure that it is cleaned up when pooled/destroyed. The
	 * `ResponderEventPlugin` will populate it appropriately.
	 */
	var ResponderEventInterface = {
	  touchHistory: function (nativeEvent) {
	    return null; // Actually doesn't even look at the native event.
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native event.
	 * @extends {SyntheticEvent}
	 */
	function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

	module.exports = ResponderSyntheticEvent;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);

	var emptyFunction = __webpack_require__(11);
	var warning = __webpack_require__(10);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ResponderTouchHistoryStore
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var EventPluginUtils = __webpack_require__(36);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var isEndish = EventPluginUtils.isEndish;
	var isMoveish = EventPluginUtils.isMoveish;
	var isStartish = EventPluginUtils.isStartish;

	/**
	 * Tracks the position and time of each active touch by `touch.identifier`. We
	 * should typically only see IDs in the range of 1-20 because IDs get recycled
	 * when touches end and start again.
	 */

	var MAX_TOUCH_BANK = 20;
	var touchBank = [];
	var touchHistory = {
	  touchBank: touchBank,
	  numberActiveTouches: 0,
	  // If there is only one active touch, we remember its location. This prevents
	  // us having to loop through all of the touches all the time in the most
	  // common case.
	  indexOfSingleActiveTouch: -1,
	  mostRecentTimeStamp: 0
	};

	function timestampForTouch(touch) {
	  // The legacy internal implementation provides "timeStamp", which has been
	  // renamed to "timestamp". Let both work for now while we iron it out
	  // TODO (evv): rename timeStamp to timestamp in internal code
	  return touch.timeStamp || touch.timestamp;
	}

	/**
	 * TODO: Instead of making gestures recompute filtered velocity, we could
	 * include a built in velocity computation that can be reused globally.
	 */
	function createTouchRecord(touch) {
	  return {
	    touchActive: true,
	    startPageX: touch.pageX,
	    startPageY: touch.pageY,
	    startTimeStamp: timestampForTouch(touch),
	    currentPageX: touch.pageX,
	    currentPageY: touch.pageY,
	    currentTimeStamp: timestampForTouch(touch),
	    previousPageX: touch.pageX,
	    previousPageY: touch.pageY,
	    previousTimeStamp: timestampForTouch(touch)
	  };
	}

	function resetTouchRecord(touchRecord, touch) {
	  touchRecord.touchActive = true;
	  touchRecord.startPageX = touch.pageX;
	  touchRecord.startPageY = touch.pageY;
	  touchRecord.startTimeStamp = timestampForTouch(touch);
	  touchRecord.currentPageX = touch.pageX;
	  touchRecord.currentPageY = touch.pageY;
	  touchRecord.currentTimeStamp = timestampForTouch(touch);
	  touchRecord.previousPageX = touch.pageX;
	  touchRecord.previousPageY = touch.pageY;
	  touchRecord.previousTimeStamp = timestampForTouch(touch);
	}

	function getTouchIdentifier(_ref) {
	  var identifier = _ref.identifier;

	  !(identifier != null) ?  false ? invariant(false, 'Touch object is missing identifier.') : _prodInvariant('138') : void 0;
	   false ? warning(identifier <= MAX_TOUCH_BANK, 'Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK) : void 0;
	  return identifier;
	}

	function recordTouchStart(touch) {
	  var identifier = getTouchIdentifier(touch);
	  var touchRecord = touchBank[identifier];
	  if (touchRecord) {
	    resetTouchRecord(touchRecord, touch);
	  } else {
	    touchBank[identifier] = createTouchRecord(touch);
	  }
	  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
	}

	function recordTouchMove(touch) {
	  var touchRecord = touchBank[getTouchIdentifier(touch)];
	  if (touchRecord) {
	    touchRecord.touchActive = true;
	    touchRecord.previousPageX = touchRecord.currentPageX;
	    touchRecord.previousPageY = touchRecord.currentPageY;
	    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;
	    touchRecord.currentPageX = touch.pageX;
	    touchRecord.currentPageY = touch.pageY;
	    touchRecord.currentTimeStamp = timestampForTouch(touch);
	    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
	  } else {
	    console.error('Cannot record touch move without a touch start.\n' + 'Touch Move: %s\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());
	  }
	}

	function recordTouchEnd(touch) {
	  var touchRecord = touchBank[getTouchIdentifier(touch)];
	  if (touchRecord) {
	    touchRecord.touchActive = false;
	    touchRecord.previousPageX = touchRecord.currentPageX;
	    touchRecord.previousPageY = touchRecord.currentPageY;
	    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;
	    touchRecord.currentPageX = touch.pageX;
	    touchRecord.currentPageY = touch.pageY;
	    touchRecord.currentTimeStamp = timestampForTouch(touch);
	    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
	  } else {
	    console.error('Cannot record touch end without a touch start.\n' + 'Touch End: %s\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());
	  }
	}

	function printTouch(touch) {
	  return JSON.stringify({
	    identifier: touch.identifier,
	    pageX: touch.pageX,
	    pageY: touch.pageY,
	    timestamp: timestampForTouch(touch)
	  });
	}

	function printTouchBank() {
	  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
	  if (touchBank.length > MAX_TOUCH_BANK) {
	    printed += ' (original size: ' + touchBank.length + ')';
	  }
	  return printed;
	}

	var ResponderTouchHistoryStore = {
	  recordTouchTrack: function (topLevelType, nativeEvent) {
	    if (isMoveish(topLevelType)) {
	      nativeEvent.changedTouches.forEach(recordTouchMove);
	    } else if (isStartish(topLevelType)) {
	      nativeEvent.changedTouches.forEach(recordTouchStart);
	      touchHistory.numberActiveTouches = nativeEvent.touches.length;
	      if (touchHistory.numberActiveTouches === 1) {
	        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;
	      }
	    } else if (isEndish(topLevelType)) {
	      nativeEvent.changedTouches.forEach(recordTouchEnd);
	      touchHistory.numberActiveTouches = nativeEvent.touches.length;
	      if (touchHistory.numberActiveTouches === 1) {
	        for (var i = 0; i < touchBank.length; i++) {
	          var touchTrackToCheck = touchBank[i];
	          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {
	            touchHistory.indexOfSingleActiveTouch = i;
	            break;
	          }
	        }
	        if (false) {
	          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
	          process.env.NODE_ENV !== 'production' ? warning(activeRecord != null && activeRecord.touchActive, 'Cannot find single active touch.') : void 0;
	        }
	      }
	    }
	  },


	  touchHistory: touchHistory
	};

	module.exports = ResponderTouchHistoryStore;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulate
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Accumulates items that must not be null or undefined.
	 *
	 * This is used to conserve memory by avoiding array allocations.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	function accumulate(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulate(...): Accumulated items must be not be null or undefined.') : _prodInvariant('29') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    return current.concat(next);
	  }

	  if (Array.isArray(next)) {
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulate;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
	var findNodeHandle=_reactDom2.default.findDOMNode;exports.default=
	findNodeHandle;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(48);


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactDefaultInjection = __webpack_require__(52);
	var ReactMount = __webpack_require__(163);
	var ReactReconciler = __webpack_require__(63);
	var ReactUpdates = __webpack_require__(60);
	var ReactVersion = __webpack_require__(28);

	var findDOMNode = __webpack_require__(168);
	var getHostComponentFromComposite = __webpack_require__(169);
	var renderSubtreeIntoContainer = __webpack_require__(170);
	var warning = __webpack_require__(10);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (false) {
	  var ReactInstrumentation = require('./ReactInstrumentation');
	  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
	  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	}

	module.exports = ReactDOM;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var DOMProperty = __webpack_require__(50);
	var ReactDOMComponentFlags = __webpack_require__(51);

	var invariant = __webpack_require__(7);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(53);
	var ChangeEventPlugin = __webpack_require__(59);
	var DefaultEventPluginOrder = __webpack_require__(71);
	var EnterLeaveEventPlugin = __webpack_require__(72);
	var HTMLDOMPropertyConfig = __webpack_require__(77);
	var ReactComponentBrowserEnvironment = __webpack_require__(78);
	var ReactDOMComponent = __webpack_require__(92);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactDOMEmptyComponent = __webpack_require__(134);
	var ReactDOMTreeTraversal = __webpack_require__(135);
	var ReactDOMTextComponent = __webpack_require__(136);
	var ReactDefaultBatchingStrategy = __webpack_require__(137);
	var ReactEventListener = __webpack_require__(138);
	var ReactInjection = __webpack_require__(141);
	var ReactReconcileTransaction = __webpack_require__(142);
	var SVGDOMPropertyConfig = __webpack_require__(150);
	var SelectEventPlugin = __webpack_require__(151);
	var SimpleEventPlugin = __webpack_require__(152);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(32);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(54);
	var FallbackCompositionState = __webpack_require__(55);
	var SyntheticCompositionEvent = __webpack_require__(57);
	var SyntheticInputEvent = __webpack_require__(58);

	var keyOf = __webpack_require__(24);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 54 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);

	var getTextContentAccessor = __webpack_require__(56);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(32);
	var EventPluginHub = __webpack_require__(39);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(54);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactUpdates = __webpack_require__(60);
	var SyntheticEvent = __webpack_require__(43);

	var getEventTarget = __webpack_require__(68);
	var isEventSupported = __webpack_require__(69);
	var isTextInputElement = __webpack_require__(70);
	var keyOf = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var CallbackQueue = __webpack_require__(61);
	var PooledClass = __webpack_require__(5);
	var ReactFeatureFlags = __webpack_require__(62);
	var ReactReconciler = __webpack_require__(63);
	var Transaction = __webpack_require__(67);

	var invariant = __webpack_require__(7);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);

	var invariant = __webpack_require__(7);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

/***/ },
/* 62 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(64);
	var ReactInstrumentation = __webpack_require__(66);

	var warning = __webpack_require__(10);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(65);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

/***/ },
/* 68 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 70 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(24);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(32);
	var EventPropagators = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(49);
	var SyntheticMouseEvent = __webpack_require__(73);

	var keyOf = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(74);
	var ViewportMetrics = __webpack_require__(75);

	var getEventModifierState = __webpack_require__(76);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	var getEventTarget = __webpack_require__(68);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 75 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 76 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(50);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(79);
	var ReactDOMIDOperations = __webpack_require__(91);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(80);
	var Danger = __webpack_require__(86);
	var ReactMultiChildUpdateTypes = __webpack_require__(90);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactInstrumentation = __webpack_require__(66);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(83);
	var setInnerHTML = __webpack_require__(82);
	var setTextContent = __webpack_require__(84);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(81);
	var setInnerHTML = __webpack_require__(82);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(83);
	var setTextContent = __webpack_require__(84);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 81 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);
	var DOMNamespaces = __webpack_require__(81);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(83);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);
	var escapeTextContentForBrowser = __webpack_require__(85);
	var setInnerHTML = __webpack_require__(82);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 85 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html


	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var DOMLazyTree = __webpack_require__(80);
	var ExecutionEnvironment = __webpack_require__(54);

	var createNodesFromMarkup = __webpack_require__(87);
	var emptyFunction = __webpack_require__(11);
	var invariant = __webpack_require__(7);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(54);

	var createArrayFromMixed = __webpack_require__(88);
	var getMarkupWrap = __webpack_require__(89);
	var invariant = __webpack_require__(7);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(7);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(54);

	var invariant = __webpack_require__(7);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(22);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(79);
	var ReactDOMComponentTree = __webpack_require__(49);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var AutoFocusUtils = __webpack_require__(93);
	var CSSPropertyOperations = __webpack_require__(95);
	var DOMLazyTree = __webpack_require__(80);
	var DOMNamespaces = __webpack_require__(81);
	var DOMProperty = __webpack_require__(50);
	var DOMPropertyOperations = __webpack_require__(103);
	var EventConstants = __webpack_require__(32);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginRegistry = __webpack_require__(33);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactDOMButton = __webpack_require__(108);
	var ReactDOMComponentFlags = __webpack_require__(51);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactDOMInput = __webpack_require__(110);
	var ReactDOMOption = __webpack_require__(112);
	var ReactDOMSelect = __webpack_require__(113);
	var ReactDOMTextarea = __webpack_require__(114);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactMultiChild = __webpack_require__(115);
	var ReactServerRenderingTransaction = __webpack_require__(130);

	var emptyFunction = __webpack_require__(11);
	var escapeTextContentForBrowser = __webpack_require__(85);
	var invariant = __webpack_require__(7);
	var isEventSupported = __webpack_require__(69);
	var keyOf = __webpack_require__(24);
	var shallowEqual = __webpack_require__(125);
	var validateDOMNesting = __webpack_require__(133);
	var warning = __webpack_require__(10);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (false) {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setContentChildForInstrumentation.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (false) {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(49);

	var focusNode = __webpack_require__(94);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(96);
	var ExecutionEnvironment = __webpack_require__(54);
	var ReactInstrumentation = __webpack_require__(66);

	var camelizeStyleName = __webpack_require__(97);
	var dangerousStyleValue = __webpack_require__(99);
	var hyphenateStyleName = __webpack_require__(100);
	var memoizeStringOnly = __webpack_require__(102);
	var warning = __webpack_require__(10);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

/***/ },
/* 96 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(98);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 98 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(96);
	var warning = __webpack_require__(10);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(101);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 101 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 102 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactInstrumentation = __webpack_require__(66);

	var quoteAttributeValueForBrowser = __webpack_require__(104);
	var warning = __webpack_require__(10);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(85);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var EventConstants = __webpack_require__(32);
	var EventPluginRegistry = __webpack_require__(33);
	var ReactEventEmitterMixin = __webpack_require__(106);
	var ViewportMetrics = __webpack_require__(75);

	var getVendorPrefixedEventName = __webpack_require__(107);
	var isEventSupported = __webpack_require__(69);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(39);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(109);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 109 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var DisabledInputUtils = __webpack_require__(109);
	var DOMPropertyOperations = __webpack_require__(103);
	var LinkedValueUtils = __webpack_require__(111);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactUpdates = __webpack_require__(60);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (false) {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactPropTypes = __webpack_require__(26);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactPropTypesSecret = __webpack_require__(27);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactChildren = __webpack_require__(4);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactDOMSelect = __webpack_require__(113);

	var warning = __webpack_require__(10);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var DisabledInputUtils = __webpack_require__(109);
	var LinkedValueUtils = __webpack_require__(111);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactUpdates = __webpack_require__(60);

	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var DisabledInputUtils = __webpack_require__(109);
	var LinkedValueUtils = __webpack_require__(111);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactUpdates = __webpack_require__(60);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactComponentEnvironment = __webpack_require__(116);
	var ReactInstanceMap = __webpack_require__(117);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactMultiChildUpdateTypes = __webpack_require__(90);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactReconciler = __webpack_require__(63);
	var ReactChildReconciler = __webpack_require__(118);

	var emptyFunction = __webpack_require__(11);
	var flattenChildren = __webpack_require__(129);
	var invariant = __webpack_require__(7);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (false) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(63);

	var instantiateReactComponent = __webpack_require__(120);
	var KeyEscapeUtils = __webpack_require__(15);
	var shouldUpdateReactComponent = __webpack_require__(126);
	var traverseAllChildren = __webpack_require__(13);
	var warning = __webpack_require__(10);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(124);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = require('./ReactComponentTreeHook');
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(119)))

/***/ },
/* 119 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactCompositeComponent = __webpack_require__(121);
	var ReactEmptyComponent = __webpack_require__(127);
	var ReactHostComponent = __webpack_require__(128);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (false) {
	    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactComponentEnvironment = __webpack_require__(116);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactElement = __webpack_require__(8);
	var ReactErrorUtils = __webpack_require__(37);
	var ReactInstanceMap = __webpack_require__(117);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactNodeTypes = __webpack_require__(122);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactReconciler = __webpack_require__(63);

	var checkReactTypeSpec = __webpack_require__(123);
	var emptyObject = __webpack_require__(18);
	var invariant = __webpack_require__(7);
	var shallowEqual = __webpack_require__(125);
	var shouldUpdateReactComponent = __webpack_require__(126);
	var warning = __webpack_require__(10);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var selfDebugID = 0;
	    if (false) {
	      selfDebugID = this._debugID;
	    }
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), selfDebugID);

	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (false) {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (false) {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (false) {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = this._debugID;
	      }
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), selfDebugID);

	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;

	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(27);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(124);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (false) {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = require('./ReactComponentTreeHook');
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(119)))

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeHook
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var itemMap;
	var rootIDSet;

	var itemByKey;
	var rootByKey;

	if (canUseCollections) {
	  itemMap = new Map();
	  rootIDSet = new Set();
	} else {
	  itemByKey = {};
	  rootByKey = {};
	}

	var unmountedIDs = [];

	// Use non-numeric keys to prevent V8 performance issues:
	// https://github.com/facebook/react/pull/7232
	function getKeyFromID(id) {
	  return '.' + id;
	}
	function getIDFromKey(key) {
	  return parseInt(key.substr(1), 10);
	}

	function get(id) {
	  if (canUseCollections) {
	    return itemMap.get(id);
	  } else {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  }
	}

	function remove(id) {
	  if (canUseCollections) {
	    itemMap['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  }
	}

	function create(id, element, parentID) {
	  var item = {
	    element: element,
	    parentID: parentID,
	    text: null,
	    childIDs: [],
	    isMounted: false,
	    updateCount: 0
	  };

	  if (canUseCollections) {
	    itemMap.set(id, item);
	  } else {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  }
	}

	function addRoot(id) {
	  if (canUseCollections) {
	    rootIDSet.add(id);
	  } else {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  }
	}

	function removeRoot(id) {
	  if (canUseCollections) {
	    rootIDSet['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  }
	}

	function getRegisteredIDs() {
	  if (canUseCollections) {
	    return Array.from(itemMap.keys());
	  } else {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  }
	}

	function getRootIDs() {
	  if (canUseCollections) {
	    return Array.from(rootIDSet.keys());
	  } else {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  }
	}

	function purgeDeep(id) {
	  var item = get(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    remove(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = get(id);
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = get(nextChildID);
	      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent ID is missing.
	      }
	      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    create(id, element, parentID);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = get(id);
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = get(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = get(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = get(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = get(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = get(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = get(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = get(id);
	    return item ? item.updateCount : 0;
	  },


	  getRegisteredIDs: getRegisteredIDs,

	  getRootIDs: getRootIDs
	};

	module.exports = ReactComponentTreeHook;

/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 126 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var invariant = __webpack_require__(7);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(15);
	var traverseAllChildren = __webpack_require__(13);
	var warning = __webpack_require__(10);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(124);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = require('./ReactComponentTreeHook');
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(119)))

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);
	var Transaction = __webpack_require__(67);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactServerUpdateQueue = __webpack_require__(131);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(132);
	var Transaction = __webpack_require__(67);
	var warning = __webpack_require__(10);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactInstanceMap = __webpack_require__(117);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactUpdates = __webpack_require__(60);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var emptyFunction = __webpack_require__(11);
	var warning = __webpack_require__(10);

	var validateDOMNesting = emptyFunction;

	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var DOMLazyTree = __webpack_require__(80);
	var ReactDOMComponentTree = __webpack_require__(49);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var DOMChildrenOperations = __webpack_require__(79);
	var DOMLazyTree = __webpack_require__(80);
	var ReactDOMComponentTree = __webpack_require__(49);

	var escapeTextContentForBrowser = __webpack_require__(85);
	var invariant = __webpack_require__(7);
	var validateDOMNesting = __webpack_require__(133);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactUpdates = __webpack_require__(60);
	var Transaction = __webpack_require__(67);

	var emptyFunction = __webpack_require__(11);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var EventListener = __webpack_require__(139);
	var ExecutionEnvironment = __webpack_require__(54);
	var PooledClass = __webpack_require__(5);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactUpdates = __webpack_require__(60);

	var getEventTarget = __webpack_require__(68);
	var getUnboundedScrollPosition = __webpack_require__(140);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(11);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;

/***/ },
/* 140 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(50);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginUtils = __webpack_require__(36);
	var ReactComponentEnvironment = __webpack_require__(116);
	var ReactClass = __webpack_require__(20);
	var ReactEmptyComponent = __webpack_require__(127);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactHostComponent = __webpack_require__(128);
	var ReactUpdates = __webpack_require__(60);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var CallbackQueue = __webpack_require__(61);
	var PooledClass = __webpack_require__(5);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactInputSelection = __webpack_require__(143);
	var ReactInstrumentation = __webpack_require__(66);
	var Transaction = __webpack_require__(67);
	var ReactUpdateQueue = __webpack_require__(132);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(144);

	var containsNode = __webpack_require__(146);
	var focusNode = __webpack_require__(94);
	var getActiveElement = __webpack_require__(149);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(54);

	var getNodeForCharacterOffset = __webpack_require__(145);
	var getTextContentAccessor = __webpack_require__(56);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 145 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(147);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(148);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 148 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 149 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 150 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(32);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(54);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactInputSelection = __webpack_require__(143);
	var SyntheticEvent = __webpack_require__(43);

	var getActiveElement = __webpack_require__(149);
	var isTextInputElement = __webpack_require__(70);
	var keyOf = __webpack_require__(24);
	var shallowEqual = __webpack_require__(125);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var EventConstants = __webpack_require__(32);
	var EventListener = __webpack_require__(139);
	var EventPropagators = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(49);
	var SyntheticAnimationEvent = __webpack_require__(153);
	var SyntheticClipboardEvent = __webpack_require__(154);
	var SyntheticEvent = __webpack_require__(43);
	var SyntheticFocusEvent = __webpack_require__(155);
	var SyntheticKeyboardEvent = __webpack_require__(156);
	var SyntheticMouseEvent = __webpack_require__(73);
	var SyntheticDragEvent = __webpack_require__(159);
	var SyntheticTouchEvent = __webpack_require__(160);
	var SyntheticTransitionEvent = __webpack_require__(161);
	var SyntheticUIEvent = __webpack_require__(74);
	var SyntheticWheelEvent = __webpack_require__(162);

	var emptyFunction = __webpack_require__(11);
	var getEventCharCode = __webpack_require__(157);
	var invariant = __webpack_require__(7);
	var keyOf = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(74);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(74);

	var getEventCharCode = __webpack_require__(157);
	var getEventKey = __webpack_require__(158);
	var getEventModifierState = __webpack_require__(76);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 157 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(157);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(73);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(74);

	var getEventModifierState = __webpack_require__(76);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(43);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(73);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var DOMLazyTree = __webpack_require__(80);
	var DOMProperty = __webpack_require__(50);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactDOMContainerInfo = __webpack_require__(164);
	var ReactDOMFeatureFlags = __webpack_require__(165);
	var ReactElement = __webpack_require__(8);
	var ReactFeatureFlags = __webpack_require__(62);
	var ReactInstanceMap = __webpack_require__(117);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactMarkupChecksum = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(63);
	var ReactUpdateQueue = __webpack_require__(132);
	var ReactUpdates = __webpack_require__(60);

	var emptyObject = __webpack_require__(18);
	var instantiateReactComponent = __webpack_require__(120);
	var invariant = __webpack_require__(7);
	var setInnerHTML = __webpack_require__(82);
	var shouldUpdateReactComponent = __webpack_require__(126);
	var warning = __webpack_require__(10);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(133);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;

/***/ },
/* 165 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(167);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 167 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(49);
	var ReactInstanceMap = __webpack_require__(117);

	var getHostComponentFromComposite = __webpack_require__(169);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(122);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(163);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(172);


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */

	'use strict';

	var ReactDefaultInjection = __webpack_require__(52);
	var ReactServerRendering = __webpack_require__(173);
	var ReactVersion = __webpack_require__(28);

	ReactDefaultInjection.inject();

	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};

	module.exports = ReactDOMServer;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactDOMContainerInfo = __webpack_require__(164);
	var ReactDefaultBatchingStrategy = __webpack_require__(137);
	var ReactElement = __webpack_require__(8);
	var ReactInstrumentation = __webpack_require__(66);
	var ReactMarkupChecksum = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(63);
	var ReactServerBatchingStrategy = __webpack_require__(174);
	var ReactServerRenderingTransaction = __webpack_require__(130);
	var ReactUpdates = __webpack_require__(60);

	var emptyObject = __webpack_require__(18);
	var instantiateReactComponent = __webpack_require__(120);
	var invariant = __webpack_require__(7);

	var pendingTransactions = 0;

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToStringImpl(element, makeStaticMarkup) {
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

	    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);

	    pendingTransactions++;

	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, true);
	      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0 /* parentDebugID */
	      );
	      if (false) {
	        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);
	      }
	      if (!makeStaticMarkup) {
	        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);
	      }
	      return markup;
	    }, null);
	  } finally {
	    pendingTransactions--;
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    if (!pendingTransactions) {
	      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	    }
	  }
	}

	/**
	 * Render a ReactElement to its initial HTML. This should only be used on the
	 * server.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostring
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;
	  return renderToStringImpl(element, false);
	}

	/**
	 * Similar to renderToString, except this doesn't create extra DOM attributes
	 * such as data-react-id that React uses internally.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostaticmarkup
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;
	  return renderToStringImpl(element, true);
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

/***/ },
/* 174 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 */

	'use strict';

	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};

	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _animated=__webpack_require__(176);var _animated2=_interopRequireDefault(_animated);
	var _Image=__webpack_require__(259);var _Image2=_interopRequireDefault(_Image);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _Text=__webpack_require__(311);var _Text2=_interopRequireDefault(_Text);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	_animated2.default.inject.FlattenStyle(_StyleSheet2.default.flatten);

	module.exports=_extends({},_animated2.default,{

	Image:_animated2.default.createAnimatedComponent(_Image2.default),
	Text:_animated2.default.createAnimatedComponent(_Text2.default),
	View:_animated2.default.createAnimatedComponent(_View2.default)});

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

	var invariant=__webpack_require__(177);

	var Animated=__webpack_require__(178);
	var AnimatedValue=__webpack_require__(179);
	var AnimatedValueXY=__webpack_require__(238);
	var AnimatedAddition=__webpack_require__(239);
	var AnimatedMultiplication=__webpack_require__(240);
	var AnimatedModulo=__webpack_require__(241);
	var AnimatedTemplate=__webpack_require__(242);
	var AnimatedTracking=__webpack_require__(243);
	var isAnimated=__webpack_require__(244);

	var Animation=__webpack_require__(186);
	var TimingAnimation=__webpack_require__(245);
	var DecayAnimation=__webpack_require__(250);
	var SpringAnimation=__webpack_require__(251);

































	var maybeVectorAnim=function(
	value,
	config,
	anim)
	{
	if(value instanceof AnimatedValueXY){
	var configX=_extends({},config);
	var configY=_extends({},config);
	for(var key in config){var _config$key=
	config[key];var x=_config$key.x;var y=_config$key.y;
	if(x!==undefined&&y!==undefined){
	configX[key]=x;
	configY[key]=y;}}


	var aX=anim(value.x,configX);
	var aY=anim(value.y,configY);
	// We use `stopTogether: false` here because otherwise tracking will break
	// because the second animation will get stopped before it can update.
	return parallel([aX,aY],{stopTogether:false});}

	return null;};


	var spring=function(
	value,
	config)
	{
	return maybeVectorAnim(value,config,spring)||{
	start:function(callback){
	var singleValue=value;
	var singleConfig=config;
	singleValue.stopTracking();
	if(config.toValue instanceof Animated){
	singleValue.track(new AnimatedTracking(
	singleValue,
	config.toValue,
	SpringAnimation,
	singleConfig,
	callback));}else 

	{
	singleValue.animate(new SpringAnimation(singleConfig),callback);}},



	stop:function(){
	value.stopAnimation();}};};




	var timing=function(
	value,
	config)
	{
	return maybeVectorAnim(value,config,timing)||{
	start:function(callback){
	var singleValue=value;
	var singleConfig=config;
	singleValue.stopTracking();
	if(config.toValue instanceof Animated){
	singleValue.track(new AnimatedTracking(
	singleValue,
	config.toValue,
	TimingAnimation,
	singleConfig,
	callback));}else 

	{
	singleValue.animate(new TimingAnimation(singleConfig),callback);}},



	stop:function(){
	value.stopAnimation();}};};




	var decay=function(
	value,
	config)
	{
	return maybeVectorAnim(value,config,decay)||{
	start:function(callback){
	var singleValue=value;
	var singleConfig=config;
	singleValue.stopTracking();
	singleValue.animate(new DecayAnimation(singleConfig),callback);},


	stop:function(){
	value.stopAnimation();}};};




	var sequence=function(
	animations)
	{
	var current=0;
	return {
	start:function(callback){
	var onComplete=function(result){
	if(!result.finished){
	callback&&callback(result);
	return;}


	current++;

	if(current===animations.length){
	callback&&callback(result);
	return;}


	animations[current].start(onComplete);};


	if(animations.length===0){
	callback&&callback({finished:true});}else 
	{
	animations[current].start(onComplete);}},



	stop:function(){
	if(current<animations.length){
	animations[current].stop();}}};};






	// If one is stopped, stop all.  default: true

	var parallel=function(
	animations,
	config)
	{
	var doneCount=0;
	// Make sure we only call stop() at most once for each animation
	var hasEnded={};
	var stopTogether=!(config&&config.stopTogether===false);

	var result={
	start:function(callback){
	if(doneCount===animations.length){
	callback&&callback({finished:true});
	return;}


	animations.forEach(function(animation,idx){
	var cb=function(endResult){
	hasEnded[idx]=true;
	doneCount++;
	if(doneCount===animations.length){
	doneCount=0;
	callback&&callback(endResult);
	return;}


	if(!endResult.finished&&stopTogether){
	result.stop();}};



	if(!animation){
	cb({finished:true});}else 
	{
	animation.start(cb);}});},




	stop:function(){
	animations.forEach(function(animation,idx){
	!hasEnded[idx]&&animation.stop();
	hasEnded[idx]=true;});}};




	return result;};


	var delay=function(time){
	// Would be nice to make a specialized implementation
	return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


	var stagger=function(
	time,
	animations)
	{
	return parallel(animations.map(function(animation,i){
	return sequence([
	delay(time*i),
	animation]);}));};







	var event=function(
	argMapping,
	config)
	{
	return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
	var traverse=function(recMapping,recEvt,key){
	if(typeof recEvt==='number'){
	invariant(
	recMapping instanceof AnimatedValue,
	'Bad mapping of type '+typeof recMapping+' for key '+key+
	', event value must map to AnimatedValue');

	recMapping.setValue(recEvt);
	return;}

	invariant(
	typeof recMapping==='object',
	'Bad mapping of type '+typeof recMapping+' for key '+key);

	invariant(
	typeof recEvt==='object',
	'Bad event of type '+typeof recEvt+' for key '+key);

	for(var key in recMapping){
	traverse(recMapping[key],recEvt[key],key);}};


	argMapping.forEach(function(mapping,idx){
	traverse(mapping,args[idx],'arg'+idx);});

	if(config&&config.listener){
	config.listener.apply(null,args);}};};




	/**
	 * Animations are an important part of modern UX, and the `Animated`
	 * library is designed to make them fluid, powerful, and easy to build and
	 * maintain.
	 *
	 * The simplest workflow is to create an `Animated.Value`, hook it up to one or
	 * more style attributes of an animated component, and then drive updates either
	 * via animations, such as `Animated.timing`, or by hooking into gestures like
	 * panning or scrolling via `Animated.event`.  `Animated.Value` can also bind to
	 * props other than style, and can be interpolated as well.  Here is a basic
	 * example of a container view that will fade in when it's mounted:
	 *
	 *```javascript
	 *  class FadeInView extends React.Component {
	 *    constructor(props) {
	 *      super(props);
	 *      this.state = {
	 *        fadeAnim: new Animated.Value(0), // init opacity 0
	 *      };
	 *    }
	 *    componentDidMount() {
	 *      Animated.timing(          // Uses easing functions
	 *        this.state.fadeAnim,    // The value to drive
	 *        {toValue: 1},           // Configuration
	 *      ).start();                // Don't forget start!
	 *    }
	 *    render() {
	 *      return (
	 *        <Animated.View          // Special animatable View
	 *          style={{opacity: this.state.fadeAnim}}> // Binds
	 *          {this.props.children}
	 *        </Animated.View>
	 *      );
	 *    }
	 *  }
	 *```
	 *
	 * Note that only animatable components can be animated.  `View`, `Text`, and
	 * `Image` are already provided, and you can create custom ones with
	 * `createAnimatedComponent`.  These special components do the magic of binding
	 * the animated values to the properties, and do targeted native updates to
	 * avoid the cost of the react render and reconciliation process on every frame.
	 * They also handle cleanup on unmount so they are safe by default.
	 *
	 * Animations are heavily configurable.  Custom and pre-defined easing
	 * functions, delays, durations, decay factors, spring constants, and more can
	 * all be tweaked depending on the type of animation.
	 *
	 * A single `Animated.Value` can drive any number of properties, and each
	 * property can be run through an interpolation first.  An interpolation maps
	 * input ranges to output ranges, typically using a linear interpolation but
	 * also supports easing functions.  By default, it will extrapolate the curve
	 * beyond the ranges given, but you can also have it clamp the output value.
	 *
	 * For example, you may want to think about your `Animated.Value` as going from
	 * 0 to 1, but animate the position from 150px to 0px and the opacity from 0 to
	 * 1. This can easily be done by modifying `style` in the example above like so:
	 *
	 *```javascript
	 *  style={{
	 *    opacity: this.state.fadeAnim, // Binds directly
	 *    transform: [{
	 *      translateY: this.state.fadeAnim.interpolate({
	 *        inputRange: [0, 1],
	 *        outputRange: [150, 0]  // 0 : 150, 0.5 : 75, 1 : 0
	 *      }),
	 *    }],
	 *  }}>
	 *```
	 *
	 * Animations can also be combined in complex ways using composition functions
	 * such as `sequence` and `parallel`, and can also be chained together simply
	 * by setting the `toValue` of one animation to be another `Animated.Value`.
	 *
	 * `Animated.ValueXY` is handy for 2D animations, like panning, and there are
	 * other helpful additions like `setOffset` and `getLayout` to aid with typical
	 * interaction patterns, like drag-and-drop.
	 *
	 * You can see more example usage in `AnimationExample.js`, the Gratuitous
	 * Animation App, and [Animations documentation guide](docs/animations.html).
	 *
	 * Note that `Animated` is designed to be fully serializable so that animations
	 * can be run in a high performance way, independent of the normal JavaScript
	 * event loop. This does influence the API, so keep that in mind when it seems a
	 * little trickier to do something compared to a fully synchronous system.
	 * Checkout `Animated.Value.addListener` as a way to work around some of these
	 * limitations, but use it sparingly since it might have performance
	 * implications in the future.
	 */
	module.exports={
	/**
	   * Standard value class for driving animations.  Typically initialized with
	   * `new Animated.Value(0);`
	   */
	Value:AnimatedValue,
	/**
	   * 2D value class for driving 2D animations, such as pan gestures.
	   */
	ValueXY:AnimatedValueXY,

	/**
	   * Animates a value from an initial velocity to zero based on a decay
	   * coefficient.
	   */
	decay:decay,
	/**
	   * Animates a value along a timed easing curve.  The `Easing` module has tons
	   * of pre-defined curves, or you can use your own function.
	   */
	timing:timing,
	/**
	   * Spring animation based on Rebound and Origami.  Tracks velocity state to
	   * create fluid motions as the `toValue` updates, and can be chained together.
	   */
	spring:spring,

	/**
	   * Creates a new Animated value composed from two Animated values added
	   * together.
	   */
	add:function add(a,b){
	return new AnimatedAddition(a,b);},

	/**
	   * Creates a new Animated value composed from two Animated values multiplied
	   * together.
	   */
	multiply:function multiply(a,b){
	return new AnimatedMultiplication(a,b);},


	/**
	   * Creates a new Animated value that is the (non-negative) modulo of the
	   * provided Animated value
	   */
	modulo:function modulo(a,modulus){
	return new AnimatedModulo(a,modulus);},


	/**
	   * Creates a new Animated value that is the specified string, with each
	   * substitution expression being separately animated and interpolated.
	   */
	template:function template(strings){for(var _len2=arguments.length,values=Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){values[_key2-1]=arguments[_key2];}
	return new AnimatedTemplate(strings,values);},


	/**
	   * Starts an animation after the given delay.
	   */
	delay:delay,
	/**
	   * Starts an array of animations in order, waiting for each to complete
	   * before starting the next.  If the current running animation is stopped, no
	   * following animations will be started.
	   */
	sequence:sequence,
	/**
	   * Starts an array of animations all at the same time.  By default, if one
	   * of the animations is stopped, they will all be stopped.  You can override
	   * this with the `stopTogether` flag.
	   */
	parallel:parallel,
	/**
	   * Array of animations may run in parallel (overlap), but are started in
	   * sequence with successive delays.  Nice for doing trailing effects.
	   */
	stagger:stagger,

	/**
	   *  Takes an array of mappings and extracts values from each arg accordingly,
	   *  then calls `setValue` on the mapped outputs.  e.g.
	   *
	   *```javascript
	   *  onScroll={Animated.event(
	   *    [{nativeEvent: {contentOffset: {x: this._scrollX}}}]
	   *    {listener},          // Optional async listener
	   *  )
	   *  ...
	   *  onPanResponderMove: Animated.event([
	   *    null,                // raw event arg ignored
	   *    {dx: this._panX},    // gestureState arg
	   *  ]),
	   *```
	   */
	event:event,

	/**
	   * Existential test to figure out if an object is an instance of the Animated
	   * class or not.
	   */
	isAnimated:isAnimated,

	/**
	   * Make any React component Animatable.  Used to create `Animated.View`, etc.
	   */
	createAnimatedComponent:__webpack_require__(253),

	inject:{
	ApplyAnimatedValues:__webpack_require__(258).inject,
	InteractionManager:__webpack_require__(181).inject,
	FlattenStyle:__webpack_require__(257).inject,
	RequestAnimationFrame:__webpack_require__(248).inject,
	CancelAnimationFrame:__webpack_require__(249).inject},


	__PropsOnlyForTests:__webpack_require__(254)};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 178 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	// Note(vjeux): this would be better as an interface but flow doesn't
	// support them yet
	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Animated=function(){function Animated(){_classCallCheck(this,Animated);}_createClass(Animated,[{key:'__attach',value:function __attach()
	{}},{key:'__detach',value:function __detach()
	{}},{key:'__getValue',value:function __getValue()
	{}},{key:'__getAnimatedValue',value:function __getAnimatedValue()
	{return this.__getValue();}},{key:'__addChild',value:function __addChild(
	child){}},{key:'__removeChild',value:function __removeChild(
	child){}},{key:'__getChildren',value:function __getChildren()
	{return [];}}]);return Animated;}();


	module.exports=Animated;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var AnimatedWithChildren=__webpack_require__(180);
	var InteractionManager=__webpack_require__(181);
	var AnimatedInterpolation=__webpack_require__(182);
	var Interpolation=__webpack_require__(183);
	var Animation=__webpack_require__(186);
	var guid=__webpack_require__(185);
	var Set=__webpack_require__(187);






	/**
	 * Animated works by building a directed acyclic graph of dependencies
	 * transparently when you render your Animated components.
	 *
	 *               new Animated.Value(0)
	 *     .interpolate()        .interpolate()    new Animated.Value(1)
	 *         opacity               translateY      scale
	 *          style                         transform
	 *         View#234                         style
	 *                                         View#123
	 *
	 * A) Top Down phase
	 * When an Animated.Value is updated, we recursively go down through this
	 * graph in order to find leaf nodes: the views that we flag as needing
	 * an update.
	 *
	 * B) Bottom Up phase
	 * When a view is flagged as needing an update, we recursively go back up
	 * in order to build the new value that it needs. The reason why we need
	 * this two-phases process is to deal with composite props such as
	 * transform which can receive values from multiple parents.
	 */
	function _flush(rootNode){
	var animatedStyles=new Set();
	function findAnimatedStyles(node){
	if(typeof node.update==='function'){
	animatedStyles.add(node);}else 
	{
	node.__getChildren().forEach(findAnimatedStyles);}}


	findAnimatedStyles(rootNode);
	animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}


	/**
	 * Standard value for driving animations.  One `Animated.Value` can drive
	 * multiple properties in a synchronized fashion, but can only be driven by one
	 * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,
	 * or calling `setValue`) will stop any previous ones.
	 */var 
	AnimatedValue=function(_AnimatedWithChildren){_inherits(AnimatedValue,_AnimatedWithChildren);






	function AnimatedValue(value){_classCallCheck(this,AnimatedValue);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedValue).call(this));

	_this._value=value;
	_this._offset=0;
	_this._animation=null;
	_this._listeners={};return _this;}_createClass(AnimatedValue,[{key:'__detach',value:function __detach()


	{
	this.stopAnimation();}},{key:'__getValue',value:function __getValue()


	{
	return this._value+this._offset;}


	/**
	   * Directly set the value.  This will stop any animations running on the value
	   * and update all the bound properties.
	   */},{key:'setValue',value:function setValue(
	value){
	if(this._animation){
	this._animation.stop();
	this._animation=null;}

	this._updateValue(value);}


	/**
	   * Sets an offset that is applied on top of whatever value is set, whether via
	   * `setValue`, an animation, or `Animated.event`.  Useful for compensating
	   * things like the start of a pan gesture.
	   */},{key:'setOffset',value:function setOffset(
	offset){
	this._offset=offset;}


	/**
	   * Merges the offset value into the base value and resets the offset to zero.
	   * The final output of the value is unchanged.
	   */},{key:'flattenOffset',value:function flattenOffset()
	{
	this._value+=this._offset;
	this._offset=0;}


	/**
	   * Adds an asynchronous listener to the value so you can observe updates from
	   * animations.  This is useful because there is no way to
	   * synchronously read the value because it might be driven natively.
	   */},{key:'addListener',value:function addListener(
	callback){
	var id=guid();
	this._listeners[id]=callback;
	return id;}},{key:'removeListener',value:function removeListener(


	id){
	delete this._listeners[id];}},{key:'removeAllListeners',value:function removeAllListeners()


	{
	this._listeners={};}


	/**
	   * Stops any running animation or tracking.  `callback` is invoked with the
	   * final value after stopping the animation, which is useful for updating
	   * state to match the animation position with layout.
	   */},{key:'stopAnimation',value:function stopAnimation(
	callback){
	this.stopTracking();
	this._animation&&this._animation.stop();
	this._animation=null;
	callback&&callback(this.__getValue());}


	/**
	   * Interpolates the value before updating the property, e.g. mapping 0-1 to
	   * 0-10.
	   */},{key:'interpolate',value:function interpolate(
	config){
	return new AnimatedInterpolation(this,Interpolation.create(config));}


	/**
	   * Typically only used internally, but could be used by a custom Animation
	   * class.
	   */},{key:'animate',value:function animate(
	animation,callback){var _this2=this;
	var handle=null;
	if(animation.__isInteraction){
	handle=InteractionManager.current.createInteractionHandle();}

	var previousAnimation=this._animation;
	this._animation&&this._animation.stop();
	this._animation=animation;
	animation.start(
	this._value,
	function(value){
	_this2._updateValue(value);},

	function(result){
	_this2._animation=null;
	if(handle!==null){
	InteractionManager.current.clearInteractionHandle(handle);}

	callback&&callback(result);},

	previousAnimation);}



	/**
	   * Typically only used internally.
	   */},{key:'stopTracking',value:function stopTracking()
	{
	this._tracking&&this._tracking.__detach();
	this._tracking=null;}


	/**
	   * Typically only used internally.
	   */},{key:'track',value:function track(
	tracking){
	this.stopTracking();
	this._tracking=tracking;}},{key:'_updateValue',value:function _updateValue(


	value){
	this._value=value;
	_flush(this);
	for(var key in this._listeners){
	this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;}(AnimatedWithChildren);




	module.exports=AnimatedValue;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);var 

	AnimatedWithChildren=function(_Animated){_inherits(AnimatedWithChildren,_Animated);


	function AnimatedWithChildren(){_classCallCheck(this,AnimatedWithChildren);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedWithChildren).call(this));

	_this._children=[];return _this;}_createClass(AnimatedWithChildren,[{key:'__addChild',value:function __addChild(


	child){
	if(this._children.length===0){
	this.__attach();}

	this._children.push(child);}},{key:'__removeChild',value:function __removeChild(


	child){
	var index=this._children.indexOf(child);
	if(index===-1){
	console.warn('Trying to remove a child that doesn\'t exist');
	return;}

	this._children.splice(index,1);
	if(this._children.length===0){
	this.__detach();}}},{key:'__getChildren',value:function __getChildren()



	{
	return this._children;}}]);return AnimatedWithChildren;}(Animated);



	module.exports=AnimatedWithChildren;

/***/ },
/* 181 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var InteractionManager={
	current:{
	createInteractionHandle:function(){},
	clearInteractionHandle:function(){}},

	inject:function(manager){
	InteractionManager.current=manager;}};



	module.exports=InteractionManager;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedWithChildren=__webpack_require__(180);
	var invariant=__webpack_require__(177);
	var Interpolation=__webpack_require__(183);
	var guid=__webpack_require__(185);var 



	AnimatedInterpolation=function(_AnimatedWithChildren){_inherits(AnimatedInterpolation,_AnimatedWithChildren);





	function AnimatedInterpolation(parent,interpolation){_classCallCheck(this,AnimatedInterpolation);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedInterpolation).call(this));

	_this._parent=parent;
	_this._interpolation=interpolation;
	_this._listeners={};return _this;}_createClass(AnimatedInterpolation,[{key:'__getValue',value:function __getValue()


	{
	var parentValue=this._parent.__getValue();
	invariant(
	typeof parentValue==='number',
	'Cannot interpolate an input which is not a number.');

	return this._interpolation(parentValue);}},{key:'addListener',value:function addListener(


	callback){var _this2=this;
	if(!this._parentListener){
	this._parentListener=this._parent.addListener(function(){
	for(var key in _this2._listeners){
	_this2._listeners[key]({value:_this2.__getValue()});}});}



	var id=guid();
	this._listeners[id]=callback;
	return id;}},{key:'removeListener',value:function removeListener(


	id){
	delete this._listeners[id];}},{key:'interpolate',value:function interpolate(


	config){
	return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:function __attach()


	{
	this._parent.__addChild(this);}},{key:'__detach',value:function __detach()


	{
	this._parent.__removeChild(this);
	this._parentListener=this._parent.removeListener(this._parentListener);}}]);return AnimatedInterpolation;}(AnimatedWithChildren);



	module.exports=AnimatedInterpolation;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	/* eslint no-bitwise: 0 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var normalizeColor=__webpack_require__(184);

	var invariant=__webpack_require__(177);












	var linear=function(t){return t;};

	/**
	 * Very handy helper to map input ranges to output ranges with an easing
	 * function and custom behavior outside of the ranges.
	 */var 
	Interpolation=function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:function create(
	config){

	if(config.outputRange&&typeof config.outputRange[0]==='string'){
	return createInterpolationFromStringOutputRange(config);}


	var outputRange=config.outputRange;
	checkInfiniteRange('outputRange',outputRange);

	var inputRange=config.inputRange;
	checkInfiniteRange('inputRange',inputRange);
	checkValidInputRange(inputRange);

	invariant(
	inputRange.length===outputRange.length,
	'inputRange ('+inputRange.length+') and outputRange ('+
	outputRange.length+') must have the same length');


	var easing=config.easing||linear;

	var extrapolateLeft='extend';
	if(config.extrapolateLeft!==undefined){
	extrapolateLeft=config.extrapolateLeft;}else 
	if(config.extrapolate!==undefined){
	extrapolateLeft=config.extrapolate;}


	var extrapolateRight='extend';
	if(config.extrapolateRight!==undefined){
	extrapolateRight=config.extrapolateRight;}else 
	if(config.extrapolate!==undefined){
	extrapolateRight=config.extrapolate;}


	return function(input){
	invariant(
	typeof input==='number',
	'Cannot interpolation an input which is not a number');


	var range=findRange(input,inputRange);
	return interpolate(
	input,
	inputRange[range],
	inputRange[range+1],
	outputRange[range],
	outputRange[range+1],
	easing,
	extrapolateLeft,
	extrapolateRight);};}}]);return Interpolation;}();





	function interpolate(
	input,
	inputMin,
	inputMax,
	outputMin,
	outputMax,
	easing,
	extrapolateLeft,
	extrapolateRight)
	{
	var result=input;

	// Extrapolate
	if(result<inputMin){
	if(extrapolateLeft==='identity'){
	return result;}else 
	if(extrapolateLeft==='clamp'){
	result=inputMin;}else 
	if(extrapolateLeft==='extend'){
	// noop
	}}


	if(result>inputMax){
	if(extrapolateRight==='identity'){
	return result;}else 
	if(extrapolateRight==='clamp'){
	result=inputMax;}else 
	if(extrapolateRight==='extend'){
	// noop
	}}


	if(outputMin===outputMax){
	return outputMin;}


	if(inputMin===inputMax){
	if(input<=inputMin){
	return outputMin;}

	return outputMax;}


	// Input Range
	if(inputMin===-Infinity){
	result=-result;}else 
	if(inputMax===Infinity){
	result=result-inputMin;}else 
	{
	result=(result-inputMin)/(inputMax-inputMin);}


	// Easing
	result=easing(result);

	// Output Range
	if(outputMin===-Infinity){
	result=-result;}else 
	if(outputMax===Infinity){
	result=result+outputMin;}else 
	{
	result=result*(outputMax-outputMin)+outputMin;}


	return result;}


	function colorToRgba(input){
	var int32Color=normalizeColor(input);
	if(int32Color===null){
	return input;}


	int32Color=int32Color||0; // $FlowIssue

	var r=(int32Color&0xff000000)>>>24;
	var g=(int32Color&0x00ff0000)>>>16;
	var b=(int32Color&0x0000ff00)>>>8;
	var a=(int32Color&0x000000ff)/255;

	return 'rgba('+r+', '+g+', '+b+', '+a+')';}


	var stringShapeRegex=/[0-9\.-]+/g;

	/**
	 * Supports string shapes by extracting numbers so new values can be computed,
	 * and recombines those values into new strings of the same shape.  Supports
	 * things like:
	 *
	 *   rgba(123, 42, 99, 0.36) // colors
	 *   -45deg                  // values with units
	 */
	function createInterpolationFromStringOutputRange(
	config)
	{
	var outputRange=config.outputRange;
	invariant(outputRange.length>=2,'Bad output range');
	outputRange=outputRange.map(colorToRgba);
	checkPattern(outputRange);

	// ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']
	// ->
	// [
	//   [0, 50],
	//   [100, 150],
	//   [200, 250],
	//   [0, 0.5],
	// ]
	/* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to
	   * guard against this possibility.
	   */
	var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
	outputRange.forEach(function(value){
	/* $FlowFixMe(>=0.18.0): `value.match()` can return `null`. Need to guard
	     * against this possibility.
	     */
	value.match(stringShapeRegex).forEach(function(number,i){
	outputRanges[i].push(+number);});});



	/* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to
	   * guard against this possibility.
	   */
	var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
	return Interpolation.create(_extends({},
	config,{
	outputRange:outputRanges[i]}));});



	// rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to
	// round the opacity (4th column).
	var shouldRound=/^rgb/.test(outputRange[0]);

	return function(input){
	var i=0;
	// 'rgba(0, 100, 200, 0)'
	// ->
	// 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'
	return outputRange[0].replace(stringShapeRegex,function(){
	var val=interpolations[i++](input);
	return String(shouldRound&&i<4?Math.round(val):val);});};}




	function checkPattern(arr){
	var pattern=arr[0].replace(stringShapeRegex,'');
	for(var i=1;i<arr.length;++i){
	invariant(
	pattern===arr[i].replace(stringShapeRegex,''),
	'invalid pattern '+arr[0]+' and '+arr[i]);}}




	function findRange(input,inputRange){
	for(var i=1;i<inputRange.length-1;++i){
	if(inputRange[i]>=input){
	break;}}


	return i-1;}


	function checkValidInputRange(arr){
	invariant(arr.length>=2,'inputRange must have at least 2 elements');
	for(var i=1;i<arr.length;++i){
	invariant(
	arr[i]>=arr[i-1],
	/* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,
	       * one or both of the operands may be something that doesn't cleanly
	       * convert to a string, like undefined, null, and object, etc. If you really
	       * mean this implicit string conversion, you can do something like
	       * String(myThing)
	       */
	'inputRange must be monotonically increasing '+arr);}}




	function checkInfiniteRange(name,arr){
	invariant(arr.length>=2,name+' must have at least 2 elements');
	invariant(
	arr.length!==2||arr[0]!==-Infinity||arr[1]!==Infinity,
	/* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,
	     * one or both of the operands may be something that doesn't cleanly convert
	     * to a string, like undefined, null, and object, etc. If you really mean
	     * this implicit string conversion, you can do something like
	     * String(myThing)
	     */
	name+'cannot be ]-infinity;+infinity[ '+arr);}



	module.exports=Interpolation;

/***/ },
/* 184 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	/* eslint no-bitwise: 0 */
	'use strict';

	function normalizeColor(color){
	var match;

	if(typeof color==='number'){
	if(color>>>0===color&&color>=0&&color<=0xffffffff){
	return color;}

	return null;}


	// Ordered based on occurrences on Facebook codebase
	if(match=matchers.hex6.exec(color)){
	return parseInt(match[1]+'ff',16)>>>0;}


	if(names.hasOwnProperty(color)){
	return names[color];}


	if(match=matchers.rgb.exec(color)){
	return (
	parse255(match[1])<<24| // r
	parse255(match[2])<<16| // g
	parse255(match[3])<<8| // b
	0x000000ff // a
	)>>>0;}


	if(match=matchers.rgba.exec(color)){
	return (
	parse255(match[1])<<24| // r
	parse255(match[2])<<16| // g
	parse255(match[3])<<8| // b
	parse1(match[4]) // a
	)>>>0;}


	if(match=matchers.hex3.exec(color)){
	return parseInt(
	match[1]+match[1]+ // r
	match[2]+match[2]+ // g
	match[3]+match[3]+ // b
	'ff', // a
	16)>>>
	0;}


	// https://drafts.csswg.org/css-color-4/#hex-notation
	if(match=matchers.hex8.exec(color)){
	return parseInt(match[1],16)>>>0;}


	if(match=matchers.hex4.exec(color)){
	return parseInt(
	match[1]+match[1]+ // r
	match[2]+match[2]+ // g
	match[3]+match[3]+ // b
	match[4]+match[4], // a
	16)>>>
	0;}


	if(match=matchers.hsl.exec(color)){
	return (
	hslToRgb(
	parse360(match[1]), // h
	parsePercentage(match[2]), // s
	parsePercentage(match[3]) // l
	)|
	0x000000ff // a
	)>>>0;}


	if(match=matchers.hsla.exec(color)){
	return (
	hslToRgb(
	parse360(match[1]), // h
	parsePercentage(match[2]), // s
	parsePercentage(match[3]) // l
	)|
	parse1(match[4]) // a
	)>>>0;}


	return null;}


	function hue2rgb(p,q,t){
	if(t<0){
	t+=1;}

	if(t>1){
	t-=1;}

	if(t<1/6){
	return p+(q-p)*6*t;}

	if(t<1/2){
	return q;}

	if(t<2/3){
	return p+(q-p)*(2/3-t)*6;}

	return p;}


	function hslToRgb(h,s,l){
	var q=l<0.5?l*(1+s):l+s-l*s;
	var p=2*l-q;
	var r=hue2rgb(p,q,h+1/3);
	var g=hue2rgb(p,q,h);
	var b=hue2rgb(p,q,h-1/3);

	return (
	Math.round(r*255)<<24|
	Math.round(g*255)<<16|
	Math.round(b*255)<<8);}



	// var INTEGER = '[-+]?\\d+';
	var NUMBER='[-+]?\\d*\\.?\\d+';
	var PERCENTAGE=NUMBER+'%';

	function call(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
	return '\\(\\s*('+args.join(')\\s*,\\s*(')+')\\s*\\)';}


	var matchers={
	rgb:new RegExp('rgb'+call(NUMBER,NUMBER,NUMBER)),
	rgba:new RegExp('rgba'+call(NUMBER,NUMBER,NUMBER,NUMBER)),
	hsl:new RegExp('hsl'+call(NUMBER,PERCENTAGE,PERCENTAGE)),
	hsla:new RegExp('hsla'+call(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)),
	hex3:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
	hex4:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
	hex6:/^#([0-9a-fA-F]{6})$/,
	hex8:/^#([0-9a-fA-F]{8})$/};


	function parse255(str){
	var int=parseInt(str,10);
	if(int<0){
	return 0;}

	if(int>255){
	return 255;}

	return int;}


	function parse360(str){
	var int=parseFloat(str);
	return (int%360+360)%360/360;}


	function parse1(str){
	var num=parseFloat(str);
	if(num<0){
	return 0;}

	if(num>1){
	return 255;}

	return Math.round(num*255);}


	function parsePercentage(str){
	// parseFloat conveniently ignores the final %
	var int=parseFloat(str,10);
	if(int<0){
	return 0;}

	if(int>100){
	return 1;}

	return int/100;}


	var names={
	transparent:0x00000000,

	// http://www.w3.org/TR/css3-color/#svg-color
	aliceblue:0xf0f8ffff,
	antiquewhite:0xfaebd7ff,
	aqua:0x00ffffff,
	aquamarine:0x7fffd4ff,
	azure:0xf0ffffff,
	beige:0xf5f5dcff,
	bisque:0xffe4c4ff,
	black:0x000000ff,
	blanchedalmond:0xffebcdff,
	blue:0x0000ffff,
	blueviolet:0x8a2be2ff,
	brown:0xa52a2aff,
	burlywood:0xdeb887ff,
	burntsienna:0xea7e5dff,
	cadetblue:0x5f9ea0ff,
	chartreuse:0x7fff00ff,
	chocolate:0xd2691eff,
	coral:0xff7f50ff,
	cornflowerblue:0x6495edff,
	cornsilk:0xfff8dcff,
	crimson:0xdc143cff,
	cyan:0x00ffffff,
	darkblue:0x00008bff,
	darkcyan:0x008b8bff,
	darkgoldenrod:0xb8860bff,
	darkgray:0xa9a9a9ff,
	darkgreen:0x006400ff,
	darkgrey:0xa9a9a9ff,
	darkkhaki:0xbdb76bff,
	darkmagenta:0x8b008bff,
	darkolivegreen:0x556b2fff,
	darkorange:0xff8c00ff,
	darkorchid:0x9932ccff,
	darkred:0x8b0000ff,
	darksalmon:0xe9967aff,
	darkseagreen:0x8fbc8fff,
	darkslateblue:0x483d8bff,
	darkslategray:0x2f4f4fff,
	darkslategrey:0x2f4f4fff,
	darkturquoise:0x00ced1ff,
	darkviolet:0x9400d3ff,
	deeppink:0xff1493ff,
	deepskyblue:0x00bfffff,
	dimgray:0x696969ff,
	dimgrey:0x696969ff,
	dodgerblue:0x1e90ffff,
	firebrick:0xb22222ff,
	floralwhite:0xfffaf0ff,
	forestgreen:0x228b22ff,
	fuchsia:0xff00ffff,
	gainsboro:0xdcdcdcff,
	ghostwhite:0xf8f8ffff,
	gold:0xffd700ff,
	goldenrod:0xdaa520ff,
	gray:0x808080ff,
	green:0x008000ff,
	greenyellow:0xadff2fff,
	grey:0x808080ff,
	honeydew:0xf0fff0ff,
	hotpink:0xff69b4ff,
	indianred:0xcd5c5cff,
	indigo:0x4b0082ff,
	ivory:0xfffff0ff,
	khaki:0xf0e68cff,
	lavender:0xe6e6faff,
	lavenderblush:0xfff0f5ff,
	lawngreen:0x7cfc00ff,
	lemonchiffon:0xfffacdff,
	lightblue:0xadd8e6ff,
	lightcoral:0xf08080ff,
	lightcyan:0xe0ffffff,
	lightgoldenrodyellow:0xfafad2ff,
	lightgray:0xd3d3d3ff,
	lightgreen:0x90ee90ff,
	lightgrey:0xd3d3d3ff,
	lightpink:0xffb6c1ff,
	lightsalmon:0xffa07aff,
	lightseagreen:0x20b2aaff,
	lightskyblue:0x87cefaff,
	lightslategray:0x778899ff,
	lightslategrey:0x778899ff,
	lightsteelblue:0xb0c4deff,
	lightyellow:0xffffe0ff,
	lime:0x00ff00ff,
	limegreen:0x32cd32ff,
	linen:0xfaf0e6ff,
	magenta:0xff00ffff,
	maroon:0x800000ff,
	mediumaquamarine:0x66cdaaff,
	mediumblue:0x0000cdff,
	mediumorchid:0xba55d3ff,
	mediumpurple:0x9370dbff,
	mediumseagreen:0x3cb371ff,
	mediumslateblue:0x7b68eeff,
	mediumspringgreen:0x00fa9aff,
	mediumturquoise:0x48d1ccff,
	mediumvioletred:0xc71585ff,
	midnightblue:0x191970ff,
	mintcream:0xf5fffaff,
	mistyrose:0xffe4e1ff,
	moccasin:0xffe4b5ff,
	navajowhite:0xffdeadff,
	navy:0x000080ff,
	oldlace:0xfdf5e6ff,
	olive:0x808000ff,
	olivedrab:0x6b8e23ff,
	orange:0xffa500ff,
	orangered:0xff4500ff,
	orchid:0xda70d6ff,
	palegoldenrod:0xeee8aaff,
	palegreen:0x98fb98ff,
	paleturquoise:0xafeeeeff,
	palevioletred:0xdb7093ff,
	papayawhip:0xffefd5ff,
	peachpuff:0xffdab9ff,
	peru:0xcd853fff,
	pink:0xffc0cbff,
	plum:0xdda0ddff,
	powderblue:0xb0e0e6ff,
	purple:0x800080ff,
	rebeccapurple:0x663399ff,
	red:0xff0000ff,
	rosybrown:0xbc8f8fff,
	royalblue:0x4169e1ff,
	saddlebrown:0x8b4513ff,
	salmon:0xfa8072ff,
	sandybrown:0xf4a460ff,
	seagreen:0x2e8b57ff,
	seashell:0xfff5eeff,
	sienna:0xa0522dff,
	silver:0xc0c0c0ff,
	skyblue:0x87ceebff,
	slateblue:0x6a5acdff,
	slategray:0x708090ff,
	slategrey:0x708090ff,
	snow:0xfffafaff,
	springgreen:0x00ff7fff,
	steelblue:0x4682b4ff,
	tan:0xd2b48cff,
	teal:0x008080ff,
	thistle:0xd8bfd8ff,
	tomato:0xff6347ff,
	turquoise:0x40e0d0ff,
	violet:0xee82eeff,
	wheat:0xf5deb3ff,
	white:0xffffffff,
	whitesmoke:0xf5f5f5ff,
	yellow:0xffff00ff,
	yellowgreen:0x9acd32ff};


	module.exports=normalizeColor;

/***/ },
/* 185 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var _uniqueId=0;

	module.exports=function uniqueId(){
	return String(_uniqueId++);};

/***/ },
/* 186 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}







	// Important note: start() and stop() will only be called at most once.
	// Once an animation has been stopped or finished its course, it will
	// not be reused.
	var Animation=function(){function Animation(){_classCallCheck(this,Animation);}_createClass(Animation,[{key:'start',value:function start(




	fromValue,
	onUpdate,
	onEnd,
	previousAnimation)
	{}},{key:'stop',value:function stop()
	{}
	// Helper function for subclasses to make sure onEnd is only called once.
	},{key:'__debouncedOnEnd',value:function __debouncedOnEnd(result){
	var onEnd=this.__onEnd;
	this.__onEnd=null;
	onEnd&&onEnd(result);}}]);return Animation;}();



	module.exports=Animation;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(188)() ? Set : __webpack_require__(189);


/***/ },
/* 188 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function () {
		var set, iterator, result;
		if (typeof Set !== 'function') return false;
		set = new Set(['raz', 'dwa', 'trzy']);
		if (String(set) !== '[object Set]') return false;
		if (set.size !== 3) return false;
		if (typeof set.add !== 'function') return false;
		if (typeof set.clear !== 'function') return false;
		if (typeof set.delete !== 'function') return false;
		if (typeof set.entries !== 'function') return false;
		if (typeof set.forEach !== 'function') return false;
		if (typeof set.has !== 'function') return false;
		if (typeof set.keys !== 'function') return false;
		if (typeof set.values !== 'function') return false;

		iterator = set.values();
		result = iterator.next();
		if (result.done !== false) return false;
		if (result.value !== 'raz') return false;

		return true;
	};


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var clear          = __webpack_require__(190)
	  , eIndexOf       = __webpack_require__(192)
	  , setPrototypeOf = __webpack_require__(198)
	  , callable       = __webpack_require__(203)
	  , d              = __webpack_require__(204)
	  , ee             = __webpack_require__(216)
	  , Symbol         = __webpack_require__(217)
	  , iterator       = __webpack_require__(222)
	  , forOf          = __webpack_require__(226)
	  , Iterator       = __webpack_require__(236)
	  , isNative       = __webpack_require__(237)

	  , call = Function.prototype.call
	  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf
	  , SetPoly, getValues, NativeSet;

	if (isNative) NativeSet = Set;

	module.exports = SetPoly = function Set(/*iterable*/) {
		var iterable = arguments[0], self;
		if (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \'new\'');
		if (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));
		else self = this;
		if (iterable != null) iterator(iterable);
		defineProperty(self, '__setData__', d('c', []));
		if (!iterable) return self;
		forOf(iterable, function (value) {
			if (eIndexOf.call(this, value) !== -1) return;
			this.push(value);
		}, self.__setData__);
		return self;
	};

	if (isNative) {
		if (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);
		SetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });
	}

	ee(Object.defineProperties(SetPoly.prototype, {
		add: d(function (value) {
			if (this.has(value)) return this;
			this.emit('_add', this.__setData__.push(value) - 1, value);
			return this;
		}),
		clear: d(function () {
			if (!this.__setData__.length) return;
			clear.call(this.__setData__);
			this.emit('_clear');
		}),
		delete: d(function (value) {
			var index = eIndexOf.call(this.__setData__, value);
			if (index === -1) return false;
			this.__setData__.splice(index, 1);
			this.emit('_delete', index, value);
			return true;
		}),
		entries: d(function () { return new Iterator(this, 'key+value'); }),
		forEach: d(function (cb/*, thisArg*/) {
			var thisArg = arguments[1], iterator, result, value;
			callable(cb);
			iterator = this.values();
			result = iterator._next();
			while (result !== undefined) {
				value = iterator._resolve(result);
				call.call(cb, thisArg, value, value, this);
				result = iterator._next();
			}
		}),
		has: d(function (value) {
			return (eIndexOf.call(this.__setData__, value) !== -1);
		}),
		keys: d(getValues = function () { return this.values(); }),
		size: d.gs(function () { return this.__setData__.length; }),
		values: d(function () { return new Iterator(this); }),
		toString: d(function () { return '[object Set]'; })
	}));
	defineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));
	defineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	// Inspired by Google Closure:
	// http://closure-library.googlecode.com/svn/docs/
	// closure_goog_array_array.js.html#goog.array.clear

	'use strict';

	var value = __webpack_require__(191);

	module.exports = function () {
		value(this).length = 0;
		return this;
	};


/***/ },
/* 191 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function (value) {
		if (value == null) throw new TypeError("Cannot use null or undefined");
		return value;
	};


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toPosInt = __webpack_require__(193)
	  , value    = __webpack_require__(191)

	  , indexOf = Array.prototype.indexOf
	  , hasOwnProperty = Object.prototype.hasOwnProperty
	  , abs = Math.abs, floor = Math.floor;

	module.exports = function (searchElement/*, fromIndex*/) {
		var i, l, fromIndex, val;
		if (searchElement === searchElement) { //jslint: ignore
			return indexOf.apply(this, arguments);
		}

		l = toPosInt(value(this).length);
		fromIndex = arguments[1];
		if (isNaN(fromIndex)) fromIndex = 0;
		else if (fromIndex >= 0) fromIndex = floor(fromIndex);
		else fromIndex = toPosInt(this.length) - floor(abs(fromIndex));

		for (i = fromIndex; i < l; ++i) {
			if (hasOwnProperty.call(this, i)) {
				val = this[i];
				if (val !== val) return i; //jslint: ignore
			}
		}
		return -1;
	};


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toInteger = __webpack_require__(194)

	  , max = Math.max;

	module.exports = function (value) { return max(0, toInteger(value)); };


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var sign = __webpack_require__(195)

	  , abs = Math.abs, floor = Math.floor;

	module.exports = function (value) {
		if (isNaN(value)) return 0;
		value = Number(value);
		if ((value === 0) || !isFinite(value)) return value;
		return sign(value) * floor(abs(value));
	};


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(196)()
		? Math.sign
		: __webpack_require__(197);


/***/ },
/* 196 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function () {
		var sign = Math.sign;
		if (typeof sign !== 'function') return false;
		return ((sign(10) === 1) && (sign(-20) === -1));
	};


/***/ },
/* 197 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function (value) {
		value = Number(value);
		if (isNaN(value) || (value === 0)) return value;
		return (value > 0) ? 1 : -1;
	};


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(199)()
		? Object.setPrototypeOf
		: __webpack_require__(200);


/***/ },
/* 199 */
/***/ function(module, exports) {

	'use strict';

	var create = Object.create, getPrototypeOf = Object.getPrototypeOf
	  , x = {};

	module.exports = function (/*customCreate*/) {
		var setPrototypeOf = Object.setPrototypeOf
		  , customCreate = arguments[0] || create;
		if (typeof setPrototypeOf !== 'function') return false;
		return getPrototypeOf(setPrototypeOf(customCreate(null), x)) === x;
	};


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// Big thanks to @WebReflection for sorting this out
	// https://gist.github.com/WebReflection/5593554

	'use strict';

	var isObject      = __webpack_require__(201)
	  , value         = __webpack_require__(191)

	  , isPrototypeOf = Object.prototype.isPrototypeOf
	  , defineProperty = Object.defineProperty
	  , nullDesc = { configurable: true, enumerable: false, writable: true,
			value: undefined }
	  , validate;

	validate = function (obj, prototype) {
		value(obj);
		if ((prototype === null) || isObject(prototype)) return obj;
		throw new TypeError('Prototype must be null or an object');
	};

	module.exports = (function (status) {
		var fn, set;
		if (!status) return null;
		if (status.level === 2) {
			if (status.set) {
				set = status.set;
				fn = function (obj, prototype) {
					set.call(validate(obj, prototype), prototype);
					return obj;
				};
			} else {
				fn = function (obj, prototype) {
					validate(obj, prototype).__proto__ = prototype;
					return obj;
				};
			}
		} else {
			fn = function self(obj, prototype) {
				var isNullBase;
				validate(obj, prototype);
				isNullBase = isPrototypeOf.call(self.nullPolyfill, obj);
				if (isNullBase) delete self.nullPolyfill.__proto__;
				if (prototype === null) prototype = self.nullPolyfill;
				obj.__proto__ = prototype;
				if (isNullBase) defineProperty(self.nullPolyfill, '__proto__', nullDesc);
				return obj;
			};
		}
		return Object.defineProperty(fn, 'level', { configurable: false,
			enumerable: false, writable: false, value: status.level });
	}((function () {
		var x = Object.create(null), y = {}, set
		  , desc = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__');

		if (desc) {
			try {
				set = desc.set; // Opera crashes at this point
				set.call(x, y);
			} catch (ignore) { }
			if (Object.getPrototypeOf(x) === y) return { set: set, level: 2 };
		}

		x.__proto__ = y;
		if (Object.getPrototypeOf(x) === y) return { level: 2 };

		x = {};
		x.__proto__ = y;
		if (Object.getPrototypeOf(x) === y) return { level: 1 };

		return false;
	}())));

	__webpack_require__(202);


/***/ },
/* 201 */
/***/ function(module, exports) {

	'use strict';

	var map = { function: true, object: true };

	module.exports = function (x) {
		return ((x != null) && map[typeof x]) || false;
	};


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// Workaround for http://code.google.com/p/v8/issues/detail?id=2804

	'use strict';

	var create = Object.create, shim;

	if (!__webpack_require__(199)()) {
		shim = __webpack_require__(200);
	}

	module.exports = (function () {
		var nullObject, props, desc;
		if (!shim) return create;
		if (shim.level !== 1) return create;

		nullObject = {};
		props = {};
		desc = { configurable: false, enumerable: false, writable: true,
			value: undefined };
		Object.getOwnPropertyNames(Object.prototype).forEach(function (name) {
			if (name === '__proto__') {
				props[name] = { configurable: true, enumerable: false, writable: true,
					value: undefined };
				return;
			}
			props[name] = desc;
		});
		Object.defineProperties(nullObject, props);

		Object.defineProperty(shim, 'nullPolyfill', { configurable: false,
			enumerable: false, writable: false, value: nullObject });

		return function (prototype, props) {
			return create((prototype === null) ? nullObject : prototype, props);
		};
	}());


/***/ },
/* 203 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function (fn) {
		if (typeof fn !== 'function') throw new TypeError(fn + " is not a function");
		return fn;
	};


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var assign        = __webpack_require__(205)
	  , normalizeOpts = __webpack_require__(211)
	  , isCallable    = __webpack_require__(212)
	  , contains      = __webpack_require__(213)

	  , d;

	d = module.exports = function (dscr, value/*, options*/) {
		var c, e, w, options, desc;
		if ((arguments.length < 2) || (typeof dscr !== 'string')) {
			options = value;
			value = dscr;
			dscr = null;
		} else {
			options = arguments[2];
		}
		if (dscr == null) {
			c = w = true;
			e = false;
		} else {
			c = contains.call(dscr, 'c');
			e = contains.call(dscr, 'e');
			w = contains.call(dscr, 'w');
		}

		desc = { value: value, configurable: c, enumerable: e, writable: w };
		return !options ? desc : assign(normalizeOpts(options), desc);
	};

	d.gs = function (dscr, get, set/*, options*/) {
		var c, e, options, desc;
		if (typeof dscr !== 'string') {
			options = set;
			set = get;
			get = dscr;
			dscr = null;
		} else {
			options = arguments[3];
		}
		if (get == null) {
			get = undefined;
		} else if (!isCallable(get)) {
			options = get;
			get = set = undefined;
		} else if (set == null) {
			set = undefined;
		} else if (!isCallable(set)) {
			options = set;
			set = undefined;
		}
		if (dscr == null) {
			c = true;
			e = false;
		} else {
			c = contains.call(dscr, 'c');
			e = contains.call(dscr, 'e');
		}

		desc = { get: get, set: set, configurable: c, enumerable: e };
		return !options ? desc : assign(normalizeOpts(options), desc);
	};


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(206)()
		? Object.assign
		: __webpack_require__(207);


/***/ },
/* 206 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function () {
		var assign = Object.assign, obj;
		if (typeof assign !== 'function') return false;
		obj = { foo: 'raz' };
		assign(obj, { bar: 'dwa' }, { trzy: 'trzy' });
		return (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';
	};


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var keys  = __webpack_require__(208)
	  , value = __webpack_require__(191)

	  , max = Math.max;

	module.exports = function (dest, src/*, …srcn*/) {
		var error, i, l = max(arguments.length, 2), assign;
		dest = Object(value(dest));
		assign = function (key) {
			try { dest[key] = src[key]; } catch (e) {
				if (!error) error = e;
			}
		};
		for (i = 1; i < l; ++i) {
			src = arguments[i];
			keys(src).forEach(assign);
		}
		if (error !== undefined) throw error;
		return dest;
	};


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(209)()
		? Object.keys
		: __webpack_require__(210);


/***/ },
/* 209 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function () {
		try {
			Object.keys('primitive');
			return true;
		} catch (e) { return false; }
	};


/***/ },
/* 210 */
/***/ function(module, exports) {

	'use strict';

	var keys = Object.keys;

	module.exports = function (object) {
		return keys(object == null ? object : Object(object));
	};


/***/ },
/* 211 */
/***/ function(module, exports) {

	'use strict';

	var forEach = Array.prototype.forEach, create = Object.create;

	var process = function (src, obj) {
		var key;
		for (key in src) obj[key] = src[key];
	};

	module.exports = function (options/*, …options*/) {
		var result = create(null);
		forEach.call(arguments, function (options) {
			if (options == null) return;
			process(Object(options), result);
		});
		return result;
	};


/***/ },
/* 212 */
/***/ function(module, exports) {

	// Deprecated

	'use strict';

	module.exports = function (obj) { return typeof obj === 'function'; };


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(214)()
		? String.prototype.contains
		: __webpack_require__(215);


/***/ },
/* 214 */
/***/ function(module, exports) {

	'use strict';

	var str = 'razdwatrzy';

	module.exports = function () {
		if (typeof str.contains !== 'function') return false;
		return ((str.contains('dwa') === true) && (str.contains('foo') === false));
	};


/***/ },
/* 215 */
/***/ function(module, exports) {

	'use strict';

	var indexOf = String.prototype.indexOf;

	module.exports = function (searchString/*, position*/) {
		return indexOf.call(this, searchString, arguments[1]) > -1;
	};


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var d        = __webpack_require__(204)
	  , callable = __webpack_require__(203)

	  , apply = Function.prototype.apply, call = Function.prototype.call
	  , create = Object.create, defineProperty = Object.defineProperty
	  , defineProperties = Object.defineProperties
	  , hasOwnProperty = Object.prototype.hasOwnProperty
	  , descriptor = { configurable: true, enumerable: false, writable: true }

	  , on, once, off, emit, methods, descriptors, base;

	on = function (type, listener) {
		var data;

		callable(listener);

		if (!hasOwnProperty.call(this, '__ee__')) {
			data = descriptor.value = create(null);
			defineProperty(this, '__ee__', descriptor);
			descriptor.value = null;
		} else {
			data = this.__ee__;
		}
		if (!data[type]) data[type] = listener;
		else if (typeof data[type] === 'object') data[type].push(listener);
		else data[type] = [data[type], listener];

		return this;
	};

	once = function (type, listener) {
		var once, self;

		callable(listener);
		self = this;
		on.call(this, type, once = function () {
			off.call(self, type, once);
			apply.call(listener, this, arguments);
		});

		once.__eeOnceListener__ = listener;
		return this;
	};

	off = function (type, listener) {
		var data, listeners, candidate, i;

		callable(listener);

		if (!hasOwnProperty.call(this, '__ee__')) return this;
		data = this.__ee__;
		if (!data[type]) return this;
		listeners = data[type];

		if (typeof listeners === 'object') {
			for (i = 0; (candidate = listeners[i]); ++i) {
				if ((candidate === listener) ||
						(candidate.__eeOnceListener__ === listener)) {
					if (listeners.length === 2) data[type] = listeners[i ? 0 : 1];
					else listeners.splice(i, 1);
				}
			}
		} else {
			if ((listeners === listener) ||
					(listeners.__eeOnceListener__ === listener)) {
				delete data[type];
			}
		}

		return this;
	};

	emit = function (type) {
		var i, l, listener, listeners, args;

		if (!hasOwnProperty.call(this, '__ee__')) return;
		listeners = this.__ee__[type];
		if (!listeners) return;

		if (typeof listeners === 'object') {
			l = arguments.length;
			args = new Array(l - 1);
			for (i = 1; i < l; ++i) args[i - 1] = arguments[i];

			listeners = listeners.slice();
			for (i = 0; (listener = listeners[i]); ++i) {
				apply.call(listener, this, args);
			}
		} else {
			switch (arguments.length) {
			case 1:
				call.call(listeners, this);
				break;
			case 2:
				call.call(listeners, this, arguments[1]);
				break;
			case 3:
				call.call(listeners, this, arguments[1], arguments[2]);
				break;
			default:
				l = arguments.length;
				args = new Array(l - 1);
				for (i = 1; i < l; ++i) {
					args[i - 1] = arguments[i];
				}
				apply.call(listeners, this, args);
			}
		}
	};

	methods = {
		on: on,
		once: once,
		off: off,
		emit: emit
	};

	descriptors = {
		on: d(on),
		once: d(once),
		off: d(off),
		emit: d(emit)
	};

	base = defineProperties({}, descriptors);

	module.exports = exports = function (o) {
		return (o == null) ? create(base) : defineProperties(Object(o), descriptors);
	};
	exports.methods = methods;


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(218)() ? Symbol : __webpack_require__(219);


/***/ },
/* 218 */
/***/ function(module, exports) {

	'use strict';

	var validTypes = { object: true, symbol: true };

	module.exports = function () {
		var symbol;
		if (typeof Symbol !== 'function') return false;
		symbol = Symbol('test symbol');
		try { String(symbol); } catch (e) { return false; }

		// Return 'true' also for polyfills
		if (!validTypes[typeof Symbol.iterator]) return false;
		if (!validTypes[typeof Symbol.toPrimitive]) return false;
		if (!validTypes[typeof Symbol.toStringTag]) return false;

		return true;
	};


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	// ES2015 Symbol polyfill for environments that do not support it (or partially support it)

	'use strict';

	var d              = __webpack_require__(204)
	  , validateSymbol = __webpack_require__(220)

	  , create = Object.create, defineProperties = Object.defineProperties
	  , defineProperty = Object.defineProperty, objPrototype = Object.prototype
	  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)
	  , isNativeSafe;

	if (typeof Symbol === 'function') {
		NativeSymbol = Symbol;
		try {
			String(NativeSymbol());
			isNativeSafe = true;
		} catch (ignore) {}
	}

	var generateName = (function () {
		var created = create(null);
		return function (desc) {
			var postfix = 0, name, ie11BugWorkaround;
			while (created[desc + (postfix || '')]) ++postfix;
			desc += (postfix || '');
			created[desc] = true;
			name = '@@' + desc;
			defineProperty(objPrototype, name, d.gs(null, function (value) {
				// For IE11 issue see:
				// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/
				//    ie11-broken-getters-on-dom-objects
				// https://github.com/medikoo/es6-symbol/issues/12
				if (ie11BugWorkaround) return;
				ie11BugWorkaround = true;
				defineProperty(this, name, d(value));
				ie11BugWorkaround = false;
			}));
			return name;
		};
	}());

	// Internal constructor (not one exposed) for creating Symbol instances.
	// This one is used to ensure that `someSymbol instanceof Symbol` always return false
	HiddenSymbol = function Symbol(description) {
		if (this instanceof HiddenSymbol) throw new TypeError('TypeError: Symbol is not a constructor');
		return SymbolPolyfill(description);
	};

	// Exposed `Symbol` constructor
	// (returns instances of HiddenSymbol)
	module.exports = SymbolPolyfill = function Symbol(description) {
		var symbol;
		if (this instanceof Symbol) throw new TypeError('TypeError: Symbol is not a constructor');
		if (isNativeSafe) return NativeSymbol(description);
		symbol = create(HiddenSymbol.prototype);
		description = (description === undefined ? '' : String(description));
		return defineProperties(symbol, {
			__description__: d('', description),
			__name__: d('', generateName(description))
		});
	};
	defineProperties(SymbolPolyfill, {
		for: d(function (key) {
			if (globalSymbols[key]) return globalSymbols[key];
			return (globalSymbols[key] = SymbolPolyfill(String(key)));
		}),
		keyFor: d(function (s) {
			var key;
			validateSymbol(s);
			for (key in globalSymbols) if (globalSymbols[key] === s) return key;
		}),

		// If there's native implementation of given symbol, let's fallback to it
		// to ensure proper interoperability with other native functions e.g. Array.from
		hasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),
		isConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||
			SymbolPolyfill('isConcatSpreadable')),
		iterator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),
		match: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),
		replace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),
		search: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),
		species: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),
		split: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),
		toPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),
		toStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),
		unscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))
	});

	// Internal tweaks for real symbol producer
	defineProperties(HiddenSymbol.prototype, {
		constructor: d(SymbolPolyfill),
		toString: d('', function () { return this.__name__; })
	});

	// Proper implementation of methods exposed on Symbol.prototype
	// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
	defineProperties(SymbolPolyfill.prototype, {
		toString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),
		valueOf: d(function () { return validateSymbol(this); })
	});
	defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {
		var symbol = validateSymbol(this);
		if (typeof symbol === 'symbol') return symbol;
		return symbol.toString();
	}));
	defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));

	// Proper implementaton of toPrimitive and toStringTag for returned symbol instances
	defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,
		d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));

	// Note: It's important to define `toPrimitive` as last one, as some implementations
	// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)
	// And that may invoke error in definition flow:
	// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149
	defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,
		d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isSymbol = __webpack_require__(221);

	module.exports = function (value) {
		if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
		return value;
	};


/***/ },
/* 221 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function (x) {
		if (!x) return false;
		if (typeof x === 'symbol') return true;
		if (!x.constructor) return false;
		if (x.constructor.name !== 'Symbol') return false;
		return (x[x.constructor.toStringTag] === 'Symbol');
	};


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isIterable = __webpack_require__(223);

	module.exports = function (value) {
		if (!isIterable(value)) throw new TypeError(value + " is not iterable");
		return value;
	};


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isArguments    = __webpack_require__(224)
	  , isString       = __webpack_require__(225)
	  , iteratorSymbol = __webpack_require__(217).iterator

	  , isArray = Array.isArray;

	module.exports = function (value) {
		if (value == null) return false;
		if (isArray(value)) return true;
		if (isString(value)) return true;
		if (isArguments(value)) return true;
		return (typeof value[iteratorSymbol] === 'function');
	};


/***/ },
/* 224 */
/***/ function(module, exports) {

	'use strict';

	var toString = Object.prototype.toString

	  , id = toString.call((function () { return arguments; }()));

	module.exports = function (x) { return (toString.call(x) === id); };


/***/ },
/* 225 */
/***/ function(module, exports) {

	'use strict';

	var toString = Object.prototype.toString

	  , id = toString.call('');

	module.exports = function (x) {
		return (typeof x === 'string') || (x && (typeof x === 'object') &&
			((x instanceof String) || (toString.call(x) === id))) || false;
	};


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isArguments = __webpack_require__(224)
	  , callable    = __webpack_require__(203)
	  , isString    = __webpack_require__(225)
	  , get         = __webpack_require__(227)

	  , isArray = Array.isArray, call = Function.prototype.call
	  , some = Array.prototype.some;

	module.exports = function (iterable, cb/*, thisArg*/) {
		var mode, thisArg = arguments[2], result, doBreak, broken, i, l, char, code;
		if (isArray(iterable) || isArguments(iterable)) mode = 'array';
		else if (isString(iterable)) mode = 'string';
		else iterable = get(iterable);

		callable(cb);
		doBreak = function () { broken = true; };
		if (mode === 'array') {
			some.call(iterable, function (value) {
				call.call(cb, thisArg, value, doBreak);
				if (broken) return true;
			});
			return;
		}
		if (mode === 'string') {
			l = iterable.length;
			for (i = 0; i < l; ++i) {
				char = iterable[i];
				if ((i + 1) < l) {
					code = char.charCodeAt(0);
					if ((code >= 0xD800) && (code <= 0xDBFF)) char += iterable[++i];
				}
				call.call(cb, thisArg, char, doBreak);
				if (broken) break;
			}
			return;
		}
		result = iterable.next();

		while (!result.done) {
			call.call(cb, thisArg, result.value, doBreak);
			if (broken) return;
			result = iterable.next();
		}
	};


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isArguments    = __webpack_require__(224)
	  , isString       = __webpack_require__(225)
	  , ArrayIterator  = __webpack_require__(228)
	  , StringIterator = __webpack_require__(235)
	  , iterable       = __webpack_require__(222)
	  , iteratorSymbol = __webpack_require__(217).iterator;

	module.exports = function (obj) {
		if (typeof iterable(obj)[iteratorSymbol] === 'function') return obj[iteratorSymbol]();
		if (isArguments(obj)) return new ArrayIterator(obj);
		if (isString(obj)) return new StringIterator(obj);
		return new ArrayIterator(obj);
	};


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var setPrototypeOf = __webpack_require__(198)
	  , contains       = __webpack_require__(213)
	  , d              = __webpack_require__(204)
	  , Iterator       = __webpack_require__(229)

	  , defineProperty = Object.defineProperty
	  , ArrayIterator;

	ArrayIterator = module.exports = function (arr, kind) {
		if (!(this instanceof ArrayIterator)) return new ArrayIterator(arr, kind);
		Iterator.call(this, arr);
		if (!kind) kind = 'value';
		else if (contains.call(kind, 'key+value')) kind = 'key+value';
		else if (contains.call(kind, 'key')) kind = 'key';
		else kind = 'value';
		defineProperty(this, '__kind__', d('', kind));
	};
	if (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);

	ArrayIterator.prototype = Object.create(Iterator.prototype, {
		constructor: d(ArrayIterator),
		_resolve: d(function (i) {
			if (this.__kind__ === 'value') return this.__list__[i];
			if (this.__kind__ === 'key+value') return [i, this.__list__[i]];
			return i;
		}),
		toString: d(function () { return '[object Array Iterator]'; })
	});


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var clear    = __webpack_require__(190)
	  , assign   = __webpack_require__(205)
	  , callable = __webpack_require__(203)
	  , value    = __webpack_require__(191)
	  , d        = __webpack_require__(204)
	  , autoBind = __webpack_require__(230)
	  , Symbol   = __webpack_require__(217)

	  , defineProperty = Object.defineProperty
	  , defineProperties = Object.defineProperties
	  , Iterator;

	module.exports = Iterator = function (list, context) {
		if (!(this instanceof Iterator)) return new Iterator(list, context);
		defineProperties(this, {
			__list__: d('w', value(list)),
			__context__: d('w', context),
			__nextIndex__: d('w', 0)
		});
		if (!context) return;
		callable(context.on);
		context.on('_add', this._onAdd);
		context.on('_delete', this._onDelete);
		context.on('_clear', this._onClear);
	};

	defineProperties(Iterator.prototype, assign({
		constructor: d(Iterator),
		_next: d(function () {
			var i;
			if (!this.__list__) return;
			if (this.__redo__) {
				i = this.__redo__.shift();
				if (i !== undefined) return i;
			}
			if (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;
			this._unBind();
		}),
		next: d(function () { return this._createResult(this._next()); }),
		_createResult: d(function (i) {
			if (i === undefined) return { done: true, value: undefined };
			return { done: false, value: this._resolve(i) };
		}),
		_resolve: d(function (i) { return this.__list__[i]; }),
		_unBind: d(function () {
			this.__list__ = null;
			delete this.__redo__;
			if (!this.__context__) return;
			this.__context__.off('_add', this._onAdd);
			this.__context__.off('_delete', this._onDelete);
			this.__context__.off('_clear', this._onClear);
			this.__context__ = null;
		}),
		toString: d(function () { return '[object Iterator]'; })
	}, autoBind({
		_onAdd: d(function (index) {
			if (index >= this.__nextIndex__) return;
			++this.__nextIndex__;
			if (!this.__redo__) {
				defineProperty(this, '__redo__', d('c', [index]));
				return;
			}
			this.__redo__.forEach(function (redo, i) {
				if (redo >= index) this.__redo__[i] = ++redo;
			}, this);
			this.__redo__.push(index);
		}),
		_onDelete: d(function (index) {
			var i;
			if (index >= this.__nextIndex__) return;
			--this.__nextIndex__;
			if (!this.__redo__) return;
			i = this.__redo__.indexOf(index);
			if (i !== -1) this.__redo__.splice(i, 1);
			this.__redo__.forEach(function (redo, i) {
				if (redo > index) this.__redo__[i] = --redo;
			}, this);
		}),
		_onClear: d(function () {
			if (this.__redo__) clear.call(this.__redo__);
			this.__nextIndex__ = 0;
		})
	})));

	defineProperty(Iterator.prototype, Symbol.iterator, d(function () {
		return this;
	}));
	defineProperty(Iterator.prototype, Symbol.toStringTag, d('', 'Iterator'));


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var copy       = __webpack_require__(231)
	  , map        = __webpack_require__(232)
	  , callable   = __webpack_require__(203)
	  , validValue = __webpack_require__(191)

	  , bind = Function.prototype.bind, defineProperty = Object.defineProperty
	  , hasOwnProperty = Object.prototype.hasOwnProperty
	  , define;

	define = function (name, desc, bindTo) {
		var value = validValue(desc) && callable(desc.value), dgs;
		dgs = copy(desc);
		delete dgs.writable;
		delete dgs.value;
		dgs.get = function () {
			if (hasOwnProperty.call(this, name)) return value;
			desc.value = bind.call(value, (bindTo == null) ? this : this[bindTo]);
			defineProperty(this, name, desc);
			return this[name];
		};
		return dgs;
	};

	module.exports = function (props/*, bindTo*/) {
		var bindTo = arguments[1];
		return map(props, function (desc, name) {
			return define(name, desc, bindTo);
		});
	};


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var assign = __webpack_require__(205)
	  , value  = __webpack_require__(191);

	module.exports = function (obj) {
		var copy = Object(value(obj));
		if (copy !== obj) return copy;
		return assign({}, obj);
	};


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var callable = __webpack_require__(203)
	  , forEach  = __webpack_require__(233)

	  , call = Function.prototype.call;

	module.exports = function (obj, cb/*, thisArg*/) {
		var o = {}, thisArg = arguments[2];
		callable(cb);
		forEach(obj, function (value, key, obj, index) {
			o[key] = call.call(cb, thisArg, value, key, obj, index);
		});
		return o;
	};


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(234)('forEach');


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// Internal method, used by iteration functions.
	// Calls a function for each key-value pair found in object
	// Optionally takes compareFn to iterate object in specific order

	'use strict';

	var callable = __webpack_require__(203)
	  , value    = __webpack_require__(191)

	  , bind = Function.prototype.bind, call = Function.prototype.call, keys = Object.keys
	  , propertyIsEnumerable = Object.prototype.propertyIsEnumerable;

	module.exports = function (method, defVal) {
		return function (obj, cb/*, thisArg, compareFn*/) {
			var list, thisArg = arguments[2], compareFn = arguments[3];
			obj = Object(value(obj));
			callable(cb);

			list = keys(obj);
			if (compareFn) {
				list.sort((typeof compareFn === 'function') ? bind.call(compareFn, obj) : undefined);
			}
			if (typeof method !== 'function') method = list[method];
			return call.call(method, list, function (key, index) {
				if (!propertyIsEnumerable.call(obj, key)) return defVal;
				return call.call(cb, thisArg, obj[key], key, obj, index);
			});
		};
	};


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// Thanks @mathiasbynens
	// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols

	'use strict';

	var setPrototypeOf = __webpack_require__(198)
	  , d              = __webpack_require__(204)
	  , Iterator       = __webpack_require__(229)

	  , defineProperty = Object.defineProperty
	  , StringIterator;

	StringIterator = module.exports = function (str) {
		if (!(this instanceof StringIterator)) return new StringIterator(str);
		str = String(str);
		Iterator.call(this, str);
		defineProperty(this, '__length__', d('', str.length));

	};
	if (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);

	StringIterator.prototype = Object.create(Iterator.prototype, {
		constructor: d(StringIterator),
		_next: d(function () {
			if (!this.__list__) return;
			if (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;
			this._unBind();
		}),
		_resolve: d(function (i) {
			var char = this.__list__[i], code;
			if (this.__nextIndex__ === this.__length__) return char;
			code = char.charCodeAt(0);
			if ((code >= 0xD800) && (code <= 0xDBFF)) return char + this.__list__[this.__nextIndex__++];
			return char;
		}),
		toString: d(function () { return '[object String Iterator]'; })
	});


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var setPrototypeOf    = __webpack_require__(198)
	  , contains          = __webpack_require__(213)
	  , d                 = __webpack_require__(204)
	  , Iterator          = __webpack_require__(229)
	  , toStringTagSymbol = __webpack_require__(217).toStringTag

	  , defineProperty = Object.defineProperty
	  , SetIterator;

	SetIterator = module.exports = function (set, kind) {
		if (!(this instanceof SetIterator)) return new SetIterator(set, kind);
		Iterator.call(this, set.__setData__, set);
		if (!kind) kind = 'value';
		else if (contains.call(kind, 'key+value')) kind = 'key+value';
		else kind = 'value';
		defineProperty(this, '__kind__', d('', kind));
	};
	if (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);

	SetIterator.prototype = Object.create(Iterator.prototype, {
		constructor: d(SetIterator),
		_resolve: d(function (i) {
			if (this.__kind__ === 'value') return this.__list__[i];
			return [this.__list__[i], this.__list__[i]];
		}),
		toString: d(function () { return '[object Set Iterator]'; })
	});
	defineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));


/***/ },
/* 237 */
/***/ function(module, exports) {

	// Exports true if environment provides native `Set` implementation,
	// whatever that is.

	'use strict';

	module.exports = (function () {
		if (typeof Set === 'undefined') return false;
		return (Object.prototype.toString.call(Set.prototype) === '[object Set]');
	}());


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedValue=__webpack_require__(179);
	var AnimatedWithChildren=__webpack_require__(180);
	var invariant=__webpack_require__(177);
	var guid=__webpack_require__(185);



	/**
	 * 2D Value for driving 2D animations, such as pan gestures.  Almost identical
	 * API to normal `Animated.Value`, but multiplexed.  Contains two regular
	 * `Animated.Value`s under the hood.  Example:
	 *
	 *```javascript
	 *  class DraggableView extends React.Component {
	 *    constructor(props) {
	 *      super(props);
	 *      this.state = {
	 *        pan: new Animated.ValueXY(), // inits to zero
	 *      };
	 *      this.state.panResponder = PanResponder.create({
	 *        onStartShouldSetPanResponder: () => true,
	 *        onPanResponderMove: Animated.event([null, {
	 *          dx: this.state.pan.x, // x,y are Animated.Value
	 *          dy: this.state.pan.y,
	 *        }]),
	 *        onPanResponderRelease: () => {
	 *          Animated.spring(
	 *            this.state.pan,         // Auto-multiplexed
	 *            {toValue: {x: 0, y: 0}} // Back to zero
	 *          ).start();
	 *        },
	 *      });
	 *    }
	 *    render() {
	 *      return (
	 *        <Animated.View
	 *          {...this.state.panResponder.panHandlers}
	 *          style={this.state.pan.getLayout()}>
	 *          {this.props.children}
	 *        </Animated.View>
	 *      );
	 *    }
	 *  }
	 *```
	 */var 
	AnimatedValueXY=function(_AnimatedWithChildren){_inherits(AnimatedValueXY,_AnimatedWithChildren);




	function AnimatedValueXY(valueIn){_classCallCheck(this,AnimatedValueXY);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedValueXY).call(this));

	var value=valueIn||{x:0,y:0}; // fixme: shouldn't need `: any`
	if(typeof value.x==='number'&&typeof value.y==='number'){
	_this.x=new AnimatedValue(value.x);
	_this.y=new AnimatedValue(value.y);}else 
	{
	invariant(
	value.x instanceof AnimatedValue&&
	value.y instanceof AnimatedValue,
	'AnimatedValueXY must be initalized with an object of numbers or '+
	'AnimatedValues.');

	_this.x=value.x;
	_this.y=value.y;}

	_this._listeners={};return _this;}_createClass(AnimatedValueXY,[{key:'setValue',value:function setValue(


	value){
	this.x.setValue(value.x);
	this.y.setValue(value.y);}},{key:'setOffset',value:function setOffset(


	offset){
	this.x.setOffset(offset.x);
	this.y.setOffset(offset.y);}},{key:'flattenOffset',value:function flattenOffset()


	{
	this.x.flattenOffset();
	this.y.flattenOffset();}},{key:'__getValue',value:function __getValue()


	{
	return {
	x:this.x.__getValue(),
	y:this.y.__getValue()};}},{key:'stopAnimation',value:function stopAnimation(



	callback){
	this.x.stopAnimation();
	this.y.stopAnimation();
	callback&&callback(this.__getValue());}},{key:'addListener',value:function addListener(


	callback){var _this2=this;
	var id=guid();
	var jointCallback=function(_ref){var number=_ref.value;
	callback(_this2.__getValue());};

	this._listeners[id]={
	x:this.x.addListener(jointCallback),
	y:this.y.addListener(jointCallback)};

	return id;}},{key:'removeListener',value:function removeListener(


	id){
	this.x.removeListener(this._listeners[id].x);
	this.y.removeListener(this._listeners[id].y);
	delete this._listeners[id];}


	/**
	   * Converts `{x, y}` into `{left, top}` for use in style, e.g.
	   *
	   *```javascript
	   *  style={this.state.anim.getLayout()}
	   *```
	   */},{key:'getLayout',value:function getLayout()
	{
	return {
	left:this.x,
	top:this.y};}



	/**
	   * Converts `{x, y}` into a useable translation transform, e.g.
	   *
	   *```javascript
	   *  style={{
	   *    transform: this.state.anim.getTranslateTransform()
	   *  }}
	   *```
	   */},{key:'getTranslateTransform',value:function getTranslateTransform()
	{
	return [
	{translateX:this.x},
	{translateY:this.y}];}}]);return AnimatedValueXY;}(AnimatedWithChildren);




	module.exports=AnimatedValueXY;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var AnimatedWithChildren=__webpack_require__(180);
	var Animated=__webpack_require__(178);
	var AnimatedValue=__webpack_require__(179);
	var Interpolation=__webpack_require__(183);
	var AnimatedInterpolation=__webpack_require__(182);var 



	AnimatedAddition=function(_AnimatedWithChildren){_inherits(AnimatedAddition,_AnimatedWithChildren);



	function AnimatedAddition(a,b){_classCallCheck(this,AnimatedAddition);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedAddition).call(this));

	_this._a=typeof a==='number'?new AnimatedValue(a):a;
	_this._b=typeof b==='number'?new AnimatedValue(b):b;return _this;}_createClass(AnimatedAddition,[{key:'__getValue',value:function __getValue()


	{
	return this._a.__getValue()+this._b.__getValue();}},{key:'interpolate',value:function interpolate(


	config){
	return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:function __attach()


	{
	this._a.__addChild(this);
	this._b.__addChild(this);}},{key:'__detach',value:function __detach()


	{
	this._a.__removeChild(this);
	this._b.__removeChild(this);}}]);return AnimatedAddition;}(AnimatedWithChildren);



	module.exports=AnimatedAddition;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var AnimatedWithChildren=__webpack_require__(180);
	var Animated=__webpack_require__(178);
	var AnimatedValue=__webpack_require__(179);
	var AnimatedInterpolation=__webpack_require__(182);
	var Interpolation=__webpack_require__(183);var 



	AnimatedMultiplication=function(_AnimatedWithChildren){_inherits(AnimatedMultiplication,_AnimatedWithChildren);



	function AnimatedMultiplication(a,b){_classCallCheck(this,AnimatedMultiplication);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedMultiplication).call(this));

	_this._a=typeof a==='number'?new AnimatedValue(a):a;
	_this._b=typeof b==='number'?new AnimatedValue(b):b;return _this;}_createClass(AnimatedMultiplication,[{key:'__getValue',value:function __getValue()


	{
	return this._a.__getValue()*this._b.__getValue();}},{key:'interpolate',value:function interpolate(


	config){
	return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:function __attach()


	{
	this._a.__addChild(this);
	this._b.__addChild(this);}},{key:'__detach',value:function __detach()


	{
	this._a.__removeChild(this);
	this._b.__removeChild(this);}}]);return AnimatedMultiplication;}(AnimatedWithChildren);



	module.exports=AnimatedMultiplication;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedWithChildren=__webpack_require__(180);
	var AnimatedInterpolation=__webpack_require__(182);
	var Interpolation=__webpack_require__(183);var 



	AnimatedModulo=function(_AnimatedWithChildren){_inherits(AnimatedModulo,_AnimatedWithChildren);

	// TODO(lmr): Make modulus able to be an animated value

	function AnimatedModulo(a,modulus){_classCallCheck(this,AnimatedModulo);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedModulo).call(this));

	_this._a=a;
	_this._modulus=modulus;return _this;}_createClass(AnimatedModulo,[{key:'__getValue',value:function __getValue()


	{
	return (this._a.__getValue()%this._modulus+this._modulus)%this._modulus;}},{key:'interpolate',value:function interpolate(


	config){
	return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:function __attach()


	{
	this._a.__addChild(this);}},{key:'__detach',value:function __detach()


	{
	this._a.__removeChild(this);}}]);return AnimatedModulo;}(AnimatedWithChildren);



	module.exports=AnimatedModulo;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedWithChildren=__webpack_require__(180);var 

	AnimatedTemplate=function(_AnimatedWithChildren){_inherits(AnimatedTemplate,_AnimatedWithChildren);



	function AnimatedTemplate(strings,values){_classCallCheck(this,AnimatedTemplate);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTemplate).call(this));

	_this._strings=strings;
	_this._values=values;return _this;}_createClass(AnimatedTemplate,[{key:'__transformValue',value:function __transformValue(


	value){
	if(value instanceof Animated){
	return value.__getValue();}else 
	{
	return value;}}},{key:'__getValue',value:function __getValue()



	{
	var value=this._strings[0];
	for(var i=0;i<this._values.length;++i){
	value+=this.__transformValue(this._values[i])+this._strings[1+i];}

	return value;}},{key:'__attach',value:function __attach()


	{
	for(var i=0;i<this._values.length;++i){
	if(this._values[i] instanceof Animated){
	this._values[i].__addChild(this);}}}},{key:'__detach',value:function __detach()




	{
	for(var i=0;i<this._values.length;++i){
	if(this._values[i] instanceof Animated){
	this._values[i].__removeChild(this);}}}}]);return AnimatedTemplate;}(AnimatedWithChildren);





	module.exports=AnimatedTemplate;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedValue=__webpack_require__(179);var 



	AnimatedTracking=function(_Animated){_inherits(AnimatedTracking,_Animated);






	function AnimatedTracking(
	value,
	parent,
	animationClass,
	animationConfig,
	callback)
	{_classCallCheck(this,AnimatedTracking);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTracking).call(this));

	_this._value=value;
	_this._parent=parent;
	_this._animationClass=animationClass;
	_this._animationConfig=animationConfig;
	_this._callback=callback;
	_this.__attach();return _this;}_createClass(AnimatedTracking,[{key:'__getValue',value:function __getValue()


	{
	return this._parent.__getValue();}},{key:'__attach',value:function __attach()


	{
	this._parent.__addChild(this);}},{key:'__detach',value:function __detach()


	{
	this._parent.__removeChild(this);}},{key:'update',value:function update()


	{
	this._value.animate(new this._animationClass(_extends({},
	this._animationConfig,{
	toValue:this._animationConfig.toValue.__getValue()})),
	this._callback);}}]);return AnimatedTracking;}(Animated);



	module.exports=AnimatedTracking;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var Animated=__webpack_require__(178);

	function isAnimated(obj){
	return obj instanceof Animated;}


	module.exports=isAnimated;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animation=__webpack_require__(186);
	var AnimatedValue=__webpack_require__(179);
	var Easing=__webpack_require__(246);
	var RequestAnimationFrame=__webpack_require__(248);
	var CancelAnimationFrame=__webpack_require__(249);



	var easeInOut=Easing.inOut(Easing.ease);var 








	TimingAnimation=function(_Animation){_inherits(TimingAnimation,_Animation);










	function TimingAnimation(
	config)
	{_classCallCheck(this,TimingAnimation);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(TimingAnimation).call(this));

	_this._toValue=config.toValue;
	_this._easing=config.easing!==undefined?config.easing:easeInOut;
	_this._duration=config.duration!==undefined?config.duration:500;
	_this._delay=config.delay!==undefined?config.delay:0;
	_this.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;return _this;}_createClass(TimingAnimation,[{key:'start',value:function start(



	fromValue,
	onUpdate,
	onEnd)
	{var _this2=this;
	this.__active=true;
	this._fromValue=fromValue;
	this._onUpdate=onUpdate;
	this.__onEnd=onEnd;

	var start=function(){
	if(_this2._duration===0){
	_this2._onUpdate(_this2._toValue);
	_this2.__debouncedOnEnd({finished:true});}else 
	{
	_this2._startTime=Date.now();
	_this2._animationFrame=RequestAnimationFrame.current(_this2.onUpdate.bind(_this2));}};


	if(this._delay){
	this._timeout=setTimeout(start,this._delay);}else 
	{
	start();}}},{key:'onUpdate',value:function onUpdate()



	{
	var now=Date.now();
	if(now>=this._startTime+this._duration){
	if(this._duration===0){
	this._onUpdate(this._toValue);}else 
	{
	this._onUpdate(
	this._fromValue+this._easing(1)*(this._toValue-this._fromValue));}


	this.__debouncedOnEnd({finished:true});
	return;}


	this._onUpdate(
	this._fromValue+
	this._easing((now-this._startTime)/this._duration)*(
	this._toValue-this._fromValue));

	if(this.__active){
	this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this));}}},{key:'stop',value:function stop()



	{
	this.__active=false;
	clearTimeout(this._timeout);
	CancelAnimationFrame.current(this._animationFrame);
	this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;}(Animation);



	module.exports=TimingAnimation;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var _bezier=__webpack_require__(247);

	/**
	 * This class implements common easing functions. The math is pretty obscure,
	 * but this cool website has nice visual illustrations of what they represent:
	 * http://xaedes.de/dev/transitions/
	 */var 
	Easing=function(){function Easing(){_classCallCheck(this,Easing);}_createClass(Easing,null,[{key:'step0',value:function step0(
	n){
	return n>0?1:0;}},{key:'step1',value:function step1(


	n){
	return n>=1?1:0;}},{key:'linear',value:function linear(


	t){
	return t;}},{key:'ease',value:function ease(


	t){
	return _ease(t);}},{key:'quad',value:function quad(


	t){
	return t*t;}},{key:'cubic',value:function cubic(


	t){
	return t*t*t;}},{key:'poly',value:function poly(


	n){
	return function(t){return Math.pow(t,n);};}},{key:'sin',value:function sin(


	t){
	return 1-Math.cos(t*Math.PI/2);}},{key:'circle',value:function circle(


	t){
	return 1-Math.sqrt(1-t*t);}},{key:'exp',value:function exp(


	t){
	return Math.pow(2,10*(t-1));}


	/**
	   * A simple elastic interaction, similar to a spring.  Default bounciness
	   * is 1, which overshoots a little bit once.  0 bounciness doesn't overshoot
	   * at all, and bounciness of N > 1 will overshoot about N times.
	   *
	   * Wolfram Plots:
	   *
	   *   http://tiny.cc/elastic_b_1 (default bounciness = 1)
	   *   http://tiny.cc/elastic_b_3 (bounciness = 3)
	   */},{key:'elastic',value:function elastic()
	{var bounciness=arguments.length<=0||arguments[0]===undefined?1:arguments[0];
	var p=bounciness*Math.PI;
	return function(t){return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);};}},{key:'back',value:function back(


	s){
	if(s===undefined){
	s=1.70158;}

	return function(t){return t*t*((s+1)*t-s);};}},{key:'bounce',value:function bounce(


	t){
	if(t<1/2.75){
	return 7.5625*t*t;}


	if(t<2/2.75){
	t-=1.5/2.75;
	return 7.5625*t*t+0.75;}


	if(t<2.5/2.75){
	t-=2.25/2.75;
	return 7.5625*t*t+0.9375;}


	t-=2.625/2.75;
	return 7.5625*t*t+0.984375;}},{key:'bezier',value:function bezier(



	x1,
	y1,
	x2,
	y2)
	{
	return _bezier(x1,y1,x2,y2);}},{key:'in',value:function _in(



	easing)
	{
	return easing;}


	/**
	   * Runs an easing function backwards.
	   */},{key:'out',value:function out(

	easing)
	{
	return function(t){return 1-easing(1-t);};}


	/**
	   * Makes any easing function symmetrical.
	   */},{key:'inOut',value:function inOut(

	easing)
	{
	return function(t){
	if(t<0.5){
	return easing(t*2)/2;}

	return 1-easing((1-t)*2)/2;};}}]);return Easing;}();




	var _ease=Easing.bezier(0.42,0,1,1);



	module.exports=Easing;

/***/ },
/* 247 */
/***/ function(module, exports) {

	/**
	 * https://github.com/gre/bezier-easing
	 * BezierEasing - use bezier curve for transition easing function
	 * by Gaëtan Renaudeau 2014 - 2015 – MIT License
	 * @nolint
	 */

	// These values are established by empiricism with tests (tradeoff: performance VS precision)
	var NEWTON_ITERATIONS=4;
	var NEWTON_MIN_SLOPE=0.001;
	var SUBDIVISION_PRECISION=0.0000001;
	var SUBDIVISION_MAX_ITERATIONS=10;

	var kSplineTableSize=11;
	var kSampleStepSize=1.0/(kSplineTableSize-1.0);

	var float32ArraySupported=typeof Float32Array==='function';

	function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}
	function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}
	function C(aA1){return 3.0*aA1;}

	// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
	function calcBezier(aT,aA1,aA2){return ((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}

	// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
	function getSlope(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}

	function binarySubdivide(aX,aA,aB,mX1,mX2){
	var currentX,currentT,i=0;
	do {
	currentT=aA+(aB-aA)/2.0;
	currentX=calcBezier(currentT,mX1,mX2)-aX;
	if(currentX>0.0){
	aB=currentT;}else 
	{
	aA=currentT;}}while(

	Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);
	return currentT;}


	function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){
	for(var i=0;i<NEWTON_ITERATIONS;++i){
	var currentSlope=getSlope(aGuessT,mX1,mX2);
	if(currentSlope===0.0){
	return aGuessT;}

	var currentX=calcBezier(aGuessT,mX1,mX2)-aX;
	aGuessT-=currentX/currentSlope;}

	return aGuessT;}


	module.exports=function bezier(mX1,mY1,mX2,mY2){
	if(!(0<=mX1&&mX1<=1&&0<=mX2&&mX2<=1)){ // eslint-disable-line yoda
	throw new Error('bezier x values must be in [0, 1] range');}


	// Precompute samples table
	var sampleValues=float32ArraySupported?new Float32Array(kSplineTableSize):new Array(kSplineTableSize);
	if(mX1!==mY1||mX2!==mY2){
	for(var i=0;i<kSplineTableSize;++i){
	sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}}



	function getTForX(aX){
	var intervalStart=0.0;
	var currentSample=1;
	var lastSample=kSplineTableSize-1;

	for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){
	intervalStart+=kSampleStepSize;}

	--currentSample;

	// Interpolate to provide an initial guess for t
	var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);
	var guessForT=intervalStart+dist*kSampleStepSize;

	var initialSlope=getSlope(guessForT,mX1,mX2);
	if(initialSlope>=NEWTON_MIN_SLOPE){
	return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else 
	if(initialSlope===0.0){
	return guessForT;}else 
	{
	return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}



	return function BezierEasing(x){
	if(mX1===mY1&&mX2===mY2){
	return x; // linear
	}
	// Because JavaScript number are imprecise, we should guarantee the extremes are right.
	if(x===0){
	return 0;}

	if(x===1){
	return 1;}

	return calcBezier(getTForX(x),mY1,mY2);};};

/***/ },
/* 248 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var RequestAnimationFrame={
	current:function(cb){return global.requestAnimationFrame(cb);},
	inject:function(injected){
	RequestAnimationFrame.current=injected;}};



	module.exports=RequestAnimationFrame;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 249 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var CancelAnimationFrame={
	current:function(id){return global.cancelAnimationFrame(id);},
	inject:function(injected){
	CancelAnimationFrame.current=injected;}};



	module.exports=CancelAnimationFrame;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animation=__webpack_require__(186);
	var RequestAnimationFrame=__webpack_require__(248);
	var CancelAnimationFrame=__webpack_require__(249);var 








	DecayAnimation=function(_Animation){_inherits(DecayAnimation,_Animation);








	function DecayAnimation(
	config)
	{_classCallCheck(this,DecayAnimation);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(DecayAnimation).call(this));

	_this._deceleration=config.deceleration!==undefined?config.deceleration:0.998;
	_this._velocity=config.velocity;
	_this.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;return _this;}_createClass(DecayAnimation,[{key:'start',value:function start(



	fromValue,
	onUpdate,
	onEnd)
	{
	this.__active=true;
	this._lastValue=fromValue;
	this._fromValue=fromValue;
	this._onUpdate=onUpdate;
	this.__onEnd=onEnd;
	this._startTime=Date.now();
	this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this));}},{key:'onUpdate',value:function onUpdate()


	{
	var now=Date.now();

	var value=this._fromValue+
	this._velocity/(1-this._deceleration)*(
	1-Math.exp(-(1-this._deceleration)*(now-this._startTime)));

	this._onUpdate(value);

	if(Math.abs(this._lastValue-value)<0.1){
	this.__debouncedOnEnd({finished:true});
	return;}


	this._lastValue=value;
	if(this.__active){
	this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this));}}},{key:'stop',value:function stop()



	{
	this.__active=false;
	CancelAnimationFrame.current(this._animationFrame);
	this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;}(Animation);



	module.exports=DecayAnimation;

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animation=__webpack_require__(186);
	var AnimatedValue=__webpack_require__(179);
	var RequestAnimationFrame=__webpack_require__(248);
	var CancelAnimationFrame=__webpack_require__(249);
	var invariant=__webpack_require__(177);
	var SpringConfig=__webpack_require__(252);















	function withDefault(value,defaultValue){
	if(value===undefined||value===null){
	return defaultValue;}

	return value;}var 


	SpringAnimation=function(_Animation){_inherits(SpringAnimation,_Animation);















	function SpringAnimation(
	config)
	{_classCallCheck(this,SpringAnimation);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(SpringAnimation).call(this));


	_this._overshootClamping=withDefault(config.overshootClamping,false);
	_this._restDisplacementThreshold=withDefault(config.restDisplacementThreshold,0.001);
	_this._restSpeedThreshold=withDefault(config.restSpeedThreshold,0.001);
	_this._initialVelocity=config.velocity;
	_this._lastVelocity=withDefault(config.velocity,0);
	_this._toValue=config.toValue;
	_this.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;

	var springConfig;
	if(config.bounciness!==undefined||config.speed!==undefined){
	invariant(
	config.tension===undefined&&config.friction===undefined,
	'You can only define bounciness/speed or tension/friction but not both');

	springConfig=SpringConfig.fromBouncinessAndSpeed(
	withDefault(config.bounciness,8),
	withDefault(config.speed,12));}else 

	{
	springConfig=SpringConfig.fromOrigamiTensionAndFriction(
	withDefault(config.tension,40),
	withDefault(config.friction,7));}


	_this._tension=springConfig.tension;
	_this._friction=springConfig.friction;return _this;}_createClass(SpringAnimation,[{key:'start',value:function start(



	fromValue,
	onUpdate,
	onEnd,
	previousAnimation)
	{
	this.__active=true;
	this._startPosition=fromValue;
	this._lastPosition=this._startPosition;

	this._onUpdate=onUpdate;
	this.__onEnd=onEnd;
	this._lastTime=Date.now();

	if(previousAnimation instanceof SpringAnimation){
	var internalState=previousAnimation.getInternalState();
	this._lastPosition=internalState.lastPosition;
	this._lastVelocity=internalState.lastVelocity;
	this._lastTime=internalState.lastTime;}

	if(this._initialVelocity!==undefined&&
	this._initialVelocity!==null){
	this._lastVelocity=this._initialVelocity;}

	this.onUpdate();}},{key:'getInternalState',value:function getInternalState()


	{
	return {
	lastPosition:this._lastPosition,
	lastVelocity:this._lastVelocity,
	lastTime:this._lastTime};}},{key:'onUpdate',value:function onUpdate()



	{
	var position=this._lastPosition;
	var velocity=this._lastVelocity;

	var tempPosition=this._lastPosition;
	var tempVelocity=this._lastVelocity;

	// If for some reason we lost a lot of frames (e.g. process large payload or
	// stopped in the debugger), we only advance by 4 frames worth of
	// computation and will continue on the next frame. It's better to have it
	// running at faster speed than jumping to the end.
	var MAX_STEPS=64;
	var now=Date.now();
	if(now>this._lastTime+MAX_STEPS){
	now=this._lastTime+MAX_STEPS;}


	// We are using a fixed time step and a maximum number of iterations.
	// The following post provides a lot of thoughts into how to build this
	// loop: http://gafferongames.com/game-physics/fix-your-timestep/
	var TIMESTEP_MSEC=1;
	var numSteps=Math.floor((now-this._lastTime)/TIMESTEP_MSEC);

	for(var i=0;i<numSteps;++i){
	// Velocity is based on seconds instead of milliseconds
	var step=TIMESTEP_MSEC/1000;

	// This is using RK4. A good blog post to understand how it works:
	// http://gafferongames.com/game-physics/integration-basics/
	var aVelocity=velocity;
	var aAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
	var tempPosition=position+aVelocity*step/2;
	var tempVelocity=velocity+aAcceleration*step/2;

	var bVelocity=tempVelocity;
	var bAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
	tempPosition=position+bVelocity*step/2;
	tempVelocity=velocity+bAcceleration*step/2;

	var cVelocity=tempVelocity;
	var cAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
	tempPosition=position+cVelocity*step/2;
	tempVelocity=velocity+cAcceleration*step/2;

	var dVelocity=tempVelocity;
	var dAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
	tempPosition=position+cVelocity*step/2;
	tempVelocity=velocity+cAcceleration*step/2;

	var dxdt=(aVelocity+2*(bVelocity+cVelocity)+dVelocity)/6;
	var dvdt=(aAcceleration+2*(bAcceleration+cAcceleration)+dAcceleration)/6;

	position+=dxdt*step;
	velocity+=dvdt*step;}


	this._lastTime=now;
	this._lastPosition=position;
	this._lastVelocity=velocity;

	this._onUpdate(position);
	if(!this.__active){ // a listener might have stopped us in _onUpdate
	return;}


	// Conditions for stopping the spring animation
	var isOvershooting=false;
	if(this._overshootClamping&&this._tension!==0){
	if(this._startPosition<this._toValue){
	isOvershooting=position>this._toValue;}else 
	{
	isOvershooting=position<this._toValue;}}


	var isVelocity=Math.abs(velocity)<=this._restSpeedThreshold;
	var isDisplacement=true;
	if(this._tension!==0){
	isDisplacement=Math.abs(this._toValue-position)<=this._restDisplacementThreshold;}


	if(isOvershooting||isVelocity&&isDisplacement){
	if(this._tension!==0){
	// Ensure that we end up with a round value
	this._onUpdate(this._toValue);}


	this.__debouncedOnEnd({finished:true});
	return;}

	this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this));}},{key:'stop',value:function stop()


	{
	this.__active=false;
	CancelAnimationFrame.current(this._animationFrame);
	this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;}(Animation);



	module.exports=SpringAnimation;

/***/ },
/* 252 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';






	function tensionFromOrigamiValue(oValue){
	return (oValue-30)*3.62+194;}


	function frictionFromOrigamiValue(oValue){
	return (oValue-8)*3+25;}


	function fromOrigamiTensionAndFriction(
	tension,
	friction)
	{
	return {
	tension:tensionFromOrigamiValue(tension),
	friction:frictionFromOrigamiValue(friction)};}



	function fromBouncinessAndSpeed(
	bounciness,
	speed)
	{
	function normalize(value,startValue,endValue){
	return (value-startValue)/(endValue-startValue);}


	function projectNormal(n,start,end){
	return start+n*(end-start);}


	function linearInterpolation(t,start,end){
	return t*end+(1-t)*start;}


	function quadraticOutInterpolation(t,start,end){
	return linearInterpolation(2*t-t*t,start,end);}


	function b3Friction1(x){
	return 0.0007*Math.pow(x,3)-
	0.031*Math.pow(x,2)+0.64*x+1.28;}


	function b3Friction2(x){
	return 0.000044*Math.pow(x,3)-
	0.006*Math.pow(x,2)+0.36*x+2;}


	function b3Friction3(x){
	return 0.00000045*Math.pow(x,3)-
	0.000332*Math.pow(x,2)+0.1078*x+5.84;}


	function b3Nobounce(tension){
	if(tension<=18){
	return b3Friction1(tension);}else 
	if(tension>18&&tension<=44){
	return b3Friction2(tension);}else 
	{
	return b3Friction3(tension);}}



	var b=normalize(bounciness/1.7,0,20);
	b=projectNormal(b,0,0.8);
	var s=normalize(speed/1.7,0,20);
	var bouncyTension=projectNormal(s,0.5,200);
	var bouncyFriction=quadraticOutInterpolation(
	b,
	b3Nobounce(bouncyTension),
	0.01);


	return {
	tension:tensionFromOrigamiValue(bouncyTension),
	friction:frictionFromOrigamiValue(bouncyFriction)};}



	module.exports={
	fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
	fromBouncinessAndSpeed:fromBouncinessAndSpeed};

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var React=__webpack_require__(1);
	var AnimatedProps=__webpack_require__(254);
	var ApplyAnimatedValues=__webpack_require__(258);

	function createAnimatedComponent(Component){
	var refName='node';var 

	AnimatedComponent=function(_React$Component){_inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){_classCallCheck(this,AnimatedComponent);return _possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedComponent).apply(this,arguments));}_createClass(AnimatedComponent,[{key:'componentWillUnmount',value:function componentWillUnmount()


	{
	this._propsAnimated&&this._propsAnimated.__detach();}},{key:'setNativeProps',value:function setNativeProps(


	props){
	var didUpdate=ApplyAnimatedValues.current(this.refs[refName],props);
	if(didUpdate===false){
	this.forceUpdate();}}},{key:'componentWillMount',value:function componentWillMount()



	{
	this.attachProps(this.props);}},{key:'attachProps',value:function attachProps(


	nextProps){var _this2=this;
	var oldPropsAnimated=this._propsAnimated;

	// The system is best designed when setNativeProps is implemented. It is
	// able to avoid re-rendering and directly set the attributes that
	// changed. However, setNativeProps can only be implemented on leaf
	// native components. If you want to animate a composite component, you
	// need to re-render it. In this case, we have a fallback that uses
	// forceUpdate.
	var callback=function(){
	var didUpdate=ApplyAnimatedValues.current(_this2.refs[refName],_this2._propsAnimated.__getAnimatedValue());
	if(didUpdate===false){
	_this2.forceUpdate();}};



	this._propsAnimated=new AnimatedProps(
	nextProps,
	callback);


	// When you call detach, it removes the element from the parent list
	// of children. If it goes to 0, then the parent also detaches itself
	// and so on.
	// An optimization is to attach the new elements and THEN detach the old
	// ones instead of detaching and THEN attaching.
	// This way the intermediate state isn't to go to 0 and trigger
	// this expensive recursive detaching to then re-attach everything on
	// the very next operation.
	oldPropsAnimated&&oldPropsAnimated.__detach();}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(


	nextProps){
	this.attachProps(nextProps);}},{key:'render',value:function render()


	{
	return (
	React.createElement(Component,_extends({},
	this._propsAnimated.__getValue(),{
	ref:refName})));}}]);return AnimatedComponent;}(React.Component);




	AnimatedComponent.propTypes={
	style:function(props,propName,componentName){
	if(!Component.propTypes){
	return;}


	// TODO(lmr): We will probably bring this back in at some point, but maybe
	// just a subset of the proptypes... We should have a common set of props
	// that will be used for all platforms.
	//
	// for (var key in ViewStylePropTypes) {
	//   if (!Component.propTypes[key] && props[key] !== undefined) {
	//     console.error(
	//       'You are setting the style `{ ' + key + ': ... }` as a prop. You ' +
	//       'should nest it in a style object. ' +
	//       'E.g. `{ style: { ' + key + ': ... } }`'
	//     );
	//   }
	// }
	}};


	return AnimatedComponent;}


	module.exports=createAnimatedComponent;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedStyle=__webpack_require__(255);var 

	AnimatedProps=function(_Animated){_inherits(AnimatedProps,_Animated);



	function AnimatedProps(
	props,
	callback)
	{_classCallCheck(this,AnimatedProps);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedProps).call(this));

	if(props.style){
	props=_extends({},
	props,{
	style:new AnimatedStyle(props.style)});}


	_this._props=props;
	_this._callback=callback;
	_this.__attach();return _this;}_createClass(AnimatedProps,[{key:'__getValue',value:function __getValue()


	{
	var props={};
	for(var key in this._props){
	var value=this._props[key];
	if(value instanceof Animated){
	props[key]=value.__getValue();}else 
	{
	props[key]=value;}}


	return props;}},{key:'__getAnimatedValue',value:function __getAnimatedValue()


	{
	var props={};
	for(var key in this._props){
	var value=this._props[key];
	if(value instanceof Animated){
	props[key]=value.__getAnimatedValue();}}


	return props;}},{key:'__attach',value:function __attach()


	{
	for(var key in this._props){
	var value=this._props[key];
	if(value instanceof Animated){
	value.__addChild(this);}}}},{key:'__detach',value:function __detach()




	{
	for(var key in this._props){
	var value=this._props[key];
	if(value instanceof Animated){
	value.__removeChild(this);}}}},{key:'update',value:function update()




	{
	this._callback();}}]);return AnimatedProps;}(Animated);



	module.exports=AnimatedProps;

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedWithChildren=__webpack_require__(180);
	var AnimatedTransform=__webpack_require__(256);
	var FlattenStyle=__webpack_require__(257);var 

	AnimatedStyle=function(_AnimatedWithChildren){_inherits(AnimatedStyle,_AnimatedWithChildren);


	function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedStyle).call(this));

	style=FlattenStyle.current(style)||{};
	if(style.transform&&!(style.transform instanceof Animated)){
	style=_extends({},
	style,{
	transform:new AnimatedTransform(style.transform)});}


	_this._style=style;return _this;}_createClass(AnimatedStyle,[{key:'__getValue',value:function __getValue()


	{
	var style={};
	for(var key in this._style){
	var value=this._style[key];
	if(value instanceof Animated){
	style[key]=value.__getValue();}else 
	{
	style[key]=value;}}


	return style;}},{key:'__getAnimatedValue',value:function __getAnimatedValue()


	{
	var style={};
	for(var key in this._style){
	var value=this._style[key];
	if(value instanceof Animated){
	style[key]=value.__getAnimatedValue();}}


	return style;}},{key:'__attach',value:function __attach()


	{
	for(var key in this._style){
	var value=this._style[key];
	if(value instanceof Animated){
	value.__addChild(this);}}}},{key:'__detach',value:function __detach()




	{
	for(var key in this._style){
	var value=this._style[key];
	if(value instanceof Animated){
	value.__removeChild(this);}}}}]);return AnimatedStyle;}(AnimatedWithChildren);





	module.exports=AnimatedStyle;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var Animated=__webpack_require__(178);
	var AnimatedWithChildren=__webpack_require__(180);var 

	AnimatedTransform=function(_AnimatedWithChildren){_inherits(AnimatedTransform,_AnimatedWithChildren);


	function AnimatedTransform(transforms){_classCallCheck(this,AnimatedTransform);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTransform).call(this));

	_this._transforms=transforms;return _this;}_createClass(AnimatedTransform,[{key:'__getValue',value:function __getValue()


	{
	return this._transforms.map(function(transform){
	var result={};
	for(var key in transform){
	var value=transform[key];
	if(value instanceof Animated){
	result[key]=value.__getValue();}else 
	{
	result[key]=value;}}


	return result;});}},{key:'__getAnimatedValue',value:function __getAnimatedValue()



	{
	return this._transforms.map(function(transform){
	var result={};
	for(var key in transform){
	var value=transform[key];
	if(value instanceof Animated){
	result[key]=value.__getAnimatedValue();}else 
	{
	// All transform components needed to recompose matrix
	result[key]=value;}}


	return result;});}},{key:'__attach',value:function __attach()



	{var _this2=this;
	this._transforms.forEach(function(transform){
	for(var key in transform){
	var value=transform[key];
	if(value instanceof Animated){
	value.__addChild(_this2);}}});}},{key:'__detach',value:function __detach()





	{var _this3=this;
	this._transforms.forEach(function(transform){
	for(var key in transform){
	var value=transform[key];
	if(value instanceof Animated){
	value.__removeChild(_this3);}}});}}]);return AnimatedTransform;}(AnimatedWithChildren);






	module.exports=AnimatedTransform;

/***/ },
/* 257 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var FlattenStyle={
	current:function(style){return style;},
	inject:function(flatten){
	FlattenStyle.current=flatten;}};



	module.exports=FlattenStyle;

/***/ },
/* 258 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	var ApplyAnimatedValues={
	current:function ApplyAnimatedValues(instance,props){
	if(instance.setNativeProps){
	instance.setNativeProps(props);}else 
	{
	return false;}},


	inject:function(apply){
	ApplyAnimatedValues.current=apply;}};



	module.exports=ApplyAnimatedValues;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();
	var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _BaseComponentPropTypes=__webpack_require__(289);var _BaseComponentPropTypes2=_interopRequireDefault(_BaseComponentPropTypes);
	var _createDOMElement=__webpack_require__(290);var _createDOMElement2=_interopRequireDefault(_createDOMElement);
	var _ImageResizeMode=__webpack_require__(298);var _ImageResizeMode2=_interopRequireDefault(_ImageResizeMode);
	var _ImageStylePropTypes=__webpack_require__(294);var _ImageStylePropTypes2=_interopRequireDefault(_ImageStylePropTypes);
	var _resolveAssetSource=__webpack_require__(304);var _resolveAssetSource2=_interopRequireDefault(_resolveAssetSource);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _StyleSheetPropType=__webpack_require__(305);var _StyleSheetPropType2=_interopRequireDefault(_StyleSheetPropType);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/* global window */

	var STATUS_ERRORED='ERRORED';
	var STATUS_LOADED='LOADED';
	var STATUS_LOADING='LOADING';
	var STATUS_PENDING='PENDING';
	var STATUS_IDLE='IDLE';

	var ImageSourcePropType=_react.PropTypes.oneOfType([
	_react.PropTypes.shape({
	uri:_react.PropTypes.string.isRequired}),

	_react.PropTypes.string]);var


	Image=function(_Component){_inherits(Image,_Component);























	function Image(props,context){_classCallCheck(this,Image);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(Image).call(this,
	props,context));_this.

































































































	_onError=function(e){var
	onError=_this.props.onError;
	var event={nativeEvent:e};

	_this._destroyImageLoader();
	_this._updateImageState(STATUS_ERRORED);
	_this._onLoadEnd();
	if(onError){onError(event);}
	};_this.

	_onLoad=function(e){var
	onLoad=_this.props.onLoad;
	var event={nativeEvent:e};

	_this._destroyImageLoader();
	_this._updateImageState(STATUS_LOADED);
	if(onLoad){onLoad(event);}
	_this._onLoadEnd();
	};var uri=(0,_resolveAssetSource2.default)(props.source);_this._imageState=uri?STATUS_PENDING:STATUS_IDLE;_this.state={isLoaded:false};return _this;}_createClass(Image,[{key:'componentDidMount',value:function componentDidMount(){if(this._imageState===STATUS_PENDING){this._createImageLoader();}}},{key:'componentDidUpdate',value:function componentDidUpdate(){if(this._imageState===STATUS_PENDING&&!this.image){this._createImageLoader();}}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){var nextUri=(0,_resolveAssetSource2.default)(nextProps.source);if((0,_resolveAssetSource2.default)(this.props.source)!==nextUri){this._updateImageState(nextUri?STATUS_PENDING:STATUS_IDLE);}}},{key:'componentWillUnmount',value:function componentWillUnmount(){this._destroyImageLoader();}},{key:'render',value:function render(){var isLoaded=this.state.isLoaded;var _props=this.props;var accessibilityLabel=_props.accessibilityLabel;var accessible=_props.accessible;var children=_props.children;var defaultSource=_props.defaultSource;var onLayout=_props.onLayout;var source=_props.source;var testID=_props.testID;var displayImage=(0,_resolveAssetSource2.default)(!isLoaded?defaultSource:source);var backgroundImage=displayImage?'url("'+displayImage+'")':null;var style=_StyleSheet2.default.flatten(this.props.style);var resizeMode=this.props.resizeMode||style.resizeMode||_ImageResizeMode2.default.cover;// remove 'resizeMode' style, as it is not supported by View (N.B. styles are frozen in dev)
	style= false?_extends({},style):style;delete style.resizeMode;/**
	     * Image is a non-stretching View. The image is displayed as a background
	     * image to support `resizeMode`. The HTML image is hidden but used to
	     * provide the correct responsive image dimensions, and to support the
	     * image context menu. Child content is rendered into an element absolutely
	     * positioned over the image.
	     */return _react2.default.createElement(_View2.default,{accessibilityLabel:accessibilityLabel,accessibilityRole:'img',accessible:accessible,onLayout:onLayout,style:[styles.initial,style,backgroundImage&&{backgroundImage:backgroundImage},resizeModeStyles[resizeMode]],testID:testID},(0,_createDOMElement2.default)('img',{src:displayImage,style:styles.img}),children?_react2.default.createElement(_View2.default,{children:children,pointerEvents:'box-none',style:styles.children}):null);}},{key:'_createImageLoader',value:function _createImageLoader(){var uri=(0,_resolveAssetSource2.default)(this.props.source);this._destroyImageLoader();this.image=new window.Image();this.image.onerror=this._onError;this.image.onload=this._onLoad;this.image.src=uri;this._onLoadStart();}},{key:'_destroyImageLoader',value:function _destroyImageLoader(){if(this.image){this.image.onerror=null;this.image.onload=null;this.image=null;}}},{key:'_onLoadEnd',value:function _onLoadEnd(){var onLoadEnd=this.props.onLoadEnd;if(onLoadEnd){onLoadEnd();}}},{key:'_onLoadStart',value:function _onLoadStart(){var
	onLoadStart=this.props.onLoadStart;
	this._updateImageState(STATUS_LOADING);
	if(onLoadStart){onLoadStart();}
	}},{key:'_updateImageState',value:function _updateImageState(

	status){
	this._imageState=status;
	var isLoaded=this._imageState===STATUS_LOADED;
	if(isLoaded!==this.state.isLoaded){
	this.setState({isLoaded:isLoaded});
	}
	}}]);return Image;}(_react.Component);Image.displayName='Image';Image.propTypes=_extends({},_BaseComponentPropTypes2.default,{children:_react.PropTypes.any,defaultSource:ImageSourcePropType,onError:_react.PropTypes.func,onLayout:_react.PropTypes.func,onLoad:_react.PropTypes.func,onLoadEnd:_react.PropTypes.func,onLoadStart:_react.PropTypes.func,resizeMode:_react.PropTypes.oneOf(['center','contain','cover','none','repeat','stretch']),source:ImageSourcePropType,style:(0,_StyleSheetPropType2.default)(_ImageStylePropTypes2.default)});Image.defaultProps={accessible:true,style:{}};Image.resizeMode=_ImageResizeMode2.default;


	var styles=_StyleSheet2.default.create({
	initial:{
	alignSelf:'flex-start',
	backgroundColor:'transparent',
	backgroundPosition:'center',
	backgroundRepeat:'no-repeat',
	backgroundSize:'cover'},

	img:{
	borderWidth:0,
	height:'auto',
	maxHeight:'100%',
	maxWidth:'100%',
	opacity:0},

	children:{
	bottom:0,
	left:0,
	position:'absolute',
	right:0,
	top:0}});



	var resizeModeStyles=_StyleSheet2.default.create({
	center:{
	backgroundSize:'auto',
	backgroundPosition:'center'},

	contain:{
	backgroundSize:'contain'},

	cover:{
	backgroundSize:'cover'},

	none:{
	backgroundSize:'auto'},

	repeat:{
	backgroundSize:'auto',
	backgroundRepeat:'repeat'},

	stretch:{
	backgroundSize:'100% 100%'}});



	module.exports=(0,_applyNativeMethods2.default)(Image);

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	






	var _NativeMethodsMixin=__webpack_require__(261);var _NativeMethodsMixin2=_interopRequireDefault(_NativeMethodsMixin);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var applyNativeMethods=function applyNativeMethods(Component){
	Object.keys(_NativeMethodsMixin2.default).forEach(function(method){
	if(!Component.prototype[method]){
	Component.prototype[method]=_NativeMethodsMixin2.default[method];
	}
	});
	return Component;
	};/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * All rights reserved.
	 *
	 * 
	 */module.exports=applyNativeMethods;

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	







	var _react=__webpack_require__(1);
	var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);
	var _UIManager=__webpack_require__(262);var _UIManager2=_interopRequireDefault(_UIManager);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
























	var NativeMethodsMixin={
	/**
	   * Removes focus from an input or view. This is the opposite of `focus()`.
	   */
	blur:function blur(){
	_UIManager2.default.blur(_reactDom2.default.findDOMNode(this));
	},

	/**
	   * Requests focus for the given input or view.
	   * The exact behavior triggered will depend the type of view.
	   */
	focus:function focus(){
	_UIManager2.default.focus(_reactDom2.default.findDOMNode(this));
	},

	/**
	   * Determines the position and dimensions of the view
	   */
	measure:function measure(callback){
	_UIManager2.default.measure(
	_reactDom2.default.findDOMNode(this),
	mountSafeCallback(this,callback));

	},

	/**
	   * Determines the location of the given view in the window and returns the
	   * values via an async callback. If the React root view is embedded in
	   * another native view, this will give you the absolute coordinates. If
	   * successful, the callback will be called be called with the following
	   * arguments:
	   *
	   *  - x
	   *  - y
	   *  - width
	   *  - height
	   *
	   * Note that these measurements are not available until after the rendering
	   * has been completed in native.
	   */
	measureInWindow:function measureInWindow(callback){
	_UIManager2.default.measureInWindow(
	_reactDom2.default.findDOMNode(this),
	mountSafeCallback(this,callback));

	},

	/**
	   * Measures the view relative to another view (usually an ancestor)
	   */
	measureLayout:function measureLayout(
	relativeToNativeNode,
	onSuccess,
	onFail/* currently unused */)
	{
	_UIManager2.default.measureLayout(
	_reactDom2.default.findDOMNode(this),
	relativeToNativeNode,
	mountSafeCallback(this,onFail),
	mountSafeCallback(this,onSuccess));

	},

	/**
	   * This function sends props straight to the underlying DOM node.
	   */
	setNativeProps:function setNativeProps(nativeProps){
	_UIManager2.default.updateView(
	_reactDom2.default.findDOMNode(this),
	nativeProps,
	this);

	}};


	/**
	 * In the future, we should cleanup callbacks by cancelling them instead of
	 * using this.
	 *//**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */var mountSafeCallback=function mountSafeCallback(context,callback){return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(!callback){return undefined;}return callback.apply(context,args);};};

	module.exports=NativeMethodsMixin;

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var _createReactStyleObject=__webpack_require__(263);var _createReactStyleObject2=_interopRequireDefault(_createReactStyleObject);
	var _CSSPropertyOperations=__webpack_require__(95);var _CSSPropertyOperations2=_interopRequireDefault(_CSSPropertyOperations);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var _measureLayout=function _measureLayout(node,relativeToNativeNode,callback){
	var relativeNode=relativeToNativeNode||node.parentNode;
	var relativeRect=relativeNode.getBoundingClientRect();var _node$getBoundingClie=
	node.getBoundingClientRect();var height=_node$getBoundingClie.height;var left=_node$getBoundingClie.left;var top=_node$getBoundingClie.top;var width=_node$getBoundingClie.width;
	var x=left-relativeRect.left;
	var y=top-relativeRect.top;
	callback(x,y,width,height,left,top);
	};

	var UIManager={
	blur:function blur(node){
	try{node.blur();}catch(err){}
	},

	focus:function focus(node){
	try{node.focus();}catch(err){}
	},

	measure:function measure(node,callback){
	_measureLayout(node,null,callback);
	},

	measureInWindow:function measureInWindow(node,callback){var _node$getBoundingClie2=
	node.getBoundingClientRect();var height=_node$getBoundingClie2.height;var left=_node$getBoundingClie2.left;var top=_node$getBoundingClie2.top;var width=_node$getBoundingClie2.width;
	callback(left,top,width,height);
	},

	measureLayout:function measureLayout(node,relativeToNativeNode,onFail,onSuccess){
	var relativeTo=relativeToNativeNode||node.parentNode;
	_measureLayout(node,relativeTo,onSuccess);
	},

	updateView:function updateView(node,props,component/* only needed to surpress React errors in development */){
	for(var prop in props){
	var value=props[prop];

	switch(prop){
	case'style':
	// convert styles to DOM-styles
	_CSSPropertyOperations2.default.setValueForStyles(
	node,
	(0,_createReactStyleObject2.default)(value),
	component._reactInternalInstance);

	break;
	case'class':
	case'className':{
	var nativeProp='class';
	// prevent class names managed by React Native from being replaced
	var className=node.getAttribute(nativeProp)+' '+value;
	node.setAttribute(nativeProp,className);
	break;
	}
	case'text':
	case'value':
	// native platforms use `text` prop to replace text input value
	node.value=value;
	break;
	default:
	node.setAttribute(prop,value);}

	}
	}};


	module.exports=UIManager;

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var _expandStyle=__webpack_require__(264);var _expandStyle2=_interopRequireDefault(_expandStyle);
	var _flattenStyle=__webpack_require__(266);var _flattenStyle2=_interopRequireDefault(_flattenStyle);
	var _i18nStyle=__webpack_require__(268);var _i18nStyle2=_interopRequireDefault(_i18nStyle);
	var _processTextShadow=__webpack_require__(271);var _processTextShadow2=_interopRequireDefault(_processTextShadow);
	var _processTransform=__webpack_require__(272);var _processTransform2=_interopRequireDefault(_processTransform);
	var _processVendorPrefixes=__webpack_require__(273);var _processVendorPrefixes2=_interopRequireDefault(_processVendorPrefixes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var processors=[_processTextShadow2.default,_processTransform2.default,_processVendorPrefixes2.default];





	var applyProcessors=function applyProcessors(style){return processors.reduce(function(style,processor){return processor(style);},style);};

	var createReactDOMStyleObject=function createReactDOMStyleObject(reactNativeStyle){return applyProcessors(
	(0,_expandStyle2.default)((0,_i18nStyle2.default)((0,_flattenStyle2.default)(reactNativeStyle))));};


	module.exports=createReactDOMStyleObject;

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	










	var _normalizeValue=__webpack_require__(265);var _normalizeValue2=_interopRequireDefault(_normalizeValue);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var emptyObject={};/**
	 * The browser implements the CSS cascade, where the order of properties is a
	 * factor in determining which styles to paint. React Native is different in
	 * giving precedence to the more specific styles. For example, the value of
	 * `paddingTop` takes precedence over that of `padding`.
	 *
	 * This module creates mutally exclusive style declarations by expanding all of
	 * React Native's supported shortform properties (e.g. `padding`) to their
	 * longfrom equivalents.
	 */var styleShortFormProperties={borderColor:['borderTopColor','borderRightColor','borderBottomColor','borderLeftColor'],borderRadius:['borderTopLeftRadius','borderTopRightRadius','borderBottomRightRadius','borderBottomLeftRadius'],borderStyle:['borderTopStyle','borderRightStyle','borderBottomStyle','borderLeftStyle'],borderWidth:['borderTopWidth','borderRightWidth','borderBottomWidth','borderLeftWidth'],margin:['marginTop','marginRight','marginBottom','marginLeft'],marginHorizontal:['marginRight','marginLeft'],marginVertical:['marginTop','marginBottom'],overflow:['overflowX','overflowY'],
	padding:['paddingTop','paddingRight','paddingBottom','paddingLeft'],
	paddingHorizontal:['paddingRight','paddingLeft'],
	paddingVertical:['paddingTop','paddingBottom'],
	textDecorationLine:['textDecoration'],
	writingDirection:['direction']};


	var alphaSort=function alphaSort(arr){return arr.sort(function(a,b){
	if(a<b){return-1;}
	if(a>b){return 1;}
	return 0;
	});};

	var createStyleReducer=function createStyleReducer(originalStyle){
	var originalStyleProps=Object.keys(originalStyle);

	return function(style,prop){
	var value=(0,_normalizeValue2.default)(prop,originalStyle[prop]);
	var longFormProperties=styleShortFormProperties[prop];

	// React Native treats `flex:1` like `flex:1 1 auto`
	if(prop==='flex'){
	style.flexGrow=value;
	style.flexShrink=1;
	style.flexBasis='auto';
	// React Native accepts 'center' as a value
	}else if(prop==='textAlignVertical'){
	style.verticalAlign=value==='center'?'middle':value;
	}else if(longFormProperties){
	longFormProperties.forEach(function(longForm,i){
	// the value of any longform property in the original styles takes
	// precedence over the shortform's value
	if(originalStyleProps.indexOf(longForm)===-1){
	style[longForm]=value;
	}
	});
	}else{
	style[prop]=value;
	}
	return style;
	};
	};

	var expandStyle=function expandStyle(){var style=arguments.length<=0||arguments[0]===undefined?emptyObject:arguments[0];
	var sortedStyleProps=alphaSort(Object.keys(style));
	var styleReducer=createStyleReducer(style);
	return sortedStyleProps.reduce(styleReducer,{});
	};

	module.exports=expandStyle;

/***/ },
/* 265 */
/***/ function(module, exports) {

	var unitlessNumbers={
	boxFlex:true,
	boxFlexGroup:true,
	columnCount:true,
	flex:true,
	flexGrow:true,
	flexPositive:true,
	flexShrink:true,
	flexNegative:true,
	fontWeight:true,
	lineClamp:true,
	opacity:true,
	order:true,
	orphans:true,
	widows:true,
	zIndex:true,
	zoom:true,
	// SVG-related
	fillOpacity:true,
	strokeDashoffset:true,
	strokeOpacity:true,
	strokeWidth:true,
	// transform types
	scale:true,
	scaleX:true,
	scaleY:true,
	scaleZ:true};


	var normalizeValue=function normalizeValue(property,value){
	if(!unitlessNumbers[property]&&typeof value==='number'){
	value=value+'px';
	}
	return value;
	};

	module.exports=normalizeValue;

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenStyle
	 * 
	 */
	'use strict';

	var ReactNativePropRegistry=__webpack_require__(267);
	var invariant=__webpack_require__(7);

	function getStyle(style){
	if(typeof style==='number'){
	return ReactNativePropRegistry.getByID(style);
	}
	return style;
	}

	function flattenStyle(style){
	if(!style){
	return undefined;
	}
	invariant(style!==true,'style may be false but not true');

	if(!Array.isArray(style)){
	return getStyle(style);
	}

	var result={};
	for(var i=0,styleLength=style.length;i<styleLength;++i){
	var computedStyle=flattenStyle(style[i]);
	if(computedStyle){
	for(var key in computedStyle){
	result[key]=computedStyle[key];
	}
	}
	}
	return result;
	}

	module.exports=flattenStyle;

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativePropRegistry
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var emptyObject={};
	var objects={};
	var uniqueID=1;var

	ReactNativePropRegistry=function(){function ReactNativePropRegistry(){_classCallCheck(this,ReactNativePropRegistry);}_createClass(ReactNativePropRegistry,null,[{key:'register',value:function register(
	object){
	var id=++uniqueID;
	if(false){
	Object.freeze(object);
	}
	objects[id]=object;
	return id;
	}},{key:'getByID',value:function getByID(

	id){
	if(!id){
	// Used in the style={[condition && id]} pattern,
	// we want it to be a no-op when the value is false or null
	return emptyObject;
	}

	var object=objects[id];
	if(!object){
	console.warn('Invalid style with id `'+id+'`. Skipping ...');
	return emptyObject;
	}
	return object;
	}}]);return ReactNativePropRegistry;}();


	module.exports=ReactNativePropRegistry;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var _I18nManager=__webpack_require__(269);var _I18nManager2=_interopRequireDefault(_I18nManager);
	var _multiplyStyleLengthValue=__webpack_require__(270);var _multiplyStyleLengthValue2=_interopRequireDefault(_multiplyStyleLengthValue);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	/**
	 * Map of property names to their BiDi equivalent.
	 */
	var PROPERTIES_TO_SWAP={
	'borderTopLeftRadius':'borderTopRightRadius',
	'borderTopRightRadius':'borderTopLeftRadius',
	'borderBottomLeftRadius':'borderBottomRightRadius',
	'borderBottomRightRadius':'borderBottomLeftRadius',
	'borderLeftColor':'borderRightColor',
	'borderLeftStyle':'borderRightStyle',
	'borderLeftWidth':'borderRightWidth',
	'borderRightColor':'borderLeftColor',
	'borderRightWidth':'borderLeftWidth',
	'borderRightStyle':'borderLeftStyle',
	'left':'right',
	'marginLeft':'marginRight',
	'marginRight':'marginLeft',
	'paddingLeft':'paddingRight',
	'paddingRight':'paddingLeft',
	'right':'left'};


	var PROPERTIES_SWAP_LEFT_RIGHT={
	'clear':true,
	'float':true,
	'textAlign':true};


	var PROPERTIES_SWAP_LTR_RTL={
	'writingDirection':true};


	/**
	 * Invert the sign of a numeric-like value
	 */
	var additiveInverse=function additiveInverse(value){return(0,_multiplyStyleLengthValue2.default)(value,-1);};

	/**
	 * BiDi flip the given property.
	 */
	var flipProperty=function flipProperty(prop){
	return PROPERTIES_TO_SWAP.hasOwnProperty(prop)?PROPERTIES_TO_SWAP[prop]:prop;
	};

	/**
	 * BiDi flip translateX
	 */
	var flipTransform=function flipTransform(transform){
	var translateX=transform.translateX;
	if(translateX!=null){
	transform.translateX=additiveInverse(translateX);
	}
	return transform;
	};

	var swapLeftRight=function swapLeftRight(value){
	return value==='left'?'right':value==='right'?'left':value;
	};

	var swapLtrRtl=function swapLtrRtl(value){
	return value==='ltr'?'rtl':value==='rtl'?'ltr':value;
	};

	var i18nStyle=function i18nStyle(){var style=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];
	var newStyle={};
	for(var prop in style){
	if(style.hasOwnProperty(prop)){
	var indexOfNoFlip=prop.indexOf('$noI18n');

	if(_I18nManager2.default.isRTL){
	if(PROPERTIES_TO_SWAP[prop]){
	var newProp=flipProperty(prop);
	newStyle[newProp]=style[prop];
	}else if(PROPERTIES_SWAP_LEFT_RIGHT[prop]){
	newStyle[prop]=swapLeftRight(style[prop]);
	}else if(PROPERTIES_SWAP_LTR_RTL[prop]){
	newStyle[prop]=swapLtrRtl(style[prop]);
	}else if(prop==='textShadowOffset'){
	newStyle[prop]=style[prop];
	newStyle[prop].width=additiveInverse(style[prop].width);
	}else if(prop==='transform'){
	newStyle[prop]=style[prop].map(flipTransform);
	}else if(indexOfNoFlip>-1){
	var _newProp=prop.substring(0,indexOfNoFlip);
	newStyle[_newProp]=style[prop];
	}else{
	newStyle[prop]=style[prop];
	}
	}else{
	if(indexOfNoFlip>-1){
	var _newProp2=prop.substring(0,indexOfNoFlip);
	newStyle[_newProp2]=style[prop];
	}else{
	newStyle[prop]=style[prop];
	}
	}
	}
	}

	return newStyle;
	};

	module.exports=i18nStyle;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var _ExecutionEnvironment=__webpack_require__(54);var _ExecutionEnvironment2=_interopRequireDefault(_ExecutionEnvironment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}








	var isPreferredLanguageRTL=false;
	var isRTLAllowed=true;
	var isRTLForced=false;

	var isRTL=function isRTL(){
	if(isRTLForced){
	return true;
	}
	return isRTLAllowed&&isPreferredLanguageRTL;
	};

	var onChange=function onChange(){
	if(_ExecutionEnvironment2.default.canUseDOM){
	document.documentElement.setAttribute('dir',isRTL()?'rtl':'ltr');
	}
	};

	var I18nManager={
	allowRTL:function allowRTL(bool){
	isRTLAllowed=bool;
	onChange();
	},
	forceRTL:function forceRTL(bool){
	isRTLForced=bool;
	onChange();
	},
	setPreferredLanguageRTL:function setPreferredLanguageRTL(bool){
	isPreferredLanguageRTL=bool;
	onChange();
	},
	get isRTL(){
	return isRTL();
	}};


	module.exports=I18nManager;

/***/ },
/* 270 */
/***/ function(module, exports) {

	Object.defineProperty(exports,"__esModule",{value:true});var CSS_UNIT_RE=/^[+-]?\d*(?:\.\d+)?(?:[Ee][+-]?\d+)?(\w*)/;

	var getUnit=function getUnit(str){return str.match(CSS_UNIT_RE)[1];};

	var isNumeric=function isNumeric(n){
	return!isNaN(parseFloat(n))&&isFinite(n);
	};

	var multiplyStyleLengthValue=function multiplyStyleLengthValue(value,multiple){
	if(typeof value==='string'){
	var number=parseFloat(value,10)*multiple;
	var unit=getUnit(value);
	return''+number+unit;
	}else if(isNumeric(value)){
	return value*multiple;
	}
	};exports.default=

	multiplyStyleLengthValue;

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var _normalizeValue=__webpack_require__(265);var _normalizeValue2=_interopRequireDefault(_normalizeValue);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var processTextShadow=function processTextShadow(style){
	if(style&&style.textShadowOffset){var _style$textShadowOffs=
	style.textShadowOffset;var height=_style$textShadowOffs.height;var width=_style$textShadowOffs.width;
	var offsetX=(0,_normalizeValue2.default)(null,height||0);
	var offsetY=(0,_normalizeValue2.default)(null,width||0);
	var blurRadius=(0,_normalizeValue2.default)(null,style.textShadowRadius||0);
	var color=style.textShadowColor||'currentcolor';

	style.textShadow=offsetX+' '+offsetY+' '+blurRadius+' '+color;
	style.textShadowColor=null;
	style.textShadowOffset=null;
	style.textShadowRadius=null;
	}
	return style;
	};

	module.exports=processTextShadow;

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var _normalizeValue=__webpack_require__(265);var _normalizeValue2=_interopRequireDefault(_normalizeValue);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	// { scale: 2 } => 'scale(2)'
	// { translateX: 20 } => 'translateX(20px)'
	var mapTransform=function mapTransform(transform){
	var type=Object.keys(transform)[0];
	var value=(0,_normalizeValue2.default)(type,transform[type]);
	return type+'('+value+')';
	};

	// [1,2,3,4,5,6] => 'matrix3d(1,2,3,4,5,6)'
	var convertTransformMatrix=function convertTransformMatrix(transformMatrix){
	var matrix=transformMatrix.join(',');
	return'matrix3d('+matrix+')';
	};

	var processTransform=function processTransform(style){
	if(style){
	if(style.transform){
	style.transform=style.transform.map(mapTransform).join(' ');
	}else if(style.transformMatrix){
	style.transform=convertTransformMatrix(style.transformMatrix);
	style.transformMatrix=null;
	}
	}
	return style;
	};

	module.exports=processTransform;

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var _static=__webpack_require__(274);var _static2=_interopRequireDefault(_static);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var processVendorPrefixes=function processVendorPrefixes(style){
	var prefixedStyles=(0,_static2.default)(style);
	// React@15 removed undocumented support for fallback values in
	// inline-styles. Revert array values to the standard CSS value
	for(var prop in prefixedStyles){
	var value=prefixedStyles[prop];
	if(Array.isArray(value)){
	prefixedStyles[prop]=value[value.length-1];
	}
	}
	return prefixedStyles;
	};

	module.exports=processVendorPrefixes;

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(275)


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixAll;

	var _prefixProps = __webpack_require__(276);

	var _prefixProps2 = _interopRequireDefault(_prefixProps);

	var _capitalizeString = __webpack_require__(277);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	var _calc = __webpack_require__(278);

	var _calc2 = _interopRequireDefault(_calc);

	var _cursor = __webpack_require__(281);

	var _cursor2 = _interopRequireDefault(_cursor);

	var _flex = __webpack_require__(282);

	var _flex2 = _interopRequireDefault(_flex);

	var _sizing = __webpack_require__(283);

	var _sizing2 = _interopRequireDefault(_sizing);

	var _gradient = __webpack_require__(284);

	var _gradient2 = _interopRequireDefault(_gradient);

	var _transition = __webpack_require__(285);

	var _transition2 = _interopRequireDefault(_transition);

	var _flexboxIE = __webpack_require__(287);

	var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

	var _flexboxOld = __webpack_require__(288);

	var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// special flexbox specifications


	var plugins = [_calc2.default, _cursor2.default, _sizing2.default, _gradient2.default, _transition2.default, _flexboxIE2.default, _flexboxOld2.default, _flex2.default];

	/**
	 * Returns a prefixed version of the style object using all vendor prefixes
	 * @param {Object} styles - Style object that gets prefixed properties added
	 * @returns {Object} - Style object with prefixed properties and values
	 */
	function prefixAll(styles) {
	  Object.keys(styles).forEach(function (property) {
	    var value = styles[property];
	    if (value instanceof Object && !Array.isArray(value)) {
	      // recurse through nested style objects
	      styles[property] = prefixAll(value);
	    } else {
	      Object.keys(_prefixProps2.default).forEach(function (prefix) {
	        var properties = _prefixProps2.default[prefix];
	        // add prefixes if needed
	        if (properties[property]) {
	          styles[prefix + (0, _capitalizeString2.default)(property)] = value;
	        }
	      });
	    }
	  });

	  Object.keys(styles).forEach(function (property) {
	    [].concat(styles[property]).forEach(function (value, index) {
	      // resolve every special plugins
	      plugins.forEach(function (plugin) {
	        return assignStyles(styles, plugin(property, value));
	      });
	    });
	  });

	  return styles;
	}

	function assignStyles(base) {
	  var extend = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  Object.keys(extend).forEach(function (property) {
	    var baseValue = base[property];
	    if (Array.isArray(baseValue)) {
	      [].concat(extend[property]).forEach(function (value) {
	        var valueIndex = baseValue.indexOf(value);
	        if (valueIndex > -1) {
	          base[property].splice(valueIndex, 1);
	        }
	        base[property].push(value);
	      });
	    } else {
	      base[property] = extend[property];
	    }
	  });
	}
	module.exports = exports['default'];

/***/ },
/* 276 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = { "Webkit": { "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "backfaceVisibility": true, "perspective": true, "perspectiveOrigin": true, "transformStyle": true, "transformOriginZ": true, "animation": true, "animationDelay": true, "animationDirection": true, "animationFillMode": true, "animationDuration": true, "animationIterationCount": true, "animationName": true, "animationPlayState": true, "animationTimingFunction": true, "appearance": true, "userSelect": true, "fontKerning": true, "textEmphasisPosition": true, "textEmphasis": true, "textEmphasisStyle": true, "textEmphasisColor": true, "boxDecorationBreak": true, "clipPath": true, "maskImage": true, "maskMode": true, "maskRepeat": true, "maskPosition": true, "maskClip": true, "maskOrigin": true, "maskSize": true, "maskComposite": true, "mask": true, "maskBorderSource": true, "maskBorderMode": true, "maskBorderSlice": true, "maskBorderWidth": true, "maskBorderOutset": true, "maskBorderRepeat": true, "maskBorder": true, "maskType": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "filter": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true, "flex": true, "flexBasis": true, "flexDirection": true, "flexGrow": true, "flexFlow": true, "flexShrink": true, "flexWrap": true, "alignContent": true, "alignItems": true, "alignSelf": true, "justifyContent": true, "order": true, "transition": true, "transitionDelay": true, "transitionDuration": true, "transitionProperty": true, "transitionTimingFunction": true, "backdropFilter": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "shapeImageThreshold": true, "shapeImageMargin": true, "shapeImageOutside": true, "hyphens": true, "flowInto": true, "flowFrom": true, "regionFragment": true, "textSizeAdjust": true }, "Moz": { "appearance": true, "userSelect": true, "boxSizing": true, "textAlignLast": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "tabSize": true, "hyphens": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true }, "ms": { "flex": true, "flexBasis": false, "flexDirection": true, "flexGrow": false, "flexFlow": true, "flexShrink": false, "flexWrap": true, "alignContent": false, "alignItems": false, "alignSelf": false, "justifyContent": false, "order": false, "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "userSelect": true, "wrapFlow": true, "wrapThrough": true, "wrapMargin": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "touchAction": true, "hyphens": true, "flowInto": true, "flowFrom": true, "breakBefore": true, "breakAfter": true, "breakInside": true, "regionFragment": true, "gridTemplateColumns": true, "gridTemplateRows": true, "gridTemplateAreas": true, "gridTemplate": true, "gridAutoColumns": true, "gridAutoRows": true, "gridAutoFlow": true, "grid": true, "gridRowStart": true, "gridColumnStart": true, "gridRowEnd": true, "gridRow": true, "gridColumn": true, "gridColumnEnd": true, "gridColumnGap": true, "gridRowGap": true, "gridArea": true, "gridGap": true, "textSizeAdjust": true } };
	module.exports = exports["default"];

/***/ },
/* 277 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// helper to capitalize strings

	exports.default = function (str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	};

	module.exports = exports["default"];

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = calc;

	var _joinPrefixedValue = __webpack_require__(279);

	var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

	var _isPrefixedValue = __webpack_require__(280);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function calc(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('calc(') > -1) {
	    return (0, _joinPrefixedValue2.default)(property, value, function (prefix, value) {
	      return value.replace(/calc\(/g, prefix + 'calc(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 279 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	// returns a style object with a single concated prefixed value string

	exports.default = function (property, value) {
	  var replacer = arguments.length <= 2 || arguments[2] === undefined ? function (prefix, value) {
	    return prefix + value;
	  } : arguments[2];
	  return _defineProperty({}, property, ['-webkit-', '-moz-', ''].map(function (prefix) {
	    return replacer(prefix, value);
	  }));
	};

	module.exports = exports['default'];

/***/ },
/* 280 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (value) {
	  if (Array.isArray(value)) value = value.join(',');

	  return value.match(/-webkit-|-moz-|-ms-/) !== null;
	};

	module.exports = exports['default'];

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = cursor;

	var _joinPrefixedValue = __webpack_require__(279);

	var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var values = {
	  'zoom-in': true,
	  'zoom-out': true,
	  grab: true,
	  grabbing: true
	};

	function cursor(property, value) {
	  if (property === 'cursor' && values[value]) {
	    return (0, _joinPrefixedValue2.default)(property, value);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 282 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flex;
	var values = { flex: true, 'inline-flex': true };

	function flex(property, value) {
	  if (property === 'display' && values[value]) {
	    return {
	      display: ['-webkit-box', '-moz-box', '-ms-' + value + 'box', '-webkit-' + value, value]
	    };
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = sizing;

	var _joinPrefixedValue = __webpack_require__(279);

	var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  maxHeight: true,
	  maxWidth: true,
	  width: true,
	  height: true,
	  columnWidth: true,
	  minWidth: true,
	  minHeight: true
	};
	var values = {
	  'min-content': true,
	  'max-content': true,
	  'fill-available': true,
	  'fit-content': true,
	  'contain-floats': true
	};

	function sizing(property, value) {
	  if (properties[property] && values[value]) {
	    return (0, _joinPrefixedValue2.default)(property, value);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = gradient;

	var _joinPrefixedValue = __webpack_require__(279);

	var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

	var _isPrefixedValue = __webpack_require__(280);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

	function gradient(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.match(values) !== null) {
	    return (0, _joinPrefixedValue2.default)(property, value);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = transition;

	var _hyphenateStyleName = __webpack_require__(286);

	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

	var _capitalizeString = __webpack_require__(277);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	var _isPrefixedValue = __webpack_require__(280);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	var _prefixProps = __webpack_require__(276);

	var _prefixProps2 = _interopRequireDefault(_prefixProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var properties = {
	  transition: true,
	  transitionProperty: true,
	  WebkitTransition: true,
	  WebkitTransitionProperty: true
	};

	function transition(property, value) {
	  // also check for already prefixed transitions
	  if (typeof value === 'string' && properties[property]) {
	    var _ref2;

	    var outputValue = prefixValue(value);
	    var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (value) {
	      return value.match(/-moz-|-ms-/) === null;
	    }).join(',');

	    // if the property is already prefixed
	    if (property.indexOf('Webkit') > -1) {
	      return _defineProperty({}, property, webkitOutput);
	    }

	    return _ref2 = {}, _defineProperty(_ref2, 'Webkit' + (0, _capitalizeString2.default)(property), webkitOutput), _defineProperty(_ref2, property, outputValue), _ref2;
	  }
	}

	function prefixValue(value) {
	  if ((0, _isPrefixedValue2.default)(value)) {
	    return value;
	  }

	  // only split multi values, not cubic beziers
	  var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

	  // iterate each single value and check for transitioned properties
	  // that need to be prefixed as well
	  multipleValues.forEach(function (val, index) {
	    multipleValues[index] = Object.keys(_prefixProps2.default).reduce(function (out, prefix) {
	      var dashCasePrefix = '-' + prefix.toLowerCase() + '-';

	      Object.keys(_prefixProps2.default[prefix]).forEach(function (prop) {
	        var dashCaseProperty = (0, _hyphenateStyleName2.default)(prop);

	        if (val.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
	          // join all prefixes and create a new value
	          out = val.replace(dashCaseProperty, dashCasePrefix + dashCaseProperty) + ',' + out;
	        }
	      });
	      return out;
	    }, val);
	  });

	  return multipleValues.join(',');
	}
	module.exports = exports['default'];

/***/ },
/* 286 */
/***/ function(module, exports) {

	'use strict';

	var uppercasePattern = /[A-Z]/g;
	var msPattern = /^ms-/;

	function hyphenateStyleName(string) {
	    return string
	        .replace(uppercasePattern, '-$&')
	        .toLowerCase()
	        .replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;


/***/ },
/* 287 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxIE;

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var alternativeValues = {
	  'space-around': 'distribute',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end'
	};
	var alternativeProps = {
	  alignContent: 'msFlexLinePack',
	  alignSelf: 'msFlexItemAlign',
	  alignItems: 'msFlexAlign',
	  justifyContent: 'msFlexPack',
	  order: 'msFlexOrder',
	  flexGrow: 'msFlexPositive',
	  flexShrink: 'msFlexNegative',
	  flexBasis: 'msPreferredSize'
	};

	function flexboxIE(property, value) {
	  if (alternativeProps[property]) {
	    return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 288 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxOld;

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var alternativeValues = {
	  'space-around': 'justify',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  'wrap-reverse': 'multiple',
	  wrap: 'multiple'
	};

	var alternativeProps = {
	  alignItems: 'WebkitBoxAlign',
	  justifyContent: 'WebkitBoxPack',
	  flexWrap: 'WebkitBoxLines'
	};

	function flexboxOld(property, value) {
	  if (property === 'flexDirection') {
	    return {
	      WebkitBoxOrient: value.indexOf('column') > -1 ? 'vertical' : 'horizontal',
	      WebkitBoxDirection: value.indexOf('reverse') > -1 ? 'reverse' : 'normal'
	    };
	  }
	  if (alternativeProps[property]) {
	    return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var _react=__webpack_require__(1);var
	array=_react.PropTypes.array;var bool=_react.PropTypes.bool;var number=_react.PropTypes.number;var object=_react.PropTypes.object;var oneOf=_react.PropTypes.oneOf;var oneOfType=_react.PropTypes.oneOfType;var string=_react.PropTypes.string;

	var BaseComponentPropTypes={
	accessibilityLabel:string,
	accessibilityLiveRegion:oneOf(['assertive','off','polite']),
	accessibilityRole:string,
	accessible:bool,
	style:oneOfType([array,number,object]),
	testID:string};


	module.exports=BaseComponentPropTypes;

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}

	var roleComponents={
	article:'article',
	banner:'header',
	button:'button',
	complementary:'aside',
	contentinfo:'footer',
	form:'form',
	heading:'h1',
	link:'a',
	list:'ul',
	listitem:'li',
	main:'main',
	navigation:'nav',
	region:'section'};


	var createDOMElement=function createDOMElement(component){var rnProps=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];var

	accessibilityLabel=






	rnProps.accessibilityLabel;var accessibilityLiveRegion=rnProps.accessibilityLiveRegion;var accessibilityRole=rnProps.accessibilityRole;var _rnProps$accessible=rnProps.accessible;var accessible=_rnProps$accessible===undefined?true:_rnProps$accessible;var testID=rnProps.testID;var type=rnProps.type;var other=_objectWithoutProperties(rnProps,['accessibilityLabel','accessibilityLiveRegion','accessibilityRole','accessible','testID','type']);

	var accessibilityComponent=accessibilityRole&&roleComponents[accessibilityRole];
	var Component=accessibilityComponent||component;

	return(
	_react2.default.createElement(Component,_extends({},
	other,
	_StyleSheet2.default.resolve(other),{
	'aria-hidden':accessible?null:true,
	'aria-label':accessibilityLabel,
	'aria-live':accessibilityLiveRegion,
	'data-testid':testID,
	role:accessibilityRole,
	type:accessibilityRole==='button'?'button':type})));


	};

	module.exports=createDOMElement;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var _css=__webpack_require__(292);var css=_interopRequireWildcard(_css);
	var _createReactStyleObject=__webpack_require__(263);var _createReactStyleObject2=_interopRequireDefault(_createReactStyleObject);
	var _ExecutionEnvironment=__webpack_require__(54);var _ExecutionEnvironment2=_interopRequireDefault(_ExecutionEnvironment);
	var _flattenStyle=__webpack_require__(266);var _flattenStyle2=_interopRequireDefault(_flattenStyle);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);
	var _ReactNativePropRegistry=__webpack_require__(267);var _ReactNativePropRegistry2=_interopRequireDefault(_ReactNativePropRegistry);
	var _StyleSheetValidation=__webpack_require__(293);var _StyleSheetValidation2=_interopRequireDefault(_StyleSheetValidation);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}

	var styleElement=void 0;
	var shouldInsertStyleSheet=_ExecutionEnvironment2.default.canUseDOM;

	var STYLE_SHEET_ID='__react-native-style';

	var absoluteFillObject={position:'absolute',left:0,right:0,top:0,bottom:0};

	var defaultStyleSheet=css.getDefaultStyleSheet();

	var insertStyleSheet=function insertStyleSheet(){
	// check if the server rendered the style sheet
	styleElement=document.getElementById(STYLE_SHEET_ID);
	// if not, inject the style sheet
	if(!styleElement){
	document.head.insertAdjacentHTML(
	'afterbegin','<style id="'+
	STYLE_SHEET_ID+'">'+defaultStyleSheet+'</style>');

	shouldInsertStyleSheet=false;
	}
	};

	module.exports={
	/**
	   * For testing
	   * @private
	   */
	_reset:function _reset(){
	if(styleElement){
	document.head.removeChild(styleElement);
	styleElement=null;
	shouldInsertStyleSheet=true;
	}
	},

	absoluteFill:_ReactNativePropRegistry2.default.register(absoluteFillObject),

	absoluteFillObject:absoluteFillObject,

	create:function create(styles){
	if(shouldInsertStyleSheet){
	insertStyleSheet();
	}

	var result={};
	for(var key in styles){
	_StyleSheetValidation2.default.validateStyle(key,styles);
	result[key]=_ReactNativePropRegistry2.default.register(styles[key]);
	}
	return result;
	},

	hairlineWidth:1,

	flatten:_flattenStyle2.default,

	/* @platform web */
	render:function render(){
	return _react2.default.createElement('style',{dangerouslySetInnerHTML:{__html:defaultStyleSheet},id:STYLE_SHEET_ID});
	},

	/**
	   * Accepts React props and converts style declarations to classNames when necessary
	   * @platform web
	   */
	resolve:function resolve(props){
	var className=props.className||'';
	var style=(0,_createReactStyleObject2.default)(props.style);
	for(var prop in style){
	var value=style[prop];
	var replacementClassName=css.getStyleAsHelperClassName(prop,value);
	if(replacementClassName){
	className+=' '+replacementClassName;
	style[prop]=null;
	}
	}

	return{className:className,style:style};
	}};

/***/ },
/* 292 */
/***/ function(module, exports) {

	Object.defineProperty(exports,"__esModule",{value:true});var DISPLAY_FLEX_CLASSNAME='__style_df';
	var POINTER_EVENTS_AUTO_CLASSNAME='__style_pea';
	var POINTER_EVENTS_BOX_NONE_CLASSNAME='__style_pebn';
	var POINTER_EVENTS_BOX_ONLY_CLASSNAME='__style_pebo';
	var POINTER_EVENTS_NONE_CLASSNAME='__style_pen';

	/* eslint-disable max-len */
	var CSS_RESET=
	// reset unwanted styles
	'/* React Native */\n'+
	'html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}\n'+
	'body{margin:0}\n'+
	'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}\n'+
	'input::-webkit-inner-spin-button,input::-webkit-outer-spin-button,input::-webkit-search-cancel-button,input::-webkit-search-decoration {display:none}';

	var CSS_HELPERS=
	// vendor prefix 'display:flex' until React supports fallback values for inline styles
	'.'+DISPLAY_FLEX_CLASSNAME+' {display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex}\n'+(
	// implement React Native's pointer event values
	'.'+POINTER_EVENTS_AUTO_CLASSNAME+', .'+POINTER_EVENTS_BOX_ONLY_CLASSNAME+', .'+POINTER_EVENTS_BOX_NONE_CLASSNAME+' * {pointer-events:auto}\n')+('.'+
	POINTER_EVENTS_NONE_CLASSNAME+', .'+POINTER_EVENTS_BOX_ONLY_CLASSNAME+' *, .'+POINTER_EVENTS_NONE_CLASSNAME+' {pointer-events:none}');
	/* eslint-enable max-len */

	var styleAsClassName={
	display:{
	'flex':DISPLAY_FLEX_CLASSNAME},

	pointerEvents:{
	'auto':POINTER_EVENTS_AUTO_CLASSNAME,
	'box-none':POINTER_EVENTS_BOX_NONE_CLASSNAME,
	'box-only':POINTER_EVENTS_BOX_ONLY_CLASSNAME,
	'none':POINTER_EVENTS_NONE_CLASSNAME}};



	var getDefaultStyleSheet=exports.getDefaultStyleSheet=function getDefaultStyleSheet(){return CSS_RESET+'\n'+CSS_HELPERS;};

	var getStyleAsHelperClassName=exports.getStyleAsHelperClassName=function getStyleAsHelperClassName(prop,value){
	return styleAsClassName[prop]&&styleAsClassName[prop][value];
	};

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/* eslint-disable */
	/**
	 * Copyright (c) 2016-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.

	 * 
	 */

	var _react=__webpack_require__(1);
	var _ImageStylePropTypes=__webpack_require__(294);var _ImageStylePropTypes2=_interopRequireDefault(_ImageStylePropTypes);
	var _ReactPropTypeLocations=__webpack_require__(21);var _ReactPropTypeLocations2=_interopRequireDefault(_ReactPropTypeLocations);
	var _ReactPropTypesSecret=__webpack_require__(27);var _ReactPropTypesSecret2=_interopRequireDefault(_ReactPropTypesSecret);
	var _TextStylePropTypes=__webpack_require__(301);var _TextStylePropTypes2=_interopRequireDefault(_TextStylePropTypes);
	var _ViewStylePropTypes=__webpack_require__(303);var _ViewStylePropTypes2=_interopRequireDefault(_ViewStylePropTypes);
	var _warning=__webpack_require__(10);var _warning2=_interopRequireDefault(_warning);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var

	StyleSheetValidation=function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:function validateStyleProp(
	prop,style,caller){
	if(false){
	if(allStylePropTypes[prop]===undefined){
	var message1='"'+prop+'" is not a valid style property.';
	var message2='\nValid style props: '+
	JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
	styleError(message1,style,caller,message2);
	}else{
	var error=allStylePropTypes[prop](
	style,
	prop,
	caller,
	_ReactPropTypeLocations2.default.prop,
	null,_ReactPropTypesSecret2.default);


	if(error){
	styleError(error.message,style,caller);
	}
	}
	}
	}},{key:'validateStyle',value:function validateStyle(

	name,styles){
	if(false){
	for(var prop in styles[name]){
	StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet '+name);
	}
	}
	}},{key:'addValidStylePropTypes',value:function addValidStylePropTypes(

	stylePropTypes){
	for(var key in stylePropTypes){
	allStylePropTypes[key]=stylePropTypes[key];
	}
	}}]);return StyleSheetValidation;}();


	var styleError=function styleError(message1,style,caller,message2){
	(0,_warning2.default)(
	false,
	message1+'\n'+(caller||'<<unknown>>')+': '+
	JSON.stringify(style,null,'  ')+(message2||''));

	};

	var allStylePropTypes={};

	StyleSheetValidation.addValidStylePropTypes(_ImageStylePropTypes2.default);
	StyleSheetValidation.addValidStylePropTypes(_TextStylePropTypes2.default);
	StyleSheetValidation.addValidStylePropTypes(_ViewStylePropTypes2.default);
	StyleSheetValidation.addValidStylePropTypes({
	appearance:_react.PropTypes.string,
	clear:_react.PropTypes.string,
	cursor:_react.PropTypes.string,
	display:_react.PropTypes.string,
	float:_react.PropTypes.oneOf(['left','none','right']),
	font:_react.PropTypes.string,/* @private */
	listStyle:_react.PropTypes.string,
	WebkitOverflowScrolling:_react.PropTypes.string/* @private */});


	module.exports=StyleSheetValidation;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _BorderPropTypes=__webpack_require__(295);var _BorderPropTypes2=_interopRequireDefault(_BorderPropTypes);
	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _ImageResizeMode=__webpack_require__(298);var _ImageResizeMode2=_interopRequireDefault(_ImageResizeMode);
	var _LayoutPropTypes=__webpack_require__(299);var _LayoutPropTypes2=_interopRequireDefault(_LayoutPropTypes);
	var _react=__webpack_require__(1);
	var _TransformPropTypes=__webpack_require__(300);var _TransformPropTypes2=_interopRequireDefault(_TransformPropTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var hiddenOrVisible=_react.PropTypes.oneOf(['hidden','visible']);

	module.exports=_extends({},_BorderPropTypes2.default,_LayoutPropTypes2.default,_TransformPropTypes2.default,{



	backfaceVisibility:hiddenOrVisible,
	backgroundColor:_ColorPropType2.default,
	resizeMode:_react.PropTypes.oneOf(Object.keys(_ImageResizeMode2.default)),
	/**
	   * @platform web
	   */
	boxShadow:_react.PropTypes.string,
	opacity:_react.PropTypes.number,
	overflow:hiddenOrVisible,
	/**
	   * @platform web
	   */
	visibility:hiddenOrVisible});

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _react=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var numberOrString=_react.PropTypes.oneOfType([_react.PropTypes.number,_react.PropTypes.string]);
	var BorderStylePropType=_react.PropTypes.oneOf(['solid','dotted','dashed']);

	var BorderPropTypes={
	borderColor:_ColorPropType2.default,
	borderTopColor:_ColorPropType2.default,
	borderRightColor:_ColorPropType2.default,
	borderBottomColor:_ColorPropType2.default,
	borderLeftColor:_ColorPropType2.default,
	borderRadius:numberOrString,
	borderTopLeftRadius:numberOrString,
	borderTopRightRadius:numberOrString,
	borderBottomLeftRadius:numberOrString,
	borderBottomRightRadius:numberOrString,
	borderStyle:BorderStylePropType,
	borderTopStyle:BorderStylePropType,
	borderRightStyle:BorderStylePropType,
	borderBottomStyle:BorderStylePropType,
	borderLeftStyle:BorderStylePropType,
	/* Props to opt-out of RTL flipping */
	borderLeftColor$noI18n:_ColorPropType2.default,
	borderRightColor$noI18n:_ColorPropType2.default,
	borderTopLeftRadius$noI18n:numberOrString,
	borderTopRightRadius$noI18n:numberOrString,
	borderBottomLeftRadius$noI18n:numberOrString,
	borderBottomRightRadius$noI18n:numberOrString,
	borderLeftStyle$noI18n:BorderStylePropType,
	borderRightStyle$noI18n:BorderStylePropType};


	module.exports=BorderPropTypes;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	











	var _react=__webpack_require__(1);
	var _ReactPropTypeLocationNames=__webpack_require__(23);var _ReactPropTypeLocationNames2=_interopRequireDefault(_ReactPropTypeLocationNames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable *//**
	  * Copyright (c) 2015-present, Facebook, Inc.
	  * All rights reserved.
	  *
	  * This source code is licensed under the BSD-style license found in the
	  * LICENSE file in the root directory of this source tree. An additional grant
	  * of patent rights can be found in the PATENTS file in the same directory.
	  *
	  * @providesModule ColorPropType
	  */var normalizeColor=__webpack_require__(297);var colorPropType=function colorPropType(isRequired,props,propName,componentName,location,propFullName){var color=props[propName];if(color===undefined||color===null){if(isRequired){var locationName=_ReactPropTypeLocationNames2.default[location];return new Error(
	'Required '+locationName+' `'+(propFullName||propName)+
	'` was not specified in `'+componentName+'`.');

	}
	return;
	}

	if(typeof color==='number'){
	// Developers should not use a number, but we are using the prop type
	// both for user provided colors and for transformed ones. This isn't ideal
	// and should be fixed but will do for now...
	return;
	}

	if(normalizeColor(color)===null){
	var locationName=_ReactPropTypeLocationNames2.default[location];
	return new Error(
	'Invalid '+locationName+' `'+(propFullName||propName)+
	'` supplied to `'+componentName+'`: '+color+'\n'+'Valid color formats are\n  - \'#f0f\' (#rgb)\n  - \'#f0fc\' (#rgba)\n  - \'#ff00ff\' (#rrggbb)\n  - \'#ff00ff00\' (#rrggbbaa)\n  - \'rgb(255, 255, 255)\'\n  - \'rgba(255, 255, 255, 1.0)\'\n  - \'hsl(360, 100%, 100%)\'\n  - \'hsla(360, 100%, 100%, 1.0)\'\n  - \'transparent\'\n  - \'red\'\n  - 0xff00ff00 (0xrrggbbaa)\n');













	}
	};

	var ColorPropType=colorPropType.bind(null,false/* isRequired */);
	ColorPropType.isRequired=colorPropType.bind(null,true/* isRequired */);

	module.exports=ColorPropType;

/***/ },
/* 297 */
/***/ function(module, exports) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule normalizeColor
	 * 
	 */
	/* eslint no-bitwise: 0 */
	'use strict';

	function normalizeColor(color){
	var match;

	if(typeof color==='number'){
	if(color>>>0===color&&color>=0&&color<=0xffffffff){
	return color;
	}
	return null;
	}

	// Ordered based on occurrences on Facebook codebase
	if(match=matchers.hex6.exec(color)){
	return parseInt(match[1]+'ff',16)>>>0;
	}

	if(names.hasOwnProperty(color)){
	return names[color];
	}

	if(match=matchers.rgb.exec(color)){
	return(
	parse255(match[1])<<24|// r
	parse255(match[2])<<16|// g
	parse255(match[3])<<8|// b
	0x000000ff// a
	)>>>0;
	}

	if(match=matchers.rgba.exec(color)){
	return(
	parse255(match[1])<<24|// r
	parse255(match[2])<<16|// g
	parse255(match[3])<<8|// b
	parse1(match[4])// a
	)>>>0;
	}

	if(match=matchers.hex3.exec(color)){
	return parseInt(
	match[1]+match[1]+// r
	match[2]+match[2]+// g
	match[3]+match[3]+// b
	'ff',// a
	16)>>>
	0;
	}

	// https://drafts.csswg.org/css-color-4/#hex-notation
	if(match=matchers.hex8.exec(color)){
	return parseInt(match[1],16)>>>0;
	}

	if(match=matchers.hex4.exec(color)){
	return parseInt(
	match[1]+match[1]+// r
	match[2]+match[2]+// g
	match[3]+match[3]+// b
	match[4]+match[4],// a
	16)>>>
	0;
	}

	if(match=matchers.hsl.exec(color)){
	return(
	hslToRgb(
	parse360(match[1]),// h
	parsePercentage(match[2]),// s
	parsePercentage(match[3])// l
	)|
	0x000000ff// a
	)>>>0;
	}

	if(match=matchers.hsla.exec(color)){
	return(
	hslToRgb(
	parse360(match[1]),// h
	parsePercentage(match[2]),// s
	parsePercentage(match[3])// l
	)|
	parse1(match[4])// a
	)>>>0;
	}

	return null;
	}

	function hue2rgb(p,q,t){
	if(t<0){
	t+=1;
	}
	if(t>1){
	t-=1;
	}
	if(t<1/6){
	return p+(q-p)*6*t;
	}
	if(t<1/2){
	return q;
	}
	if(t<2/3){
	return p+(q-p)*(2/3-t)*6;
	}
	return p;
	}

	function hslToRgb(h,s,l){
	var q=l<0.5?l*(1+s):l+s-l*s;
	var p=2*l-q;
	var r=hue2rgb(p,q,h+1/3);
	var g=hue2rgb(p,q,h);
	var b=hue2rgb(p,q,h-1/3);

	return(
	Math.round(r*255)<<24|
	Math.round(g*255)<<16|
	Math.round(b*255)<<8);

	}

	// var INTEGER = '[-+]?\\d+';
	var NUMBER='[-+]?\\d*\\.?\\d+';
	var PERCENTAGE=NUMBER+'%';

	function call(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
	return'\\(\\s*('+args.join(')\\s*,\\s*(')+')\\s*\\)';
	}

	var matchers={
	rgb:new RegExp('rgb'+call(NUMBER,NUMBER,NUMBER)),
	rgba:new RegExp('rgba'+call(NUMBER,NUMBER,NUMBER,NUMBER)),
	hsl:new RegExp('hsl'+call(NUMBER,PERCENTAGE,PERCENTAGE)),
	hsla:new RegExp('hsla'+call(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)),
	hex3:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
	hex4:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
	hex6:/^#([0-9a-fA-F]{6})$/,
	hex8:/^#([0-9a-fA-F]{8})$/};


	function parse255(str){
	var int=parseInt(str,10);
	if(int<0){
	return 0;
	}
	if(int>255){
	return 255;
	}
	return int;
	}

	function parse360(str){
	var int=parseFloat(str);
	return(int%360+360)%360/360;
	}

	function parse1(str){
	var num=parseFloat(str);
	if(num<0){
	return 0;
	}
	if(num>1){
	return 255;
	}
	return Math.round(num*255);
	}

	function parsePercentage(str){
	// parseFloat conveniently ignores the final %
	var int=parseFloat(str,10);
	if(int<0){
	return 0;
	}
	if(int>100){
	return 1;
	}
	return int/100;
	}

	var names={
	/* @edit start */
	currentcolor:'currentcolor',
	inherit:'inherit',
	/* @edit end */
	transparent:0x00000000,

	// http://www.w3.org/TR/css3-color/#svg-color
	aliceblue:0xf0f8ffff,
	antiquewhite:0xfaebd7ff,
	aqua:0x00ffffff,
	aquamarine:0x7fffd4ff,
	azure:0xf0ffffff,
	beige:0xf5f5dcff,
	bisque:0xffe4c4ff,
	black:0x000000ff,
	blanchedalmond:0xffebcdff,
	blue:0x0000ffff,
	blueviolet:0x8a2be2ff,
	brown:0xa52a2aff,
	burlywood:0xdeb887ff,
	burntsienna:0xea7e5dff,
	cadetblue:0x5f9ea0ff,
	chartreuse:0x7fff00ff,
	chocolate:0xd2691eff,
	coral:0xff7f50ff,
	cornflowerblue:0x6495edff,
	cornsilk:0xfff8dcff,
	crimson:0xdc143cff,
	cyan:0x00ffffff,
	darkblue:0x00008bff,
	darkcyan:0x008b8bff,
	darkgoldenrod:0xb8860bff,
	darkgray:0xa9a9a9ff,
	darkgreen:0x006400ff,
	darkgrey:0xa9a9a9ff,
	darkkhaki:0xbdb76bff,
	darkmagenta:0x8b008bff,
	darkolivegreen:0x556b2fff,
	darkorange:0xff8c00ff,
	darkorchid:0x9932ccff,
	darkred:0x8b0000ff,
	darksalmon:0xe9967aff,
	darkseagreen:0x8fbc8fff,
	darkslateblue:0x483d8bff,
	darkslategray:0x2f4f4fff,
	darkslategrey:0x2f4f4fff,
	darkturquoise:0x00ced1ff,
	darkviolet:0x9400d3ff,
	deeppink:0xff1493ff,
	deepskyblue:0x00bfffff,
	dimgray:0x696969ff,
	dimgrey:0x696969ff,
	dodgerblue:0x1e90ffff,
	firebrick:0xb22222ff,
	floralwhite:0xfffaf0ff,
	forestgreen:0x228b22ff,
	fuchsia:0xff00ffff,
	gainsboro:0xdcdcdcff,
	ghostwhite:0xf8f8ffff,
	gold:0xffd700ff,
	goldenrod:0xdaa520ff,
	gray:0x808080ff,
	green:0x008000ff,
	greenyellow:0xadff2fff,
	grey:0x808080ff,
	honeydew:0xf0fff0ff,
	hotpink:0xff69b4ff,
	indianred:0xcd5c5cff,
	indigo:0x4b0082ff,
	ivory:0xfffff0ff,
	khaki:0xf0e68cff,
	lavender:0xe6e6faff,
	lavenderblush:0xfff0f5ff,
	lawngreen:0x7cfc00ff,
	lemonchiffon:0xfffacdff,
	lightblue:0xadd8e6ff,
	lightcoral:0xf08080ff,
	lightcyan:0xe0ffffff,
	lightgoldenrodyellow:0xfafad2ff,
	lightgray:0xd3d3d3ff,
	lightgreen:0x90ee90ff,
	lightgrey:0xd3d3d3ff,
	lightpink:0xffb6c1ff,
	lightsalmon:0xffa07aff,
	lightseagreen:0x20b2aaff,
	lightskyblue:0x87cefaff,
	lightslategray:0x778899ff,
	lightslategrey:0x778899ff,
	lightsteelblue:0xb0c4deff,
	lightyellow:0xffffe0ff,
	lime:0x00ff00ff,
	limegreen:0x32cd32ff,
	linen:0xfaf0e6ff,
	magenta:0xff00ffff,
	maroon:0x800000ff,
	mediumaquamarine:0x66cdaaff,
	mediumblue:0x0000cdff,
	mediumorchid:0xba55d3ff,
	mediumpurple:0x9370dbff,
	mediumseagreen:0x3cb371ff,
	mediumslateblue:0x7b68eeff,
	mediumspringgreen:0x00fa9aff,
	mediumturquoise:0x48d1ccff,
	mediumvioletred:0xc71585ff,
	midnightblue:0x191970ff,
	mintcream:0xf5fffaff,
	mistyrose:0xffe4e1ff,
	moccasin:0xffe4b5ff,
	navajowhite:0xffdeadff,
	navy:0x000080ff,
	oldlace:0xfdf5e6ff,
	olive:0x808000ff,
	olivedrab:0x6b8e23ff,
	orange:0xffa500ff,
	orangered:0xff4500ff,
	orchid:0xda70d6ff,
	palegoldenrod:0xeee8aaff,
	palegreen:0x98fb98ff,
	paleturquoise:0xafeeeeff,
	palevioletred:0xdb7093ff,
	papayawhip:0xffefd5ff,
	peachpuff:0xffdab9ff,
	peru:0xcd853fff,
	pink:0xffc0cbff,
	plum:0xdda0ddff,
	powderblue:0xb0e0e6ff,
	purple:0x800080ff,
	rebeccapurple:0x663399ff,
	red:0xff0000ff,
	rosybrown:0xbc8f8fff,
	royalblue:0x4169e1ff,
	saddlebrown:0x8b4513ff,
	salmon:0xfa8072ff,
	sandybrown:0xf4a460ff,
	seagreen:0x2e8b57ff,
	seashell:0xfff5eeff,
	sienna:0xa0522dff,
	silver:0xc0c0c0ff,
	skyblue:0x87ceebff,
	slateblue:0x6a5acdff,
	slategray:0x708090ff,
	slategrey:0x708090ff,
	snow:0xfffafaff,
	springgreen:0x00ff7fff,
	steelblue:0x4682b4ff,
	tan:0xd2b48cff,
	teal:0x008080ff,
	thistle:0xd8bfd8ff,
	tomato:0xff6347ff,
	turquoise:0x40e0d0ff,
	violet:0xee82eeff,
	wheat:0xf5deb3ff,
	white:0xffffffff,
	whitesmoke:0xf5f5f5ff,
	yellow:0xffff00ff,
	yellowgreen:0x9acd32ff};


	module.exports=normalizeColor;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	var _keyMirror=__webpack_require__(22);var _keyMirror2=_interopRequireDefault(_keyMirror);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var ImageResizeMode=(0,_keyMirror2.default)({
	center:null,
	contain:null,
	cover:null,
	none:null,
	repeat:null,
	stretch:null});


	module.exports=ImageResizeMode;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	var _react=__webpack_require__(1);var

	number=_react.PropTypes.number;var oneOf=_react.PropTypes.oneOf;var oneOfType=_react.PropTypes.oneOfType;var string=_react.PropTypes.string;
	var numberOrString=oneOfType([number,string]);

	var LayoutPropTypes={
	// box model
	borderWidth:numberOrString,
	borderBottomWidth:numberOrString,
	borderLeftWidth:numberOrString,
	borderRightWidth:numberOrString,
	borderTopWidth:numberOrString,
	boxSizing:string,
	height:numberOrString,
	margin:numberOrString,
	marginBottom:numberOrString,
	marginHorizontal:numberOrString,
	marginLeft:numberOrString,
	marginRight:numberOrString,
	marginTop:numberOrString,
	marginVertical:numberOrString,
	maxHeight:numberOrString,
	maxWidth:numberOrString,
	minHeight:numberOrString,
	minWidth:numberOrString,
	padding:numberOrString,
	paddingBottom:numberOrString,
	paddingHorizontal:numberOrString,
	paddingLeft:numberOrString,
	paddingRight:numberOrString,
	paddingTop:numberOrString,
	paddingVertical:numberOrString,
	width:numberOrString,
	// flexbox
	alignContent:oneOf(['center','flex-end','flex-start','space-around','space-between','stretch']),
	alignItems:oneOf(['baseline','center','flex-end','flex-start','stretch']),
	alignSelf:oneOf(['auto','baseline','center','flex-end','flex-start','stretch']),
	flex:number,
	flexBasis:string,
	flexDirection:oneOf(['column','column-reverse','row','row-reverse']),
	flexGrow:number,
	flexShrink:number,
	flexWrap:oneOf(['nowrap','wrap','wrap-reverse']),
	justifyContent:oneOf(['center','flex-end','flex-start','space-around','space-between']),
	order:number,
	// position
	bottom:numberOrString,
	left:numberOrString,
	position:oneOf(['absolute','fixed','relative','static']),
	right:numberOrString,
	top:numberOrString,
	// opt-out of RTL flipping
	borderLeftWidth$noI18n:numberOrString,
	borderRightWidth$noI18n:numberOrString,
	left$noI18n:numberOrString,
	marginLeft$noI18n:numberOrString,
	marginRight$noI18n:numberOrString,
	paddingLeft$noI18n:numberOrString,
	paddingRight$noI18n:numberOrString,
	right$noI18n:numberOrString};


	module.exports=LayoutPropTypes;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	






	var _react=__webpack_require__(1);var

	arrayOf=_react.PropTypes.arrayOf;/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */var number=_react.PropTypes.number;var oneOfType=_react.PropTypes.oneOfType;var shape=_react.PropTypes.shape;var string=_react.PropTypes.string;var numberOrString=oneOfType([number,string]);var TransformPropTypes={transform:arrayOf(oneOfType([
	shape({perspective:numberOrString}),
	shape({rotate:string}),
	shape({rotateX:string}),
	shape({rotateY:string}),
	shape({rotateZ:string}),
	shape({scale:number}),
	shape({scaleX:number}),
	shape({scaleY:number}),
	shape({skewX:string}),
	shape({skewY:string}),
	shape({translateX:numberOrString}),
	shape({translateY:numberOrString}),
	shape({translateZ:numberOrString}),
	shape({translate3d:string})]))};




	module.exports=TransformPropTypes;

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _TextPropTypes=__webpack_require__(302);var _TextPropTypes2=_interopRequireDefault(_TextPropTypes);
	var _ViewStylePropTypes=__webpack_require__(303);var _ViewStylePropTypes2=_interopRequireDefault(_ViewStylePropTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	module.exports=_extends({},_ViewStylePropTypes2.default,_TextPropTypes2.default);

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _react=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var

	number=_react.PropTypes.number;var oneOf=_react.PropTypes.oneOf;var oneOfType=_react.PropTypes.oneOfType;var shape=_react.PropTypes.shape;var string=_react.PropTypes.string;
	var numberOrString=oneOfType([number,string]);

	var ShadowOffsetPropType=shape({width:number,height:number});
	var TextAlignPropType=oneOf(['center','inherit','justify','justify-all','left','right']);
	var WritingDirectionPropType=oneOf(['auto','ltr','rtl']);

	var TextPropTypes={
	// box model
	color:_ColorPropType2.default,
	fontFamily:string,
	fontSize:numberOrString,
	fontStyle:string,
	fontWeight:string,
	letterSpacing:numberOrString,
	lineHeight:numberOrString,
	textAlign:TextAlignPropType,
	textAlignVertical:oneOf(['auto','bottom','center','top']),
	textDecorationLine:string,
	/* @platform web */
	textOverflow:string,
	/* @platform web */
	textRendering:oneOf(['auto','geometricPrecision','optimizeLegibility','optimizeSpeed']),
	textShadowColor:_ColorPropType2.default,
	textShadowOffset:ShadowOffsetPropType,
	textShadowRadius:number,
	/* @platform web */
	textTransform:oneOf(['capitalize','lowercase','none','uppercase']),
	/* @platform web */
	unicodeBidi:oneOf(['normal','bidi-override','embed','isolate','isolate-override','plaintext']),
	/* @platform web */
	whiteSpace:string,
	/* @platform web */
	wordWrap:string,
	writingDirection:WritingDirectionPropType,
	// opt-out of RTL flipping
	textAlign$noI18n:TextAlignPropType,
	textShadowOffset$noI18n:ShadowOffsetPropType,
	writingDirection$noI18n:WritingDirectionPropType};


	module.exports=TextPropTypes;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _BorderPropTypes=__webpack_require__(295);var _BorderPropTypes2=_interopRequireDefault(_BorderPropTypes);
	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _LayoutPropTypes=__webpack_require__(299);var _LayoutPropTypes2=_interopRequireDefault(_LayoutPropTypes);
	var _react=__webpack_require__(1);
	var _TransformPropTypes=__webpack_require__(300);var _TransformPropTypes2=_interopRequireDefault(_TransformPropTypes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var

	number=_react.PropTypes.number;var oneOf=_react.PropTypes.oneOf;var string=_react.PropTypes.string;
	var autoOrHiddenOrVisible=oneOf(['auto','hidden','visible']);
	var hiddenOrVisible=oneOf(['hidden','visible']);

	module.exports=_extends({},_BorderPropTypes2.default,_LayoutPropTypes2.default,_TransformPropTypes2.default,{



	backfaceVisibility:hiddenOrVisible,
	backgroundColor:_ColorPropType2.default,
	opacity:number,
	overflow:autoOrHiddenOrVisible,
	zIndex:number,
	/*
	   * @platform web
	   */
	backgroundAttachment:string,
	backgroundClip:string,
	backgroundImage:string,
	backgroundPosition:string,
	backgroundOrigin:oneOf(['border-box','content-box','padding-box']),
	backgroundRepeat:string,
	backgroundSize:string,
	boxShadow:string,
	cursor:string,
	outline:string,
	overflowX:autoOrHiddenOrVisible,
	overflowY:autoOrHiddenOrVisible,
	transition:string,
	userSelect:string,
	visibility:hiddenOrVisible,
	WebkitOverflowScrolling:oneOf(['auto','touch'])});

/***/ },
/* 304 */
/***/ function(module, exports) {

	function resolveAssetSource(source){
	return(typeof source==='object'?source.uri:source)||null;
	}

	module.exports=resolveAssetSource;

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	






	var _createStrictShapeTypeChecker=__webpack_require__(306);var _createStrictShapeTypeChecker2=_interopRequireDefault(_createStrictShapeTypeChecker);
	var _flattenStyle=__webpack_require__(266);var _flattenStyle2=_interopRequireDefault(_flattenStyle);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */module.exports=function StyleSheetPropType(shape){var shapePropType=(0,_createStrictShapeTypeChecker2.default)(shape);return function(props,propName,componentName,location){var newProps=props;
	if(props[propName]){
	// Just make a dummy prop object with only the flattened style
	newProps={};
	newProps[propName]=(0,_flattenStyle2.default)(props[propName]);
	}
	return shapePropType(newProps,propName,componentName,location);
	};
	};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	












	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);
	var _merge=__webpack_require__(307);var _merge2=_interopRequireDefault(_merge);
	var _ReactPropTypeLocationNames=__webpack_require__(23);var _ReactPropTypeLocationNames2=_interopRequireDefault(_ReactPropTypeLocationNames);
	var _ReactPropTypesSecret=__webpack_require__(27);var _ReactPropTypesSecret2=_interopRequireDefault(_ReactPropTypesSecret);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable *//**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */function createStrictShapeTypeChecker(shapeTypes){function checkType(isRequired,props,propName,componentName,location){if(!props[propName]){if(isRequired){(0,_invariant2.default)(false,
	'Required object `'+propName+'` was not specified in '+('`'+
	componentName+'`.'));

	}
	return;
	}
	var propValue=props[propName];
	var propType=typeof propValue;
	var locationName=
	location&&_ReactPropTypeLocationNames2.default[location]||'(unknown)';
	if(propType!=='object'){
	(0,_invariant2.default)(
	false,
	'Invalid '+locationName+' `'+propName+'` of type `'+propType+'` '+('supplied to `'+
	componentName+'`, expected `object`.'));

	}
	// We need to check all keys in case some are required but missing from
	// props.
	var allKeys=(0,_merge2.default)(props[propName],shapeTypes);
	for(var key in allKeys){
	var checker=shapeTypes[key];
	if(!checker){
	(0,_invariant2.default)(
	false,
	'Invalid props.'+propName+' key `'+key+'` supplied to `'+componentName+'`.'+'\nBad object: '+
	JSON.stringify(props[propName],null,'  ')+'\nValid keys: '+
	JSON.stringify(Object.keys(shapeTypes),null,'  '));

	}
	var error=checker(propValue,key,componentName,location,null,_ReactPropTypesSecret2.default);
	if(error){
	(0,_invariant2.default)(
	false,
	error.message+'\nBad object: '+
	JSON.stringify(props[propName],null,'  '));

	}
	}
	}
	function chainedCheckType(
	props,
	propName,
	componentName,
	location)
	{
	return checkType(false,props,propName,componentName,location);
	}
	chainedCheckType.isRequired=checkType.bind(null,true);
	return chainedCheckType;
	}

	module.exports=createStrictShapeTypeChecker;

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * @generated SignedSource<<b68d78236d45828b3f7f7fcc740782a9>>
	 *
	 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	 * !! This file is a check-in of a static_upstream project!      !!
	 * !!                                                            !!
	 * !! You should not modify this file directly. Instead:         !!
	 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
	 * !!    the latest version from upstream.                       !!
	 * !! 2) Make your changes, test them, etc.                      !!
	 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
	 * !!    static_upstream.                                        !!
	 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	 *
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule mergeHelpers
	 *
	 * requiresPolyfills: Array.isArray
	 */

	"use strict";

	var invariant=__webpack_require__(7);
	var keyMirror=__webpack_require__(22);

	/**
	 * Maximum number of levels to traverse. Will catch circular structures.
	 * @const
	 */
	var MAX_MERGE_DEPTH=36;

	/**
	 * We won't worry about edge cases like new String('x') or new Boolean(true).
	 * Functions are considered terminals, and arrays are not.
	 * @param {*} o The item/object/value to test.
	 * @return {boolean} true iff the argument is a terminal.
	 */
	var isTerminal=function isTerminal(o){
	return typeof o!=='object'||o===null;
	};

	var mergeHelpers={

	MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

	isTerminal:isTerminal,

	/**
	   * Converts null/undefined values into empty object.
	   *
	   * @param {?Object=} arg Argument to be normalized (nullable optional)
	   * @return {!Object}
	   */
	normalizeMergeArg:function normalizeMergeArg(arg){
	return arg===undefined||arg===null?{}:arg;
	},

	/**
	   * If merging Arrays, a merge strategy *must* be supplied. If not, it is
	   * likely the caller's fault. If this function is ever called with anything
	   * but `one` and `two` being `Array`s, it is the fault of the merge utilities.
	   *
	   * @param {*} one Array to merge into.
	   * @param {*} two Array to merge from.
	   */
	checkMergeArrayArgs:function checkMergeArrayArgs(one,two){
	invariant(
	Array.isArray(one)&&Array.isArray(two),
	'Tried to merge arrays, instead got %s and %s.',
	one,
	two);

	},

	/**
	   * @param {*} one Object to merge into.
	   * @param {*} two Object to merge from.
	   */
	checkMergeObjectArgs:function checkMergeObjectArgs(one,two){
	mergeHelpers.checkMergeObjectArg(one);
	mergeHelpers.checkMergeObjectArg(two);
	},

	/**
	   * @param {*} arg
	   */
	checkMergeObjectArg:function checkMergeObjectArg(arg){
	invariant(
	!isTerminal(arg)&&!Array.isArray(arg),
	'Tried to merge an object, instead got %s.',
	arg);

	},

	/**
	   * @param {*} arg
	   */
	checkMergeIntoObjectArg:function checkMergeIntoObjectArg(arg){
	invariant(
	(!isTerminal(arg)||typeof arg==='function')&&!Array.isArray(arg),
	'Tried to merge into an object, instead got %s.',
	arg);

	},

	/**
	   * Checks that a merge was not given a circular object or an object that had
	   * too great of depth.
	   *
	   * @param {number} Level of recursion to validate against maximum.
	   */
	checkMergeLevel:function checkMergeLevel(level){
	invariant(
	level<MAX_MERGE_DEPTH,
	'Maximum deep merge depth exceeded. You may be attempting to merge '+
	'circular structures in an unsupported way.');

	},

	/**
	   * Checks that the supplied merge strategy is valid.
	   *
	   * @param {string} Array merge strategy.
	   */
	checkArrayStrategy:function checkArrayStrategy(strategy){
	invariant(
	strategy===undefined||strategy in mergeHelpers.ArrayStrategies,
	'You must provide an array strategy to deep merge functions to '+
	'instruct the deep merge how to resolve merging two arrays.');

	},

	/**
	   * Set of possible behaviors of merge algorithms when encountering two Arrays
	   * that must be merged together.
	   * - `clobber`: The left `Array` is ignored.
	   * - `indexByIndex`: The result is achieved by recursively deep merging at
	   *   each index. (not yet supported.)
	   */
	ArrayStrategies:keyMirror({
	Clobber:true,
	IndexByIndex:true})};




	/**
	 * @generated SignedSource<<d3caa35be27b17ea4dd4c76bef72d1ab>>
	 *
	 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	 * !! This file is a check-in of a static_upstream project!      !!
	 * !!                                                            !!
	 * !! You should not modify this file directly. Instead:         !!
	 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
	 * !!    the latest version from upstream.                       !!
	 * !! 2) Make your changes, test them, etc.                      !!
	 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
	 * !!    static_upstream.                                        !!
	 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	 *
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule mergeInto
	 * @typechecks static-only
	 */

	var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
	var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;

	/**
	 * Shallow merges two structures by mutating the first parameter.
	 *
	 * @param {object|function} one Object to be merged into.
	 * @param {?object} two Optional object with properties to merge from.
	 */
	function mergeInto(one,two){
	checkMergeIntoObjectArg(one);
	if(two!=null){
	checkMergeObjectArg(two);
	for(var key in two){
	if(!two.hasOwnProperty(key)){
	continue;
	}
	one[key]=two[key];
	}
	}
	}

	var merge=function merge(one,two){
	var result={};
	mergeInto(result,one);
	mergeInto(result,two);
	return result;
	};

	module.exports=merge;

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _applyLayout=__webpack_require__(309);var _applyLayout2=_interopRequireDefault(_applyLayout);
	var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _BaseComponentPropTypes=__webpack_require__(289);var _BaseComponentPropTypes2=_interopRequireDefault(_BaseComponentPropTypes);
	var _createDOMElement=__webpack_require__(290);var _createDOMElement2=_interopRequireDefault(_createDOMElement);
	var _EdgeInsetsPropType=__webpack_require__(310);var _EdgeInsetsPropType2=_interopRequireDefault(_EdgeInsetsPropType);
	var _normalizeNativeEvent=__webpack_require__(34);var _normalizeNativeEvent2=_interopRequireDefault(_normalizeNativeEvent);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _StyleSheetPropType=__webpack_require__(305);var _StyleSheetPropType2=_interopRequireDefault(_StyleSheetPropType);
	var _ViewStylePropTypes=__webpack_require__(303);var _ViewStylePropTypes2=_interopRequireDefault(_ViewStylePropTypes);
	var _react=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var eventHandlerNames=[
	'onClick',
	'onClickCapture',
	'onMoveShouldSetResponder',
	'onMoveShouldSetResponderCapture',
	'onResponderGrant',
	'onResponderMove',
	'onResponderReject',
	'onResponderRelease',
	'onResponderTerminate',
	'onResponderTerminationRequest',
	'onStartShouldSetResponder',
	'onStartShouldSetResponderCapture',
	'onTouchCancel',
	'onTouchCancelCapture',
	'onTouchEnd',
	'onTouchEndCapture',
	'onTouchMove',
	'onTouchMoveCapture',
	'onTouchStart',
	'onTouchStartCapture'];var


	View=function(_Component){_inherits(View,_Component);function View(){_classCallCheck(this,View);return _possibleConstructorReturn(this,Object.getPrototypeOf(View).apply(this,arguments));}_createClass(View,[{key:'getChildContext',value:function getChildContext()













































	{
	return{
	isInAButtonView:this.props.accessibilityRole==='button'};

	}},{key:'render',value:function render()

	{var _this2=this;var _props=







	this.props;var collapsable=_props.collapsable;var hitSlop=_props.hitSlop;var onLayout=_props.onLayout;var pointerEvents=_props.pointerEvents;var style=_props.style;var other=_objectWithoutProperties(_props,['collapsable','hitSlop','onLayout','pointerEvents','style']);

	var flattenedStyle=_StyleSheet2.default.flatten(style);
	var pointerEventsStyle=pointerEvents&&{pointerEvents:pointerEvents};
	// 'View' needs to set 'flexShrink:0' only when there is no 'flex' or 'flexShrink' style provided
	var needsFlexReset=flattenedStyle.flex==null&&flattenedStyle.flexShrink==null;

	var normalizedEventHandlers=eventHandlerNames.reduce(function(handlerProps,handlerName){
	var handler=_this2.props[handlerName];
	if(typeof handler==='function'){
	handlerProps[handlerName]=_this2._normalizeEventForHandler(handler,handlerName);
	}
	return handlerProps;
	},{});

	var component=this.context.isInAButtonView?'span':'div';
	var props=_extends({},
	other,
	normalizedEventHandlers,{
	style:[
	styles.initial,
	style,
	needsFlexReset&&styles.flexReset,
	pointerEventsStyle]});



	return(0,_createDOMElement2.default)(component,props);
	}},{key:'_normalizeEventForHandler',value:function _normalizeEventForHandler(

	handler,handlerName){
	// Browsers fire mouse events after touch events. This causes the
	// ResponderEvents and their handlers to fire twice for Touchables.
	// Auto-fix this issue by calling 'preventDefault' to cancel the mouse
	// events.
	var shouldCancelEvent=handlerName.indexOf('onResponder')===0;

	return function(e){
	e.nativeEvent=(0,_normalizeNativeEvent2.default)(e.nativeEvent);
	var returnValue=handler(e);
	if(shouldCancelEvent&&e.cancelable){
	e.preventDefault();
	}
	return returnValue;
	};
	}}]);return View;}(_react.Component);View.displayName='View';View.propTypes=_extends({},_BaseComponentPropTypes2.default,{children:_react.PropTypes.any,collapsable:_react.PropTypes.bool,hitSlop:_EdgeInsetsPropType2.default,onClick:_react.PropTypes.func,onClickCapture:_react.PropTypes.func,onLayout:_react.PropTypes.func,onMoveShouldSetResponder:_react.PropTypes.func,onMoveShouldSetResponderCapture:_react.PropTypes.func,onResponderGrant:_react.PropTypes.func,onResponderMove:_react.PropTypes.func,onResponderReject:_react.PropTypes.func,onResponderRelease:_react.PropTypes.func,onResponderTerminate:_react.PropTypes.func,onResponderTerminationRequest:_react.PropTypes.func,onStartShouldSetResponder:_react.PropTypes.func,onStartShouldSetResponderCapture:_react.PropTypes.func,onTouchCancel:_react.PropTypes.func,onTouchCancelCapture:_react.PropTypes.func,onTouchEnd:_react.PropTypes.func,onTouchEndCapture:_react.PropTypes.func,onTouchMove:_react.PropTypes.func,onTouchMoveCapture:_react.PropTypes.func,onTouchStart:_react.PropTypes.func,onTouchStartCapture:_react.PropTypes.func,pointerEvents:_react.PropTypes.oneOf(['auto','box-none','box-only','none']),style:(0,_StyleSheetPropType2.default)(_ViewStylePropTypes2.default)});View.defaultProps={accessible:true,style:{}};View.childContextTypes={isInAButtonView:_react.PropTypes.bool};View.contextTypes={isInAButtonView:_react.PropTypes.bool};


	var styles=_StyleSheet2.default.create({
	// https://github.com/facebook/css-layout#default-values
	initial:{
	alignItems:'stretch',
	borderWidth:0,
	borderStyle:'solid',
	boxSizing:'border-box',
	display:'flex',
	flexBasis:'auto',
	flexDirection:'column',
	margin:0,
	padding:0,
	position:'relative',
	// button and anchor reset
	backgroundColor:'transparent',
	color:'inherit',
	font:'inherit',
	textAlign:'inherit',
	textDecorationLine:'none',
	// list reset
	listStyle:'none',
	// fix flexbox bugs
	minHeight:0,
	minWidth:0},

	flexReset:{
	flexShrink:0}});



	module.exports=(0,_applyLayout2.default)((0,_applyNativeMethods2.default)(View));

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	






	var _emptyFunction=__webpack_require__(11);var _emptyFunction2=_interopRequireDefault(_emptyFunction);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var applyLayout=function applyLayout(Component){
	var componentDidMount=Component.prototype.componentDidMount||_emptyFunction2.default;
	var componentDidUpdate=Component.prototype.componentDidUpdate||_emptyFunction2.default;

	Component.prototype.componentDidMount=function(){
	componentDidMount();
	this._layoutState={};
	this._handleLayout();
	};

	Component.prototype.componentDidUpdate=function(){
	componentDidUpdate();
	this._handleLayout();
	};

	Component.prototype._handleLayout=function(){var _this=this;
	var layout=this._layoutState;var
	onLayout=this.props.onLayout;

	if(onLayout){
	this.measure(function(x,y,width,height){
	if(layout.x!==x||layout.y!==y||layout.width!==width||layout.height!==height){
	var nextLayout={x:x,y:y,width:width,height:height};
	var nativeEvent={layout:nextLayout};
	onLayout({nativeEvent:nativeEvent});
	_this._layoutState=nextLayout;
	}
	});
	}
	};
	return Component;
	};/**
	 * Copyright (c) 2016-present, Nicolas Gallagher.
	 * All rights reserved.
	 *
	 * 
	 */module.exports=applyLayout;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EdgeInsetsPropType
	 * 
	 */
	'use strict';

	var PropTypes=__webpack_require__(1).PropTypes;

	var createStrictShapeTypeChecker=__webpack_require__(306);

	var EdgeInsetsPropType=createStrictShapeTypeChecker({
	top:PropTypes.number,
	left:PropTypes.number,
	bottom:PropTypes.number,
	right:PropTypes.number});


	module.exports=EdgeInsetsPropType;

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _applyLayout=__webpack_require__(309);var _applyLayout2=_interopRequireDefault(_applyLayout);
	var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _BaseComponentPropTypes=__webpack_require__(289);var _BaseComponentPropTypes2=_interopRequireDefault(_BaseComponentPropTypes);
	var _createDOMElement=__webpack_require__(290);var _createDOMElement2=_interopRequireDefault(_createDOMElement);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _StyleSheetPropType=__webpack_require__(305);var _StyleSheetPropType2=_interopRequireDefault(_StyleSheetPropType);
	var _TextStylePropTypes=__webpack_require__(301);var _TextStylePropTypes2=_interopRequireDefault(_TextStylePropTypes);
	var _react=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

	Text=function(_Component){_inherits(Text,_Component);function Text(){var _Object$getPrototypeO;var _temp,_this,_ret;_classCallCheck(this,Text);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_Object$getPrototypeO=Object.getPrototypeOf(Text)).call.apply(_Object$getPrototypeO,[this].concat(args))),_this),_this.








































	_onPress=function(e){
	if(_this.props.onPress){_this.props.onPress(e);}
	},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(Text,[{key:'render',value:function render(){var _props=this.props;var numberOfLines=_props.numberOfLines;var onLayout=_props.onLayout;var onPress=_props.onPress;var selectable=_props.selectable;var style=_props.style;var other=_objectWithoutProperties(_props,['numberOfLines','onLayout','onPress','selectable','style']);return(0,_createDOMElement2.default)('span',_extends({},other,{onClick:this._onPress,style:[styles.initial,style,!selectable&&styles.notSelectable,numberOfLines===1&&styles.singleLineStyle]}));}}]);return Text;}(_react.Component);Text.displayName='Text';Text.propTypes=_extends({},_BaseComponentPropTypes2.default,{accessibilityRole:_react.PropTypes.oneOf(['heading','link']),children:_react.PropTypes.any,numberOfLines:_react.PropTypes.number,onLayout:_react.PropTypes.func,onPress:_react.PropTypes.func,selectable:_react.PropTypes.bool,style:(0,_StyleSheetPropType2.default)(_TextStylePropTypes2.default)});Text.defaultProps={accessible:true,selectable:true};


	var styles=_StyleSheet2.default.create({
	initial:{
	color:'inherit',
	display:'inline',
	font:'inherit',
	margin:0,
	padding:0,
	textDecorationLine:'none',
	wordWrap:'break-word'},

	notSelectable:{
	userSelect:'none'},

	singleLineStyle:{
	maxWidth:'100%',
	overflow:'hidden',
	textOverflow:'ellipsis',
	whiteSpace:'nowrap'}});



	module.exports=(0,_applyLayout2.default)((0,_applyNativeMethods2.default)(Text));

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */

	var _react=__webpack_require__(1);
	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);
	var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);
	var _renderApplication=__webpack_require__(313);var _renderApplication2=_interopRequireDefault(_renderApplication);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var runnables={};









	/**
	 * `AppRegistry` is the JS entry point to running all React Native apps.
	 */var
	AppRegistry=function(){function AppRegistry(){_classCallCheck(this,AppRegistry);}_createClass(AppRegistry,null,[{key:'getAppKeys',value:function getAppKeys()
	{
	return Object.keys(runnables);
	}},{key:'prerenderApplication',value:function prerenderApplication(

	appKey,appParameters){
	(0,_invariant2.default)(
	runnables[appKey]&&runnables[appKey].prerender,
	'Application '+appKey+' has not been registered. '+
	'This is either due to an import error during initialization or failure to call AppRegistry.registerComponent.');


	return runnables[appKey].prerender(appParameters);
	}},{key:'registerComponent',value:function registerComponent(

	appKey,getComponentFunc){
	runnables[appKey]={
	run:function run(_ref){var initialProps=_ref.initialProps;var rootTag=_ref.rootTag;return(0,_renderApplication2.default)(getComponentFunc(),initialProps,rootTag);},
	prerender:function prerender(){var _ref2=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];var initialProps=_ref2.initialProps;return(0,_renderApplication.prerenderApplication)(getComponentFunc(),initialProps);}};

	return appKey;
	}},{key:'registerConfig',value:function registerConfig(

	config){
	config.forEach(function(_ref3){var appKey=_ref3.appKey;var component=_ref3.component;var run=_ref3.run;
	if(run){
	AppRegistry.registerRunnable(appKey,run);
	}else{
	(0,_invariant2.default)(component,'No component provider passed in');
	AppRegistry.registerComponent(appKey,component);
	}
	});
	}

	// TODO: fix style sheet creation when using this method
	},{key:'registerRunnable',value:function registerRunnable(appKey,run){
	runnables[appKey]={run:run};
	return appKey;
	}},{key:'runApplication',value:function runApplication(

	appKey,appParameters){
	var isDevelopment=("production")!=='production';
	var params=_extends({},appParameters);
	params.rootTag='#'+params.rootTag.id;

	console.log(
	'Running application "'+appKey+'" with appParams: '+JSON.stringify(params)+'. '+('development-level warnings are '+(
	isDevelopment?'ON':'OFF')+', ')+('performance optimizations are '+(
	isDevelopment?'OFF':'ON')));


	(0,_invariant2.default)(
	runnables[appKey]&&runnables[appKey].run,
	'Application "'+appKey+'" has not been registered. '+
	'This is either due to an import error during initialization or failure to call AppRegistry.registerComponent.');


	runnables[appKey].run(appParameters);
	}},{key:'unmountApplicationComponentAtRootTag',value:function unmountApplicationComponentAtRootTag(

	rootTag){
	_reactDom2.default.unmountComponentAtNode(rootTag);
	}}]);return AppRegistry;}();


	module.exports=AppRegistry;

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});exports.default=














	renderApplication;exports.












	prerenderApplication=prerenderApplication;var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);var _server=__webpack_require__(171);var _server2=_interopRequireDefault(_server);var _ReactNativeApp=__webpack_require__(314);var _ReactNativeApp2=_interopRequireDefault(_ReactNativeApp);var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */function renderApplication(RootComponent,initialProps,rootTag){(0,_invariant2.default)(rootTag,'Expect to have a valid rootTag, instead got ',rootTag);var component=_react2.default.createElement(_ReactNativeApp2.default,{initialProps:initialProps,rootComponent:RootComponent,rootTag:rootTag});_reactDom2.default.render(component,rootTag);}function prerenderApplication(RootComponent,initialProps){var component=_react2.default.createElement(_ReactNativeApp2.default,{initialProps:initialProps,rootComponent:RootComponent});
	var html=_server2.default.renderToString(component);
	var styleElement=_StyleSheet2.default.render();
	return{html:html,styleElement:styleElement};
	}

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

	ReactNativeApp=function(_Component){_inherits(ReactNativeApp,_Component);function ReactNativeApp(){_classCallCheck(this,ReactNativeApp);return _possibleConstructorReturn(this,Object.getPrototypeOf(ReactNativeApp).apply(this,arguments));}_createClass(ReactNativeApp,[{key:'render',value:function render()






	{var _props=
	this.props;var initialProps=_props.initialProps;var RootComponent=_props.rootComponent;var rootTag=_props.rootTag;

	return(
	_react2.default.createElement(_View2.default,{style:styles.appContainer},
	_react2.default.createElement(RootComponent,_extends({},initialProps,{rootTag:rootTag}))));


	}}]);return ReactNativeApp;}(_react.Component);ReactNativeApp.propTypes={initialProps:_react.PropTypes.object,rootComponent:_react.PropTypes.any.isRequired,rootTag:_react.PropTypes.any};


	var styles=_StyleSheet2.default.create({
	/**
	   * Ensure that the application covers the whole screen.
	   */
	appContainer:{
	position:'absolute',
	left:0,
	top:0,
	right:0,
	bottom:0}});



	module.exports=ReactNativeApp;

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _ExecutionEnvironment=__webpack_require__(54);var _ExecutionEnvironment2=_interopRequireDefault(_ExecutionEnvironment);
	var _findIndex=__webpack_require__(316);var _findIndex2=_interopRequireDefault(_findIndex);
	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var EVENT_TYPES=['change'];
	var VISIBILITY_CHANGE_EVENT='visibilitychange';

	var AppStates={
	BACKGROUND:'background',
	ACTIVE:'active'};


	var listeners=[];var

	AppState=function(){function AppState(){_classCallCheck(this,AppState);}_createClass(AppState,null,[{key:'addEventListener',value:function addEventListener(

















	type,handler){
	if(AppState.isSupported){
	(0,_invariant2.default)(EVENT_TYPES.indexOf(type)!==-1,'Trying to subscribe to unknown event: "%s"',type);
	var callback=function callback(){return handler(AppState.currentState);};
	listeners.push([handler,callback]);
	document.addEventListener(VISIBILITY_CHANGE_EVENT,callback,false);
	}
	}},{key:'removeEventListener',value:function removeEventListener(

	type,handler){
	if(AppState.isSupported){
	(0,_invariant2.default)(EVENT_TYPES.indexOf(type)!==-1,'Trying to remove listener for unknown event: "%s"',type);
	var listenerIndex=(0,_findIndex2.default)(listeners,function(pair){return pair[0]===handler;});
	(0,_invariant2.default)(listenerIndex!==-1,'Trying to remove AppState listener for unregistered handler');
	var callback=listeners[listenerIndex][1];
	document.removeEventListener(VISIBILITY_CHANGE_EVENT,callback,false);
	listeners.splice(listenerIndex,1);
	}
	}},{key:'currentState',get:function get(){if(!AppState.isSupported){return AppState.ACTIVE;}switch(document.visibilityState){case'hidden':case'prerender':case'unloaded':return AppStates.BACKGROUND;default:return AppStates.ACTIVE;}}}]);return AppState;}();AppState.isSupported=_ExecutionEnvironment2.default.canUseDOM&&document.visibilityState;


	module.exports=AppState;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(317),
	    baseIteratee = __webpack_require__(318),
	    toInteger = __webpack_require__(421);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function} [predicate=_.identity]
	 *  The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate, fromIndex) {
	  var length = array ? array.length : 0;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseFindIndex(array, baseIteratee(predicate, 3), index);
	}

	module.exports = findIndex;


/***/ },
/* 317 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);

	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseFindIndex;


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(319),
	    baseMatchesProperty = __webpack_require__(403),
	    identity = __webpack_require__(417),
	    isArray = __webpack_require__(383),
	    property = __webpack_require__(418);

	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}

	module.exports = baseIteratee;


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(320),
	    getMatchData = __webpack_require__(400),
	    matchesStrictComparable = __webpack_require__(402);

	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}

	module.exports = baseMatches;


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(321),
	    baseIsEqual = __webpack_require__(362);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;

	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];

	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}

	module.exports = baseIsMatch;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(322),
	    stackClear = __webpack_require__(330),
	    stackDelete = __webpack_require__(331),
	    stackGet = __webpack_require__(332),
	    stackHas = __webpack_require__(333),
	    stackSet = __webpack_require__(334);

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	module.exports = Stack;


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(323),
	    listCacheDelete = __webpack_require__(324),
	    listCacheGet = __webpack_require__(327),
	    listCacheHas = __webpack_require__(328),
	    listCacheSet = __webpack_require__(329);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ },
/* 323 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}

	module.exports = listCacheClear;


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(325);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}

	module.exports = listCacheDelete;


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(326);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ },
/* 326 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(325);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(325);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(325);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(322);

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}

	module.exports = stackClear;


/***/ },
/* 331 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}

	module.exports = stackDelete;


/***/ },
/* 332 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	module.exports = stackGet;


/***/ },
/* 333 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	module.exports = stackHas;


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(322),
	    Map = __webpack_require__(335),
	    MapCache = __webpack_require__(347);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache) {
	    var pairs = cache.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      return this;
	    }
	    cache = this.__data__ = new MapCache(pairs);
	  }
	  cache.set(key, value);
	  return this;
	}

	module.exports = stackSet;


/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(336),
	    root = __webpack_require__(343);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(337),
	    getValue = __webpack_require__(346);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(338),
	    isHostObject = __webpack_require__(340),
	    isMasked = __webpack_require__(341),
	    isObject = __webpack_require__(339),
	    toSource = __webpack_require__(345);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(339);

	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}

	module.exports = isFunction;


/***/ },
/* 339 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 340 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(342);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(343);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(344);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 344 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 345 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ },
/* 346 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(348),
	    mapCacheDelete = __webpack_require__(356),
	    mapCacheGet = __webpack_require__(359),
	    mapCacheHas = __webpack_require__(360),
	    mapCacheSet = __webpack_require__(361);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(349),
	    ListCache = __webpack_require__(322),
	    Map = __webpack_require__(335);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(350),
	    hashDelete = __webpack_require__(352),
	    hashGet = __webpack_require__(353),
	    hashHas = __webpack_require__(354),
	    hashSet = __webpack_require__(355);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(351);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}

	module.exports = hashClear;


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(336);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ },
/* 352 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}

	module.exports = hashDelete;


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(351);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(351);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(351);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(357);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}

	module.exports = mapCacheDelete;


/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(358);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ },
/* 358 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(357);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(357);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(357);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}

	module.exports = mapCacheSet;


/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(363),
	    isObject = __webpack_require__(339),
	    isObjectLike = __webpack_require__(382);

	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}

	module.exports = baseIsEqual;


/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(321),
	    equalArrays = __webpack_require__(364),
	    equalByTag = __webpack_require__(369),
	    equalObjects = __webpack_require__(374),
	    getTag = __webpack_require__(389),
	    isArray = __webpack_require__(383),
	    isHostObject = __webpack_require__(340),
	    isTypedArray = __webpack_require__(395);

	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;

	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;

	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;

	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}

	module.exports = baseIsEqualDeep;


/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(365),
	    arraySome = __webpack_require__(368);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

	  stack.set(array, other);
	  stack.set(other, array);

	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalArrays;


/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(347),
	    setCacheAdd = __webpack_require__(366),
	    setCacheHas = __webpack_require__(367);

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	module.exports = SetCache;


/***/ },
/* 366 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	module.exports = setCacheAdd;


/***/ },
/* 367 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	module.exports = setCacheHas;


/***/ },
/* 368 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arraySome;


/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(370),
	    Uint8Array = __webpack_require__(371),
	    eq = __webpack_require__(326),
	    equalArrays = __webpack_require__(364),
	    mapToArray = __webpack_require__(372),
	    setToArray = __webpack_require__(373);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;

	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;

	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');

	    case mapTag:
	      var convert = mapToArray;

	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);

	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;

	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	      stack['delete'](object);
	      return result;

	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}

	module.exports = equalByTag;


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(343);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(343);

	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;

	module.exports = Uint8Array;


/***/ },
/* 372 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	module.exports = mapToArray;


/***/ },
/* 373 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	module.exports = setToArray;


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	var keys = __webpack_require__(375);

	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);

	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalObjects;


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(376),
	    baseKeys = __webpack_require__(385),
	    isArrayLike = __webpack_require__(380);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(377),
	    isArguments = __webpack_require__(378),
	    isArray = __webpack_require__(383),
	    isIndex = __webpack_require__(384);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];

	  var length = result.length,
	      skipIndexes = !!length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = arrayLikeKeys;


/***/ },
/* 377 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(379);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}

	module.exports = isArguments;


/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(380),
	    isObjectLike = __webpack_require__(382);

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	module.exports = isArrayLikeObject;


/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(338),
	    isLength = __webpack_require__(381);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 381 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 382 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 383 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 384 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(386),
	    nativeKeys = __webpack_require__(387);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeys;


/***/ },
/* 386 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(388);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);

	module.exports = nativeKeys;


/***/ },
/* 388 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(390),
	    Map = __webpack_require__(335),
	    Promise = __webpack_require__(391),
	    Set = __webpack_require__(392),
	    WeakMap = __webpack_require__(393),
	    baseGetTag = __webpack_require__(394),
	    toSource = __webpack_require__(345);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';

	var dataViewTag = '[object DataView]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;

	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge < 14, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	module.exports = getTag;


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(336),
	    root = __webpack_require__(343);

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');

	module.exports = DataView;


/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(336),
	    root = __webpack_require__(343);

	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');

	module.exports = Promise;


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(336),
	    root = __webpack_require__(343);

	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');

	module.exports = Set;


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(336),
	    root = __webpack_require__(343);

	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');

	module.exports = WeakMap;


/***/ },
/* 394 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * The base implementation of `getTag`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  return objectToString.call(value);
	}

	module.exports = baseGetTag;


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(396),
	    baseUnary = __webpack_require__(397),
	    nodeUtil = __webpack_require__(398);

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	module.exports = isTypedArray;


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(381),
	    isObjectLike = __webpack_require__(382);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}

	module.exports = baseIsTypedArray;


/***/ },
/* 397 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(344);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding('util');
	  } catch (e) {}
	}());

	module.exports = nodeUtil;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(399)(module)))

/***/ },
/* 399 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(401),
	    keys = __webpack_require__(375);

	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;

	  while (length--) {
	    var key = result[length],
	        value = object[key];

	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}

	module.exports = getMatchData;


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(339);

	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}

	module.exports = isStrictComparable;


/***/ },
/* 402 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}

	module.exports = matchesStrictComparable;


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(362),
	    get = __webpack_require__(404),
	    hasIn = __webpack_require__(414),
	    isKey = __webpack_require__(412),
	    isStrictComparable = __webpack_require__(401),
	    matchesStrictComparable = __webpack_require__(402),
	    toKey = __webpack_require__(413);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	  };
	}

	module.exports = baseMatchesProperty;


/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(405);

	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}

	module.exports = get;


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(406),
	    isKey = __webpack_require__(412),
	    toKey = __webpack_require__(413);

	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = isKey(path, object) ? [path] : castPath(path);

	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(383),
	    stringToPath = __webpack_require__(407);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}

	module.exports = castPath;


/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(408),
	    toString = __webpack_require__(409);

	/** Used to match property names within property paths. */
	var reLeadingDot = /^\./,
	    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoize(function(string) {
	  string = toString(string);

	  var result = [];
	  if (reLeadingDot.test(string)) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});

	module.exports = stringToPath;


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(347);

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result);
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Assign cache to `_.memoize`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(410);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(370),
	    isSymbol = __webpack_require__(411);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;

	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = baseToString;


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(382);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(383),
	    isSymbol = __webpack_require__(411);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}

	module.exports = isKey;


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(411);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(415),
	    hasPath = __webpack_require__(416);

	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}

	module.exports = hasIn;


/***/ },
/* 415 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}

	module.exports = baseHasIn;


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(406),
	    isArguments = __webpack_require__(378),
	    isArray = __webpack_require__(383),
	    isIndex = __webpack_require__(384),
	    isKey = __webpack_require__(412),
	    isLength = __webpack_require__(381),
	    toKey = __webpack_require__(413);

	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = isKey(path, object) ? [path] : castPath(path);

	  var result,
	      index = -1,
	      length = path.length;

	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result) {
	    return result;
	  }
	  var length = object ? object.length : 0;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}

	module.exports = hasPath;


/***/ },
/* 417 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(419),
	    basePropertyDeep = __webpack_require__(420),
	    isKey = __webpack_require__(412),
	    toKey = __webpack_require__(413);

	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}

	module.exports = property;


/***/ },
/* 419 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = baseProperty;


/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(405);

	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}

	module.exports = basePropertyDeep;


/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(422);

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	module.exports = toInteger;


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(423);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	module.exports = toFinite;


/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(339),
	    isSymbol = __webpack_require__(411);

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = toNumber;


/***/ },
/* 424 */
/***/ function(module, exports) {

	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 */

	var mergeLocalStorageItem=function mergeLocalStorageItem(key,value){
	var oldValue=window.localStorage.getItem(key);
	var oldObject=JSON.parse(oldValue);
	var newObject=JSON.parse(value);
	var nextValue=JSON.stringify(_extends({},oldObject,newObject));
	window.localStorage.setItem(key,nextValue);
	};var

	AsyncStorage=function(){function AsyncStorage(){_classCallCheck(this,AsyncStorage);}_createClass(AsyncStorage,null,[{key:"clear",
	/**
	   * Erases *all* AsyncStorage for the domain.
	   */value:function clear()
	{
	return new Promise(function(resolve,reject){
	try{
	window.localStorage.clear();
	resolve(null);
	}catch(err){
	reject(err);
	}
	});
	}

	/**
	   * Gets *all* keys known to the app, for all callers, libraries, etc.
	   */},{key:"getAllKeys",value:function getAllKeys()
	{
	return new Promise(function(resolve,reject){
	try{
	var numberOfKeys=window.localStorage.length;
	var keys=[];
	for(var i=0;i<numberOfKeys;i+=1){
	var key=window.localStorage.key(i);
	keys.push(key);
	}
	resolve(keys);
	}catch(err){
	reject(err);
	}
	});
	}

	/**
	   * Fetches `key` value.
	   */},{key:"getItem",value:function getItem(
	key){
	return new Promise(function(resolve,reject){
	try{
	var value=window.localStorage.getItem(key);
	resolve(value);
	}catch(err){
	reject(err);
	}
	});
	}

	/**
	   * Merges existing value with input value, assuming they are stringified JSON.
	   */},{key:"mergeItem",value:function mergeItem(
	key,value){
	return new Promise(function(resolve,reject){
	try{
	mergeLocalStorageItem(key,value);
	resolve(null);
	}catch(err){
	reject(err);
	}
	});
	}

	/**
	   * multiGet resolves to an array of key-value pair arrays that matches the
	   * input format of multiSet.
	   *
	   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]
	   */},{key:"multiGet",value:function multiGet(
	keys){
	var promises=keys.map(function(key){return AsyncStorage.getItem(key);});

	return Promise.all(promises).then(
	function(result){return Promise.resolve(result.map(function(value,i){return[keys[i],value];}));},
	function(error){return Promise.reject(error);});

	}

	/**
	   * Takes an array of key-value array pairs and merges them with existing
	   * values, assuming they are stringified JSON.
	   *
	   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])
	   */},{key:"multiMerge",value:function multiMerge(
	keyValuePairs){
	var promises=keyValuePairs.map(function(item){return AsyncStorage.mergeItem(item[0],item[1]);});

	return Promise.all(promises).then(
	function(){return Promise.resolve(null);},
	function(error){return Promise.reject(error);});

	}

	/**
	   * Delete all the keys in the `keys` array.
	   */},{key:"multiRemove",value:function multiRemove(
	keys){
	var promises=keys.map(function(key){return AsyncStorage.removeItem(key);});

	return Promise.all(promises).then(
	function(){return Promise.resolve(null);},
	function(error){return Promise.reject(error);});

	}

	/**
	   * Takes an array of key-value array pairs.
	   *   multiSet([['k1', 'val1'], ['k2', 'val2']])
	   */},{key:"multiSet",value:function multiSet(
	keyValuePairs){
	var promises=keyValuePairs.map(function(item){return AsyncStorage.setItem(item[0],item[1]);});

	return Promise.all(promises).then(
	function(){return Promise.resolve(null);},
	function(error){return Promise.reject(error);});

	}

	/**
	   * Removes a `key`
	   */},{key:"removeItem",value:function removeItem(
	key){
	return new Promise(function(resolve,reject){
	try{
	window.localStorage.removeItem(key);
	resolve(null);
	}catch(err){
	reject(err);
	}
	});
	}

	/**
	   * Sets `value` for `key`.
	   */},{key:"setItem",value:function setItem(
	key,value){
	return new Promise(function(resolve,reject){
	try{
	window.localStorage.setItem(key,value);
	resolve(null);
	}catch(err){
	reject(err);
	}
	});
	}}]);return AsyncStorage;}();


	module.exports=AsyncStorage;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */

	var _debounce=__webpack_require__(426);var _debounce2=_interopRequireDefault(_debounce);
	var _ExecutionEnvironment=__webpack_require__(54);var _ExecutionEnvironment2=_interopRequireDefault(_ExecutionEnvironment);
	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var win=_ExecutionEnvironment2.default.canUseDOM?window:{screen:{}};

	var dimensions={};var

	Dimensions=function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'get',value:function get(
	dimension){
	(0,_invariant2.default)(dimensions[dimension],'No dimension set for key '+dimension);
	return dimensions[dimension];
	}},{key:'set',value:function set()

	{
	dimensions.window={
	fontScale:1,
	height:win.innerHeight,
	scale:win.devicePixelRatio||1,
	width:win.innerWidth};


	dimensions.screen={
	fontScale:1,
	height:win.screen.height,
	scale:win.devicePixelRatio||1,
	width:win.screen.width};

	}}]);return Dimensions;}();


	Dimensions.set();
	_ExecutionEnvironment2.default.canUseDOM&&window.addEventListener('resize',(0,_debounce2.default)(Dimensions.set,50));

	module.exports=Dimensions;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(339),
	    now = __webpack_require__(427),
	    toNumber = __webpack_require__(423);

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }

	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;

	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }

	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }

	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;

	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }

	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;

	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }

	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }

	  function trailingEdge(time) {
	    timerId = undefined;

	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }

	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }

	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }

	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);

	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;

	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}

	module.exports = debounce;


/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(343);

	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};

	module.exports = now;


/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	






	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);
	var _keyMirror=__webpack_require__(22);var _keyMirror2=_interopRequireDefault(_keyMirror);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */var InteractionManager={Events:(0,_keyMirror2.default)({interactionStart:true,interactionComplete:true}),


	/**
	   * Schedule a function to run after all interactions have completed.
	   */
	runAfterInteractions:function runAfterInteractions(callback){
	(0,_invariant2.default)(
	typeof callback==='function',
	'Must specify a function to schedule.');

	callback();
	},

	/**
	   * Notify manager that an interaction has started.
	   */
	createInteractionHandle:function createInteractionHandle(){
	return 1;
	},

	/**
	   * Notify manager that an interaction has completed.
	   */
	clearInteractionHandle:function clearInteractionHandle(handle){
	(0,_invariant2.default)(
	!!handle,
	'Must provide a handle to clear.');

	},

	addListener:function addListener(){}};


	module.exports=InteractionManager;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	







	var _ExecutionEnvironment=__webpack_require__(54);var _ExecutionEnvironment2=_interopRequireDefault(_ExecutionEnvironment);
	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */var connection=_ExecutionEnvironment2.default.canUseDOM&&(window.navigator.connection||window.navigator.mozConnection||window.navigator.webkitConnection);

	var eventTypes=['change'];

	/**
	 * Navigator online: https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine
	 * Network Connection API: https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation
	 */
	var NetInfo={
	addEventListener:function addEventListener(type,handler){
	(0,_invariant2.default)(eventTypes.indexOf(type)!==-1,'Trying to subscribe to unknown event: "%s"',type);
	if(!connection){
	console.error('Network Connection API is not supported. Not listening for connection type changes.');
	return{
	remove:function remove(){}};

	}

	connection.addEventListener(type,handler);
	return{
	remove:function remove(){return NetInfo.removeEventListener(type,handler);}};

	},

	removeEventListener:function removeEventListener(type,handler){
	(0,_invariant2.default)(eventTypes.indexOf(type)!==-1,'Trying to subscribe to unknown event: "%s"',type);
	if(!connection){return;}
	connection.removeEventListener(type,handler);
	},

	fetch:function fetch(){
	return new Promise(function(resolve,reject){
	try{
	resolve(connection.type);
	}catch(err){
	resolve('unknown');
	}
	});
	},

	isConnected:{
	addEventListener:function addEventListener(type,handler){
	(0,_invariant2.default)(eventTypes.indexOf(type)!==-1,'Trying to subscribe to unknown event: "%s"',type);
	window.addEventListener('online',handler.bind(null,true),false);
	window.addEventListener('offline',handler.bind(null,false),false);

	return{
	remove:function remove(){return NetInfo.isConnected.removeEventListener(type,handler);}};

	},

	removeEventListener:function removeEventListener(type,handler){
	(0,_invariant2.default)(eventTypes.indexOf(type)!==-1,'Trying to subscribe to unknown event: "%s"',type);
	window.removeEventListener('online',handler.bind(null,true),false);
	window.removeEventListener('offline',handler.bind(null,false),false);
	},

	fetch:function fetch(){
	return new Promise(function(resolve,reject){
	try{
	resolve(window.navigator.onLine);
	}catch(err){
	resolve(true);
	}
	});
	}}};



	module.exports=NetInfo;

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 */

	"use strict";

	var TouchHistoryMath=__webpack_require__(431);

	var currentCentroidXOfTouchesChangedAfter=
	TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
	var currentCentroidYOfTouchesChangedAfter=
	TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
	var previousCentroidXOfTouchesChangedAfter=
	TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
	var previousCentroidYOfTouchesChangedAfter=
	TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
	var currentCentroidX=TouchHistoryMath.currentCentroidX;
	var currentCentroidY=TouchHistoryMath.currentCentroidY;

	/**
	 * `PanResponder` reconciles several touches into a single gesture. It makes
	 * single-touch gestures resilient to extra touches, and can be used to
	 * recognize simple multi-touch gestures.
	 *
	 * It provides a predictable wrapper of the responder handlers provided by the
	 * [gesture responder system](docs/gesture-responder-system.html).
	 * For each handler, it provides a new `gestureState` object alongside the
	 * native event object:
	 *
	 * ```
	 * onPanResponderMove: (event, gestureState) => {}
	 * ```
	 *
	 * A native event is a synthetic touch event with the following form:
	 *
	 *  - `nativeEvent`
	 *      + `changedTouches` - Array of all touch events that have changed since the last event
	 *      + `identifier` - The ID of the touch
	 *      + `locationX` - The X position of the touch, relative to the element
	 *      + `locationY` - The Y position of the touch, relative to the element
	 *      + `pageX` - The X position of the touch, relative to the root element
	 *      + `pageY` - The Y position of the touch, relative to the root element
	 *      + `target` - The node id of the element receiving the touch event
	 *      + `timestamp` - A time identifier for the touch, useful for velocity calculation
	 *      + `touches` - Array of all current touches on the screen
	 *
	 * A `gestureState` object has the following:
	 *
	 *  - `stateID` - ID of the gestureState- persisted as long as there at least
	 *     one touch on screen
	 *  - `moveX` - the latest screen coordinates of the recently-moved touch
	 *  - `moveY` - the latest screen coordinates of the recently-moved touch
	 *  - `x0` - the screen coordinates of the responder grant
	 *  - `y0` - the screen coordinates of the responder grant
	 *  - `dx` - accumulated distance of the gesture since the touch started
	 *  - `dy` - accumulated distance of the gesture since the touch started
	 *  - `vx` - current velocity of the gesture
	 *  - `vy` - current velocity of the gesture
	 *  - `numberActiveTouches` - Number of touches currently on screen
	 *
	 * ### Basic Usage
	 *
	 * ```
	 *   componentWillMount: function() {
	 *     this._panResponder = PanResponder.create({
	 *       // Ask to be the responder:
	 *       onStartShouldSetPanResponder: (evt, gestureState) => true,
	 *       onStartShouldSetPanResponderCapture: (evt, gestureState) => true,
	 *       onMoveShouldSetPanResponder: (evt, gestureState) => true,
	 *       onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,
	 *
	 *       onPanResponderGrant: (evt, gestureState) => {
	 *         // The guesture has started. Show visual feedback so the user knows
	 *         // what is happening!
	 *
	 *         // gestureState.{x,y}0 will be set to zero now
	 *       },
	 *       onPanResponderMove: (evt, gestureState) => {
	 *         // The most recent move distance is gestureState.move{X,Y}
	 *
	 *         // The accumulated gesture distance since becoming responder is
	 *         // gestureState.d{x,y}
	 *       },
	 *       onPanResponderTerminationRequest: (evt, gestureState) => true,
	 *       onPanResponderRelease: (evt, gestureState) => {
	 *         // The user has released all touches while this view is the
	 *         // responder. This typically means a gesture has succeeded
	 *       },
	 *       onPanResponderTerminate: (evt, gestureState) => {
	 *         // Another component has become the responder, so this gesture
	 *         // should be cancelled
	 *       },
	 *       onShouldBlockNativeResponder: (evt, gestureState) => {
	 *         // Returns whether this component should block native components from becoming the JS
	 *         // responder. Returns true by default. Is currently only supported on android.
	 *         return true;
	 *       },
	 *     });
	 *   },
	 *
	 *   render: function() {
	 *     return (
	 *       <View {...this._panResponder.panHandlers} />
	 *     );
	 *   },
	 *
	 * ```
	 *
	 * ### Working Example
	 *
	 * To see it in action, try the
	 * [PanResponder example in UIExplorer](https://github.com/facebook/react-native/blob/master/Examples/UIExplorer/PanResponderExample.js)
	 */

	var PanResponder={

	/**
	   *
	   * A graphical explanation of the touch data flow:
	   *
	   * +----------------------------+             +--------------------------------+
	   * | ResponderTouchHistoryStore |             |TouchHistoryMath                |
	   * +----------------------------+             +----------+---------------------+
	   * |Global store of touchHistory|             |Allocation-less math util       |
	   * |including activeness, start |             |on touch history (centroids     |
	   * |position, prev/cur position.|             |and multitouch movement etc)    |
	   * |                            |             |                                |
	   * +----^-----------------------+             +----^---------------------------+
	   *      |                                          |
	   *      | (records relevant history                |
	   *      |  of touches relevant for                 |
	   *      |  implementing higher level               |
	   *      |  gestures)                               |
	   *      |                                          |
	   * +----+-----------------------+             +----|---------------------------+
	   * | ResponderEventPlugin       |             |    |   Your App/Component      |
	   * +----------------------------+             +----|---------------------------+
	   * |Negotiates which view gets  | Low level   |    |             High level    |
	   * |onResponderMove events.     | events w/   |  +-+-------+     events w/     |
	   * |Also records history into   | touchHistory|  |   Pan   |     multitouch +  |
	   * |ResponderTouchHistoryStore. +---------------->Responder+-----> accumulative|
	   * +----------------------------+ attached to |  |         |     distance and  |
	   *                                 each event |  +---------+     velocity.     |
	   *                                            |                                |
	   *                                            |                                |
	   *                                            +--------------------------------+
	   *
	   *
	   *
	   * Gesture that calculates cumulative movement over time in a way that just
	   * "does the right thing" for multiple touches. The "right thing" is very
	   * nuanced. When moving two touches in opposite directions, the cumulative
	   * distance is zero in each dimension. When two touches move in parallel five
	   * pixels in the same direction, the cumulative distance is five, not ten. If
	   * two touches start, one moves five in a direction, then stops and the other
	   * touch moves fives in the same direction, the cumulative distance is ten.
	   *
	   * This logic requires a kind of processing of time "clusters" of touch events
	   * so that two touch moves that essentially occur in parallel but move every
	   * other frame respectively, are considered part of the same movement.
	   *
	   * Explanation of some of the non-obvious fields:
	   *
	   * - moveX/moveY: If no move event has been observed, then `(moveX, moveY)` is
	   *   invalid. If a move event has been observed, `(moveX, moveY)` is the
	   *   centroid of the most recently moved "cluster" of active touches.
	   *   (Currently all move have the same timeStamp, but later we should add some
	   *   threshold for what is considered to be "moving"). If a palm is
	   *   accidentally counted as a touch, but a finger is moving greatly, the palm
	   *   will move slightly, but we only want to count the single moving touch.
	   * - x0/y0: Centroid location (non-cumulative) at the time of becoming
	   *   responder.
	   * - dx/dy: Cumulative touch distance - not the same thing as sum of each touch
	   *   distance. Accounts for touch moves that are clustered together in time,
	   *   moving the same direction. Only valid when currently responder (otherwise,
	   *   it only represents the drag distance below the threshold).
	   * - vx/vy: Velocity.
	   */

	_initializeGestureState:function _initializeGestureState(gestureState){
	gestureState.moveX=0;
	gestureState.moveY=0;
	gestureState.x0=0;
	gestureState.y0=0;
	gestureState.dx=0;
	gestureState.dy=0;
	gestureState.vx=0;
	gestureState.vy=0;
	gestureState.numberActiveTouches=0;
	// All `gestureState` accounts for timeStamps up until:
	gestureState._accountsForMovesUpTo=0;
	},

	/**
	   * This is nuanced and is necessary. It is incorrect to continuously take all
	   * active *and* recently moved touches, find the centroid, and track how that
	   * result changes over time. Instead, we must take all recently moved
	   * touches, and calculate how the centroid has changed just for those
	   * recently moved touches, and append that change to an accumulator. This is
	   * to (at least) handle the case where the user is moving three fingers, and
	   * then one of the fingers stops but the other two continue.
	   *
	   * This is very different than taking all of the recently moved touches and
	   * storing their centroid as `dx/dy`. For correctness, we must *accumulate
	   * changes* in the centroid of recently moved touches.
	   *
	   * There is also some nuance with how we handle multiple moved touches in a
	   * single event. With the way `ReactNativeEventEmitter` dispatches touches as
	   * individual events, multiple touches generate two 'move' events, each of
	   * them triggering `onResponderMove`. But with the way `PanResponder` works,
	   * all of the gesture inference is performed on the first dispatch, since it
	   * looks at all of the touches (even the ones for which there hasn't been a
	   * native dispatch yet). Therefore, `PanResponder` does not call
	   * `onResponderMove` passed the first dispatch. This diverges from the
	   * typical responder callback pattern (without using `PanResponder`), but
	   * avoids more dispatches than necessary.
	   */
	_updateGestureStateOnMove:function _updateGestureStateOnMove(gestureState,touchHistory){
	gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
	gestureState.moveX=currentCentroidXOfTouchesChangedAfter(
	touchHistory,
	gestureState._accountsForMovesUpTo);

	gestureState.moveY=currentCentroidYOfTouchesChangedAfter(
	touchHistory,
	gestureState._accountsForMovesUpTo);

	var movedAfter=gestureState._accountsForMovesUpTo;
	var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
	var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
	var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
	var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
	var nextDX=gestureState.dx+(x-prevX);
	var nextDY=gestureState.dy+(y-prevY);

	// TODO: This must be filtered intelligently.
	var dt=
	touchHistory.mostRecentTimeStamp-gestureState._accountsForMovesUpTo;
	gestureState.vx=(nextDX-gestureState.dx)/dt;
	gestureState.vy=(nextDY-gestureState.dy)/dt;

	gestureState.dx=nextDX;
	gestureState.dy=nextDY;
	gestureState._accountsForMovesUpTo=touchHistory.mostRecentTimeStamp;
	},

	/**
	   * @param {object} config Enhanced versions of all of the responder callbacks
	   * that provide not only the typical `ResponderSyntheticEvent`, but also the
	   * `PanResponder` gesture state.  Simply replace the word `Responder` with
	   * `PanResponder` in each of the typical `onResponder*` callbacks. For
	   * example, the `config` object would look like:
	   *
	   *  - `onMoveShouldSetPanResponder: (e, gestureState) => {...}`
	   *  - `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`
	   *  - `onStartShouldSetPanResponder: (e, gestureState) => {...}`
	   *  - `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`
	   *  - `onPanResponderReject: (e, gestureState) => {...}`
	   *  - `onPanResponderGrant: (e, gestureState) => {...}`
	   *  - `onPanResponderStart: (e, gestureState) => {...}`
	   *  - `onPanResponderEnd: (e, gestureState) => {...}`
	   *  - `onPanResponderRelease: (e, gestureState) => {...}`
	   *  - `onPanResponderMove: (e, gestureState) => {...}`
	   *  - `onPanResponderTerminate: (e, gestureState) => {...}`
	   *  - `onPanResponderTerminationRequest: (e, gestureState) => {...}`
	   *  - `onShouldBlockNativeResponder: (e, gestureState) => {...}`
	   *
	   *  In general, for events that have capture equivalents, we update the
	   *  gestureState once in the capture phase and can use it in the bubble phase
	   *  as well.
	   *
	   *  Be careful with onStartShould* callbacks. They only reflect updated
	   *  `gestureState` for start/end events that bubble/capture to the Node.
	   *  Once the node is the responder, you can rely on every start/end event
	   *  being processed by the gesture and `gestureState` being updated
	   *  accordingly. (numberActiveTouches) may not be totally accurate unless you
	   *  are the responder.
	   */
	create:function create(config){
	var gestureState={
	// Useful for debugging
	stateID:Math.random()};

	PanResponder._initializeGestureState(gestureState);
	var panHandlers={
	onStartShouldSetResponder:function onStartShouldSetResponder(e){
	return config.onStartShouldSetPanResponder===undefined?false:
	config.onStartShouldSetPanResponder(e,gestureState);
	},
	onMoveShouldSetResponder:function onMoveShouldSetResponder(e){
	return config.onMoveShouldSetPanResponder===undefined?false:
	config.onMoveShouldSetPanResponder(e,gestureState);
	},
	onStartShouldSetResponderCapture:function onStartShouldSetResponderCapture(e){
	// TODO: Actually, we should reinitialize the state any time
	// touches.length increases from 0 active to > 0 active.
	if(e.nativeEvent.touches){
	if(e.nativeEvent.touches.length===1){
	PanResponder._initializeGestureState(gestureState);
	}
	}else
	if(e.nativeEvent.originalEvent&&e.nativeEvent.originalEvent.type==='mousedown'){
	PanResponder._initializeGestureState(gestureState);
	}
	gestureState.numberActiveTouches=e.touchHistory.numberActiveTouches;
	return config.onStartShouldSetPanResponderCapture!==undefined?
	config.onStartShouldSetPanResponderCapture(e,gestureState):false;
	},

	onMoveShouldSetResponderCapture:function onMoveShouldSetResponderCapture(e){
	var touchHistory=e.touchHistory;
	// Responder system incorrectly dispatches should* to current responder
	// Filter out any touch moves past the first one - we would have
	// already processed multi-touch geometry during the first event.
	if(gestureState._accountsForMovesUpTo===touchHistory.mostRecentTimeStamp){
	return false;
	}
	PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
	return config.onMoveShouldSetPanResponderCapture?
	config.onMoveShouldSetPanResponderCapture(e,gestureState):false;
	},

	onResponderGrant:function onResponderGrant(e){
	gestureState.x0=currentCentroidX(e.touchHistory);
	gestureState.y0=currentCentroidY(e.touchHistory);
	gestureState.dx=0;
	gestureState.dy=0;
	config.onPanResponderGrant&&config.onPanResponderGrant(e,gestureState);
	// TODO: t7467124 investigate if this can be removed
	return config.onShouldBlockNativeResponder===undefined?true:
	config.onShouldBlockNativeResponder();
	},

	onResponderReject:function onResponderReject(e){
	config.onPanResponderReject&&config.onPanResponderReject(e,gestureState);
	},

	onResponderRelease:function onResponderRelease(e){
	config.onPanResponderRelease&&config.onPanResponderRelease(e,gestureState);
	PanResponder._initializeGestureState(gestureState);
	},

	onResponderStart:function onResponderStart(e){
	var touchHistory=e.touchHistory;
	gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
	config.onPanResponderStart&&config.onPanResponderStart(e,gestureState);
	},

	onResponderMove:function onResponderMove(e){
	var touchHistory=e.touchHistory;
	// Guard against the dispatch of two touch moves when there are two
	// simultaneously changed touches.
	if(gestureState._accountsForMovesUpTo===touchHistory.mostRecentTimeStamp){
	return;
	}
	// Filter out any touch moves past the first one - we would have
	// already processed multi-touch geometry during the first event.
	PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
	config.onPanResponderMove&&config.onPanResponderMove(e,gestureState);
	},

	onResponderEnd:function onResponderEnd(e){
	var touchHistory=e.touchHistory;
	gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
	config.onPanResponderEnd&&config.onPanResponderEnd(e,gestureState);
	},

	onResponderTerminate:function onResponderTerminate(e){
	config.onPanResponderTerminate&&
	config.onPanResponderTerminate(e,gestureState);
	PanResponder._initializeGestureState(gestureState);
	},

	onResponderTerminationRequest:function onResponderTerminationRequest(e){
	return config.onPanResponderTerminationRequest===undefined?true:
	config.onPanResponderTerminationRequest(e,gestureState);
	}};

	return{panHandlers:panHandlers};
	}};


	module.exports=PanResponder;

/***/ },
/* 431 */
/***/ function(module, exports) {

	/**
	 * @providesModule TouchHistoryMath
	 */

	'use strict';

	var TouchHistoryMath = {
	  /**
	   * This code is optimized and not intended to look beautiful. This allows
	   * computing of touch centroids that have moved after `touchesChangedAfter`
	   * timeStamp. You can compute the current centroid involving all touches
	   * moves after `touchesChangedAfter`, or you can compute the previous
	   * centroid of all touches that were moved after `touchesChangedAfter`.
	   *
	   * @param {TouchHistoryMath} touchHistory Standard Responder touch track
	   * data.
	   * @param {number} touchesChangedAfter timeStamp after which moved touches
	   * are considered "actively moving" - not just "active".
	   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.
	   * @param {boolean} ofCurrent Compute current centroid for actively moving
	   * touches vs. previous centroid of now actively moving touches.
	   * @return {number} value of centroid in specified dimension.
	   */
	  centroidDimension: function (touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
	    var touchBank = touchHistory.touchBank;
	    var total = 0;
	    var count = 0;

	    var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

	    if (oneTouchData !== null) {
	      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
	        total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
	        count = 1;
	      }
	    } else {
	      for (var i = 0; i < touchBank.length; i++) {
	        var touchTrack = touchBank[i];
	        if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
	          var toAdd; // Yuck, program temporarily in invalid state.
	          if (ofCurrent && isXAxis) {
	            toAdd = touchTrack.currentPageX;
	          } else if (ofCurrent && !isXAxis) {
	            toAdd = touchTrack.currentPageY;
	          } else if (!ofCurrent && isXAxis) {
	            toAdd = touchTrack.previousPageX;
	          } else {
	            toAdd = touchTrack.previousPageY;
	          }
	          total += toAdd;
	          count++;
	        }
	      }
	    }
	    return count > 0 ? total / count : TouchHistoryMath.noCentroid;
	  },

	  currentCentroidXOfTouchesChangedAfter: function (touchHistory, touchesChangedAfter) {
	    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, // isXAxis
	    true // ofCurrent
	    );
	  },

	  currentCentroidYOfTouchesChangedAfter: function (touchHistory, touchesChangedAfter) {
	    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, // isXAxis
	    true // ofCurrent
	    );
	  },

	  previousCentroidXOfTouchesChangedAfter: function (touchHistory, touchesChangedAfter) {
	    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, // isXAxis
	    false // ofCurrent
	    );
	  },

	  previousCentroidYOfTouchesChangedAfter: function (touchHistory, touchesChangedAfter) {
	    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, // isXAxis
	    false // ofCurrent
	    );
	  },

	  currentCentroidX: function (touchHistory) {
	    return TouchHistoryMath.centroidDimension(touchHistory, 0, // touchesChangedAfter
	    true, // isXAxis
	    true // ofCurrent
	    );
	  },

	  currentCentroidY: function (touchHistory) {
	    return TouchHistoryMath.centroidDimension(touchHistory, 0, // touchesChangedAfter
	    false, // isXAxis
	    true // ofCurrent
	    );
	  },

	  noCentroid: -1
	};

	module.exports = TouchHistoryMath;

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**
	 * Copyright (c) 2015-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */

	var _Dimensions=__webpack_require__(425);var _Dimensions2=_interopRequireDefault(_Dimensions);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	/**
	 * PixelRatio gives access to the device pixel density.
	 */var
	PixelRatio=function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',
	/**
	   * Returns the device pixel density.
	   */value:function get()
	{
	return _Dimensions2.default.get('window').scale;
	}

	/**
	   * No equivalent for Web
	   */},{key:'getFontScale',value:function getFontScale()
	{
	return _Dimensions2.default.get('window').fontScale||PixelRatio.get();
	}

	/**
	   * Converts a layout size (dp) to pixel size (px).
	   * Guaranteed to return an integer number.
	   */},{key:'getPixelSizeForLayoutSize',value:function getPixelSizeForLayoutSize(
	layoutSize){
	return Math.round(layoutSize*PixelRatio.get());
	}

	/**
	   * Rounds a layout size (dp) to the nearest layout size that corresponds to
	   * an integer number of pixels. For example, on a device with a PixelRatio
	   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to
	   * exactly (8.33 * 3) = 25 pixels.
	   */},{key:'roundToNearestPixel',value:function roundToNearestPixel(
	layoutSize){
	var ratio=PixelRatio.get();
	return Math.round(layoutSize*ratio)/ratio;
	}}]);return PixelRatio;}();


	module.exports=PixelRatio;

/***/ },
/* 433 */
/***/ function(module, exports) {

	var Platform={
	OS:'web',
	select:function select(obj){return obj.web;}};


	module.exports=Platform;

/***/ },
/* 434 */
/***/ function(module, exports) {

	var _vibrate=function _vibrate(pattern){
	if('vibrate'in window.navigator){
	if(typeof pattern==='number'||Array.isArray(pattern)){
	window.navigator.vibrate(pattern);
	}else{
	throw new Error('Vibration pattern should be a number or array');
	}
	}
	};

	var Vibration={
	cancel:function cancel(){
	_vibrate(0);
	},
	vibrate:function vibrate(pattern){
	_vibrate(pattern);
	}};


	module.exports=Vibration;

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _Animated=__webpack_require__(175);var _Animated2=_interopRequireDefault(_Animated);
	var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _Easing=__webpack_require__(246);var _Easing2=_interopRequireDefault(_Easing);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var rotationInterpolation={inputRange:[0,1],outputRange:['0deg','360deg']};var

	ActivityIndicator=function(_Component){_inherits(ActivityIndicator,_Component);

















	function ActivityIndicator(props){_classCallCheck(this,ActivityIndicator);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(ActivityIndicator).call(this,
	props));
	_this.state={
	animation:new _Animated2.default.Value(0)};return _this;

	}_createClass(ActivityIndicator,[{key:'componentDidMount',value:function componentDidMount()

	{
	this._manageAnimation();
	}},{key:'componentDidUpdate',value:function componentDidUpdate()

	{
	this._manageAnimation();
	}},{key:'render',value:function render()

	{var _props=







	this.props;var animating=_props.animating;var color=_props.color;var hidesWhenStopped=_props.hidesWhenStopped;var size=_props.size;var style=_props.style;var other=_objectWithoutProperties(_props,['animating','color','hidesWhenStopped','size','style']);var

	animation=this.state.animation;

	var svg=
	_react2.default.createElement('svg',{height:'100%',viewBox:'0 0 32 32',width:'100%'},
	_react2.default.createElement('circle',{
	cx:'16',
	cy:'16',
	fill:'none',
	r:'14',
	strokeWidth:'4',
	style:{
	stroke:color,
	opacity:0.2}}),


	_react2.default.createElement('circle',{
	cx:'16',
	cy:'16',
	fill:'none',
	r:'14',
	strokeWidth:'4',
	style:{
	stroke:color,
	strokeDasharray:80,
	strokeDashoffset:60}}));





	return(
	_react2.default.createElement(_View2.default,_extends({},other,{
	accessibilityRole:'progressbar',
	'aria-valuemax':'1',
	'aria-valuemin':'0',
	style:[
	styles.container,
	style,
	size&&{height:size,width:size}]}),


	_react2.default.createElement(_Animated2.default.View,{
	children:svg,
	style:[
	indicatorStyles[size],
	hidesWhenStopped&&!animating&&styles.hidesWhenStopped,
	{
	transform:[
	{rotate:animation.interpolate(rotationInterpolation)}]}]})));






	}},{key:'_manageAnimation',value:function _manageAnimation()

	{var
	animation=this.state.animation;

	var cycleAnimation=function cycleAnimation(){
	animation.setValue(0);
	_Animated2.default.timing(animation,{
	duration:750,
	easing:_Easing2.default.inOut(_Easing2.default.linear),
	toValue:1}).
	start(function(event){
	if(event.finished){
	cycleAnimation();
	}
	});
	};

	if(this.props.animating){
	cycleAnimation();
	}else{
	animation.stopAnimation();
	}
	}}]);return ActivityIndicator;}(_react.Component);ActivityIndicator.displayName='ActivityIndicator';ActivityIndicator.propTypes=_extends({},_View2.default.propTypes,{animating:_react.PropTypes.bool,color:_react.PropTypes.string,hidesWhenStopped:_react.PropTypes.bool,size:_react.PropTypes.oneOfType([_react.PropTypes.oneOf(['small','large']),_react.PropTypes.number])});ActivityIndicator.defaultProps={animating:true,color:'#1976D2',hidesWhenStopped:true,size:'small'};


	var styles=_StyleSheet2.default.create({
	container:{
	alignItems:'center',
	justifyContent:'center'},

	hidesWhenStopped:{
	visibility:'hidden'}});



	var indicatorStyles=_StyleSheet2.default.create({
	small:{
	width:20,
	height:20},

	large:{
	width:36,
	height:36}});



	module.exports=(0,_applyNativeMethods2.default)(ActivityIndicator);

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _ListViewDataSource=__webpack_require__(437);var _ListViewDataSource2=_interopRequireDefault(_ListViewDataSource);
	var _ListViewPropTypes=__webpack_require__(439);var _ListViewPropTypes2=_interopRequireDefault(_ListViewPropTypes);
	var _pick=__webpack_require__(445);var _pick2=_interopRequireDefault(_pick);
	var _ScrollView=__webpack_require__(440);var _ScrollView2=_interopRequireDefault(_ScrollView);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

	ListView=function(_Component){_inherits(ListView,_Component);













	function ListView(props){_classCallCheck(this,ListView);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(ListView).call(this,
	props));
	_this.state={
	curRenderedRowsCount:_this.props.initialListSize,
	highlightedRow:{}};

	_this.onRowHighlighted=function(sectionId,rowId){return _this._onRowHighlighted(sectionId,rowId);};return _this;
	}_createClass(ListView,[{key:'getScrollResponder',value:function getScrollResponder()

	{
	return this._scrollViewRef&&this._scrollViewRef.getScrollResponder();
	}},{key:'scrollTo',value:function scrollTo()

	{var _scrollViewRef;
	return this._scrollViewRef&&(_scrollViewRef=this._scrollViewRef).scrollTo.apply(_scrollViewRef,arguments);
	}},{key:'setNativeProps',value:function setNativeProps(

	props){
	return this._scrollViewRef&&this._scrollViewRef.setNativeProps(props);
	}},{key:'_onRowHighlighted',value:function _onRowHighlighted(

	sectionId,rowId){
	this.setState({highlightedRow:{sectionId:sectionId,rowId:rowId}});
	}},{key:'render',value:function render()

	{
	var dataSource=this.props.dataSource;
	var header=this.props.renderHeader?this.props.renderHeader():undefined;
	var footer=this.props.renderFooter?this.props.renderFooter():undefined;

	// render sections and rows
	var children=[];
	var sections=dataSource.rowIdentities;
	var renderRow=this.props.renderRow;
	var renderSectionHeader=this.props.renderSectionHeader;
	var renderSeparator=this.props.renderSeparator;
	for(var sectionIdx=0,sectionCnt=sections.length;sectionIdx<sectionCnt;sectionIdx++){
	var rows=sections[sectionIdx];
	var sectionId=dataSource.sectionIdentities[sectionIdx];

	// render optional section header
	if(renderSectionHeader){
	var section=dataSource.getSectionHeaderData(sectionIdx);
	var key='s_'+sectionId;
	var child=_react2.default.createElement(_View2.default,{key:key},renderSectionHeader(section,sectionId));
	children.push(child);
	}

	// render rows
	for(var rowIdx=0,rowCnt=rows.length;rowIdx<rowCnt;rowIdx++){
	var rowId=rows[rowIdx];
	var row=dataSource.getRowData(sectionIdx,rowIdx);
	var _key='r_'+sectionId+'_'+rowId;
	var _child=_react2.default.createElement(_View2.default,{key:_key},renderRow(row,sectionId,rowId,this.onRowHighlighted));
	children.push(_child);

	// render optional separator
	if(renderSeparator&&(rowIdx!==rows.length-1||sectionIdx===sections.length-1)){
	var adjacentRowHighlighted=
	this.state.highlightedRow.sectionID===sectionId&&(
	this.state.highlightedRow.rowID===rowId||
	this.state.highlightedRow.rowID===rows[rowIdx+1]);
	var separator=renderSeparator(sectionId,rowId,adjacentRowHighlighted);
	children.push(separator);
	}
	}
	}

	var props=(0,_pick2.default)(_ScrollView2.default.propTypes,this.props);

	return _react2.default.cloneElement(this.props.renderScrollComponent(props),{
	ref:this._setScrollViewRef},
	header,children,footer);
	}},{key:'_setScrollViewRef',value:function _setScrollViewRef(

	component){
	this._scrollViewRef=component;
	}}]);return ListView;}(_react.Component);ListView.propTypes=_ListViewPropTypes2.default;ListView.defaultProps={initialListSize:10,pageSize:1,renderScrollComponent:function renderScrollComponent(props){return _react2.default.createElement(_ScrollView2.default,props);},scrollRenderAheadDistance:1000,onEndReachedThreshold:1000,stickyHeaderIndices:[]};ListView.DataSource=_ListViewDataSource2.default;


	module.exports=(0,_applyNativeMethods2.default)(ListView);

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015, Facebook, Inc.  All rights reserved.
	 *
	 * Facebook, Inc. ("Facebook") owns all right, title and interest, including
	 * all intellectual property and other proprietary rights, in and to the React
	 * Native CustomComponents software (the "Software").  Subject to your
	 * compliance with these terms, you are hereby granted a non-exclusive,
	 * worldwide, royalty-free copyright license to (1) use and copy the Software;
	 * and (2) reproduce and distribute the Software as part of your own software
	 * ("Your Software").  Facebook reserves all rights not expressly granted to
	 * you in this license agreement.
	 *
	 * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED "AS IS" AND ANY EXPRESS
	 * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
	 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.
	 * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR
	 * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
	 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
	 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
	 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF
	 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 *
	 * @providesModule ListViewDataSource
	 * @typechecks
	 * 
	 */
	'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

	var invariant=__webpack_require__(7);
	var isEmpty=__webpack_require__(438);
	var warning=__webpack_require__(10);

	function defaultGetRowData(
	dataBlob,
	sectionID,
	rowID)
	{
	return dataBlob[sectionID][rowID];
	}

	function defaultGetSectionHeaderData(
	dataBlob,
	sectionID)
	{
	return dataBlob[sectionID];
	}










	/**
	 * Provides efficient data processing and access to the
	 * `ListView` component.  A `ListViewDataSource` is created with functions for
	 * extracting data from the input blob, and comparing elements (with default
	 * implementations for convenience).  The input blob can be as simple as an
	 * array of strings, or an object with rows nested inside section objects.
	 *
	 * To update the data in the datasource, use `cloneWithRows` (or
	 * `cloneWithRowsAndSections` if you care about sections).  The data in the
	 * data source is immutable, so you can't modify it directly.  The clone methods
	 * suck in the new data and compute a diff for each row so ListView knows
	 * whether to re-render it or not.
	 *
	 * In this example, a component receives data in chunks, handled by
	 * `_onDataArrived`, which concats the new data onto the old data and updates the
	 * data source.  We use `concat` to create a new array - mutating `this._data`,
	 * e.g. with `this._data.push(newRowData)`, would be an error. `_rowHasChanged`
	 * understands the shape of the row data and knows how to efficiently compare
	 * it.
	 *
	 * ```
	 * getInitialState: function() {
	 *   var ds = new ListViewDataSource({rowHasChanged: this._rowHasChanged});
	 *   return {ds};
	 * },
	 * _onDataArrived(newData) {
	 *   this._data = this._data.concat(newData);
	 *   this.setState({
	 *     ds: this.state.ds.cloneWithRows(this._data)
	 *   });
	 * }
	 * ```
	 */var

	ListViewDataSource=function(){

	/**
	   * You can provide custom extraction and `hasChanged` functions for section
	   * headers and rows.  If absent, data will be extracted with the
	   * `defaultGetRowData` and `defaultGetSectionHeaderData` functions.
	   *
	   * The default extractor expects data of one of the following forms:
	   *
	   *      { sectionID_1: { rowID_1: <rowData1>, ... }, ... }
	   *
	   *    or
	   *
	   *      { sectionID_1: [ <rowData1>, <rowData2>, ... ], ... }
	   *
	   *    or
	   *
	   *      [ [ <rowData1>, <rowData2>, ... ], ... ]
	   *
	   * The constructor takes in a params argument that can contain any of the
	   * following:
	   *
	   * - getRowData(dataBlob, sectionID, rowID);
	   * - getSectionHeaderData(dataBlob, sectionID);
	   * - rowHasChanged(prevRowData, nextRowData);
	   * - sectionHeaderHasChanged(prevSectionData, nextSectionData);
	   */
	function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
	invariant(
	params&&typeof params.rowHasChanged==='function',
	'Must provide a rowHasChanged function.');

	this._rowHasChanged=params.rowHasChanged;
	this._getRowData=params.getRowData||defaultGetRowData;
	this._sectionHeaderHasChanged=params.sectionHeaderHasChanged;
	this._getSectionHeaderData=
	params.getSectionHeaderData||defaultGetSectionHeaderData;

	this._dataBlob=null;
	this._dirtyRows=[];
	this._dirtySections=[];
	this._cachedRowCount=0;

	// These two private variables are accessed by outsiders because ListView
	// uses them to iterate over the data in this class.
	this.rowIdentities=[];
	this.sectionIdentities=[];
	}

	/**
	   * Clones this `ListViewDataSource` with the specified `dataBlob` and
	   * `rowIdentities`. The `dataBlob` is just an arbitrary blob of data. At
	   * construction an extractor to get the interesting information was defined
	   * (or the default was used).
	   *
	   * The `rowIdentities` is is a 2D array of identifiers for rows.
	   * ie. [['a1', 'a2'], ['b1', 'b2', 'b3'], ...].  If not provided, it's
	   * assumed that the keys of the section data are the row identities.
	   *
	   * Note: This function does NOT clone the data in this data source. It simply
	   * passes the functions defined at construction to a new data source with
	   * the data specified. If you wish to maintain the existing data you must
	   * handle merging of old and new data separately and then pass that into
	   * this function as the `dataBlob`.
	   */_createClass(ListViewDataSource,[{key:'cloneWithRows',value:function cloneWithRows(

	dataBlob,
	rowIdentities)
	{
	var rowIds=rowIdentities?[rowIdentities]:null;
	if(!this._sectionHeaderHasChanged){
	this._sectionHeaderHasChanged=function(){return false;};
	}
	return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);
	}

	/**
	   * This performs the same function as the `cloneWithRows` function but here
	   * you also specify what your `sectionIdentities` are. If you don't care
	   * about sections you should safely be able to use `cloneWithRows`.
	   *
	   * `sectionIdentities` is an array of identifiers for  sections.
	   * ie. ['s1', 's2', ...].  If not provided, it's assumed that the
	   * keys of dataBlob are the section identities.
	   *
	   * Note: this returns a new object!
	   */},{key:'cloneWithRowsAndSections',value:function cloneWithRowsAndSections(

	dataBlob,
	sectionIdentities,
	rowIdentities)
	{
	invariant(
	typeof this._sectionHeaderHasChanged==='function',
	'Must provide a sectionHeaderHasChanged function with section data.');

	var newSource=new ListViewDataSource({
	getRowData:this._getRowData,
	getSectionHeaderData:this._getSectionHeaderData,
	rowHasChanged:this._rowHasChanged,
	sectionHeaderHasChanged:this._sectionHeaderHasChanged});

	newSource._dataBlob=dataBlob;
	if(sectionIdentities){
	newSource.sectionIdentities=sectionIdentities;
	}else{
	newSource.sectionIdentities=Object.keys(dataBlob);
	}
	if(rowIdentities){
	newSource.rowIdentities=rowIdentities;
	}else{
	newSource.rowIdentities=[];
	newSource.sectionIdentities.forEach(function(sectionID){
	newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
	});
	}
	newSource._cachedRowCount=countRows(newSource.rowIdentities);

	newSource._calculateDirtyArrays(
	this._dataBlob,
	this.sectionIdentities,
	this.rowIdentities);


	return newSource;
	}},{key:'getRowCount',value:function getRowCount()

	{
	return this._cachedRowCount;
	}

	/**
	   * Returns if the row is dirtied and needs to be rerendered
	   */},{key:'rowShouldUpdate',value:function rowShouldUpdate(
	sectionIndex,rowIndex){
	var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
	warning(needsUpdate!==undefined,
	'missing dirtyBit for section, row: '+sectionIndex+', '+rowIndex);
	return needsUpdate;
	}

	/**
	   * Gets the data required to render the row.
	   */},{key:'getRowData',value:function getRowData(
	sectionIndex,rowIndex){
	var sectionID=this.sectionIdentities[sectionIndex];
	var rowID=this.rowIdentities[sectionIndex][rowIndex];
	warning(
	sectionID!==undefined&&rowID!==undefined,
	'rendering invalid section, row: '+sectionIndex+', '+rowIndex);

	return this._getRowData(this._dataBlob,sectionID,rowID);
	}

	/**
	   * Gets the rowID at index provided if the dataSource arrays were flattened,
	   * or null of out of range indexes.
	   */},{key:'getRowIDForFlatIndex',value:function getRowIDForFlatIndex(
	index){
	var accessIndex=index;
	for(var ii=0;ii<this.sectionIdentities.length;ii++){
	if(accessIndex>=this.rowIdentities[ii].length){
	accessIndex-=this.rowIdentities[ii].length;
	}else{
	return this.rowIdentities[ii][accessIndex];
	}
	}
	return null;
	}

	/**
	   * Gets the sectionID at index provided if the dataSource arrays were flattened,
	   * or null for out of range indexes.
	   */},{key:'getSectionIDForFlatIndex',value:function getSectionIDForFlatIndex(
	index){
	var accessIndex=index;
	for(var ii=0;ii<this.sectionIdentities.length;ii++){
	if(accessIndex>=this.rowIdentities[ii].length){
	accessIndex-=this.rowIdentities[ii].length;
	}else{
	return this.sectionIdentities[ii];
	}
	}
	return null;
	}

	/**
	   * Returns an array containing the number of rows in each section
	   */},{key:'getSectionLengths',value:function getSectionLengths()
	{
	var results=[];
	for(var ii=0;ii<this.sectionIdentities.length;ii++){
	results.push(this.rowIdentities[ii].length);
	}
	return results;
	}

	/**
	   * Returns if the section header is dirtied and needs to be rerendered
	   */},{key:'sectionHeaderShouldUpdate',value:function sectionHeaderShouldUpdate(
	sectionIndex){
	var needsUpdate=this._dirtySections[sectionIndex];
	warning(needsUpdate!==undefined,
	'missing dirtyBit for section: '+sectionIndex);
	return needsUpdate;
	}

	/**
	   * Gets the data required to render the section header
	   */},{key:'getSectionHeaderData',value:function getSectionHeaderData(
	sectionIndex){
	if(!this._getSectionHeaderData){
	return null;
	}
	var sectionID=this.sectionIdentities[sectionIndex];
	warning(sectionID!==undefined,
	'renderSection called on invalid section: '+sectionIndex);
	return this._getSectionHeaderData(this._dataBlob,sectionID);
	}

	/**
	   * Private members and methods.
	   */











	// These two 'protected' variables are accessed by ListView to iterate over
	// the data in this class.
	},{key:'_calculateDirtyArrays',value:function _calculateDirtyArrays(



	prevDataBlob,
	prevSectionIDs,
	prevRowIDs)
	{
	// construct a hashmap of the existing (old) id arrays
	var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
	var prevRowsHash={};
	for(var ii=0;ii<prevRowIDs.length;ii++){
	var sectionID=prevSectionIDs[ii];
	warning(
	!prevRowsHash[sectionID],
	'SectionID appears more than once: '+sectionID);

	prevRowsHash[sectionID]=keyedDictionaryFromArray(prevRowIDs[ii]);
	}

	// compare the 2 identity array and get the dirtied rows
	this._dirtySections=[];
	this._dirtyRows=[];

	var dirty;
	for(var sIndex=0;sIndex<this.sectionIdentities.length;sIndex++){
	var sectionID=this.sectionIdentities[sIndex];
	// dirty if the sectionHeader is new or _sectionHasChanged is true
	dirty=!prevSectionsHash[sectionID];
	var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
	if(!dirty&&sectionHeaderHasChanged){
	dirty=sectionHeaderHasChanged(
	this._getSectionHeaderData(prevDataBlob,sectionID),
	this._getSectionHeaderData(this._dataBlob,sectionID));

	}
	this._dirtySections.push(!!dirty);

	this._dirtyRows[sIndex]=[];
	for(var rIndex=0;rIndex<this.rowIdentities[sIndex].length;rIndex++){
	var rowID=this.rowIdentities[sIndex][rIndex];
	// dirty if the section is new, row is new or _rowHasChanged is true
	dirty=
	!prevSectionsHash[sectionID]||
	!prevRowsHash[sectionID][rowID]||
	this._rowHasChanged(
	this._getRowData(prevDataBlob,sectionID,rowID),
	this._getRowData(this._dataBlob,sectionID,rowID));

	this._dirtyRows[sIndex].push(!!dirty);
	}
	}
	}}]);return ListViewDataSource;}();


	function countRows(allRowIDs){
	var totalRows=0;
	for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
	var rowIDs=allRowIDs[sectionIdx];
	totalRows+=rowIDs.length;
	}
	return totalRows;
	}

	function keyedDictionaryFromArray(arr){
	if(isEmpty(arr)){
	return{};
	}
	var result={};
	for(var ii=0;ii<arr.length;ii++){
	var key=arr[ii];
	warning(!result[key],'Value appears more than once in array: '+key);
	result[key]=true;
	}
	return result;
	}


	module.exports=ListViewDataSource;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* eslint-disable fb-www/typeof-undefined */
	/* eslint-disable no-unused-vars */

	var invariant = __webpack_require__(7);

	/**
	 * Checks if a value is empty.
	 */
	function isEmpty(value) {
	  if (Array.isArray(value)) {
	    return value.length === 0;
	  } else if (typeof value === 'object') {
	    if (value) {
	      !(!isIterable(value) || value.size === undefined) ?  false ? invariant(false, 'isEmpty() does not support iterable collections.') : invariant(false) : void 0;
	      for (var _ in value) {
	        return false;
	      }
	    }
	    return true;
	  } else {
	    return !value;
	  }
	}

	function isIterable(value) {
	  if (typeof Symbol === 'undefined') {
	    return false;
	  }
	  return value[Symbol.iterator];
	}

	module.exports = isEmpty;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _ListViewDataSource=__webpack_require__(437);var _ListViewDataSource2=_interopRequireDefault(_ListViewDataSource);
	var _react=__webpack_require__(1);
	var _ScrollView=__webpack_require__(440);var _ScrollView2=_interopRequireDefault(_ScrollView);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=_extends({},


	_ScrollView2.default.propTypes,{
	dataSource:_react.PropTypes.instanceOf(_ListViewDataSource2.default).isRequired,
	renderSeparator:_react.PropTypes.func,
	renderRow:_react.PropTypes.func.isRequired,
	initialListSize:_react.PropTypes.number,
	onEndReached:_react.PropTypes.func,
	onEndReachedThreshold:_react.PropTypes.number,
	pageSize:_react.PropTypes.number,
	renderFooter:_react.PropTypes.func,
	renderHeader:_react.PropTypes.func,
	renderSectionHeader:_react.PropTypes.func,
	renderScrollComponent:_react.PropTypes.func.isRequired,
	scrollRenderAheadDistance:_react.PropTypes.number,
	onChangeVisibleRows:_react.PropTypes.func,
	removeClippedSubviews:_react.PropTypes.bool,
	stickyHeaderIndices:_react.PropTypes.arrayOf(_react.PropTypes.number)});

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};/**
	 * Copyright (c) 2016-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */

	var _dismissKeyboard=__webpack_require__(441);var _dismissKeyboard2=_interopRequireDefault(_dismissKeyboard);
	var _invariant=__webpack_require__(7);var _invariant2=_interopRequireDefault(_invariant);
	var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);
	var _ScrollResponder=__webpack_require__(443);var _ScrollResponder2=_interopRequireDefault(_ScrollResponder);
	var _ScrollViewBase=__webpack_require__(444);var _ScrollViewBase2=_interopRequireDefault(_ScrollViewBase);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _StyleSheetPropType=__webpack_require__(305);var _StyleSheetPropType2=_interopRequireDefault(_StyleSheetPropType);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _ViewStylePropTypes=__webpack_require__(303);var _ViewStylePropTypes2=_interopRequireDefault(_ViewStylePropTypes);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}

	/* eslint-disable react/prefer-es6-class */
	var ScrollView=_react2.default.createClass({displayName:'ScrollView',
	propTypes:_extends({},
	_View2.default.propTypes,{
	children:_View2.default.propTypes.children,
	contentContainerStyle:(0,_StyleSheetPropType2.default)(_ViewStylePropTypes2.default),
	horizontal:_react.PropTypes.bool,
	keyboardDismissMode:_react.PropTypes.oneOf(['none','interactive','on-drag']),
	onContentSizeChange:_react.PropTypes.func,
	onScroll:_react.PropTypes.func,
	refreshControl:_react.PropTypes.element,
	scrollEnabled:_react.PropTypes.bool,
	scrollEventThrottle:_react.PropTypes.number,
	style:(0,_StyleSheetPropType2.default)(_ViewStylePropTypes2.default)}),


	mixins:[_ScrollResponder2.default.Mixin],

	getInitialState:function getInitialState(){
	return this.scrollResponderMixinGetInitialState();
	},

	setNativeProps:function setNativeProps(props){
	this._scrollViewRef.setNativeProps(props);
	},

	/**
	   * Returns a reference to the underlying scroll responder, which supports
	   * operations like `scrollTo`. All ScrollView-like components should
	   * implement this method so that they can be composed while providing access
	   * to the underlying scroll responder's methods.
	   */
	getScrollResponder:function getScrollResponder(){
	return this;
	},

	getScrollableNode:function getScrollableNode(){
	return _reactDom2.default.findDOMNode(this._scrollViewRef);
	},

	getInnerViewNode:function getInnerViewNode(){
	return _reactDom2.default.findDOMNode(this._innerViewRef);
	},

	/**
	   * Scrolls to a given x, y offset, either immediately or with a smooth animation.
	   * Syntax:
	   *
	   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})
	   *
	   * Note: The weird argument signature is due to the fact that, for historical reasons,
	   * the function also accepts separate arguments as as alternative to the options object.
	   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.
	   */
	scrollTo:function scrollTo(
	y,
	x,
	animated)
	{
	if(typeof y==='number'){
	console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');
	}else{var _ref=
	y||{};x=_ref.x;y=_ref.y;animated=_ref.animated;
	}

	this.getScrollResponder().scrollResponderScrollTo({x:x||0,y:y||0,animated:animated!==false});
	},

	/**
	   * Deprecated, do not use.
	   */
	scrollWithoutAnimationTo:function scrollWithoutAnimationTo(){var y=arguments.length<=0||arguments[0]===undefined?0:arguments[0];var x=arguments.length<=1||arguments[1]===undefined?0:arguments[1];
	console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
	this.scrollTo({x:x,y:y,animated:false});
	},

	render:function render(){var _this=this;var _props=








	this.props;var contentContainerStyle=_props.contentContainerStyle;var horizontal=_props.horizontal;var keyboardDismissMode=_props.keyboardDismissMode;var onContentSizeChange=_props.onContentSizeChange;var onScroll=_props.onScroll;var refreshControl=_props.refreshControl;var other=_objectWithoutProperties(_props,['contentContainerStyle','horizontal','keyboardDismissMode','onContentSizeChange','onScroll','refreshControl']);

	if(false){(function(){
	var style=_StyleSheet2.default.flatten(_this.props.style);
	var childLayoutProps=['alignItems','justifyContent'].filter(function(prop){return style&&style[prop]!==undefined;});
	(0,_invariant2.default)(
	childLayoutProps.length===0,
	'ScrollView child layout ('+JSON.stringify(childLayoutProps)+') '+
	'must be applied through the contentContainerStyle prop.');})();

	}

	var contentSizeChangeProps={};
	if(onContentSizeChange){
	contentSizeChangeProps={
	onLayout:this._handleContentOnLayout};

	}

	var contentContainer=
	_react2.default.createElement(_View2.default,_extends({},
	contentSizeChangeProps,{
	children:this.props.children,
	collapsable:false,
	ref:this._setInnerViewRef,
	style:[
	styles.contentContainer,
	horizontal&&styles.contentContainerHorizontal,
	contentContainerStyle]}));




	var props=_extends({},
	other,{
	style:[
	styles.base,
	horizontal&&styles.baseHorizontal,
	this.props.style],

	onTouchStart:this.scrollResponderHandleTouchStart,
	onTouchMove:this.scrollResponderHandleTouchMove,
	onTouchEnd:this.scrollResponderHandleTouchEnd,
	onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
	onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
	onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
	onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
	onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
	onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
	onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
	onScroll:this._handleScroll,
	onResponderGrant:this.scrollResponderHandleResponderGrant,
	onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
	onResponderTerminate:this.scrollResponderHandleTerminate,
	onResponderRelease:this.scrollResponderHandleResponderRelease,
	onResponderReject:this.scrollResponderHandleResponderReject});


	var ScrollViewClass=_ScrollViewBase2.default;

	(0,_invariant2.default)(
	ScrollViewClass!==undefined,
	'ScrollViewClass must not be undefined');


	if(refreshControl){
	return _react2.default.cloneElement(
	refreshControl,
	{style:props.style},
	_react2.default.createElement(ScrollViewClass,_extends({},props,{ref:this._setScrollViewRef,style:styles.base}),
	contentContainer));


	}

	return(
	_react2.default.createElement(ScrollViewClass,_extends({},props,{ref:this._setScrollViewRef,style:props.style}),
	contentContainer));


	},

	_handleContentOnLayout:function _handleContentOnLayout(e){var _e$nativeEvent$layout=
	e.nativeEvent.layout;var width=_e$nativeEvent$layout.width;var height=_e$nativeEvent$layout.height;
	this.props.onContentSizeChange(width,height);
	},

	_handleScroll:function _handleScroll(e){
	if(false){
	if(this.props.onScroll&&!this.props.scrollEventThrottle){
	console.log(
	'You specified `onScroll` on a <ScrollView> but not '+
	'`scrollEventThrottle`. You will only receive one event. '+
	'Using `16` you get all the events but be aware that it may '+
	'cause frame drops, use a bigger number if you don\'t need as '+
	'much precision.');

	}
	}

	if(this.props.keyboardDismissMode==='on-drag'){
	(0,_dismissKeyboard2.default)();
	}

	this.scrollResponderHandleScroll(e);
	},

	_setInnerViewRef:function _setInnerViewRef(component){
	this._innerViewRef=component;
	},

	_setScrollViewRef:function _setScrollViewRef(component){
	this._scrollViewRef=component;
	}});


	var styles=_StyleSheet2.default.create({
	base:{
	flex:1,
	overflowX:'hidden',
	overflowY:'auto',
	WebkitOverflowScrolling:'touch'},

	baseHorizontal:{
	flexDirection:'row',
	overflowX:'auto',
	overflowY:'hidden'},

	contentContainer:{
	flexGrow:1},

	contentContainerHorizontal:{
	flexDirection:'row'}});



	module.exports=ScrollView;

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	var _TextInputState=__webpack_require__(442);var _TextInputState2=_interopRequireDefault(_TextInputState);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	var dismissKeyboard=function dismissKeyboard(){
	_TextInputState2.default.blurTextInput(_TextInputState2.default.currentlyFocusedField());
	};

	module.exports=dismissKeyboard;

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	







	var _UIManager=__webpack_require__(262);var _UIManager2=_interopRequireDefault(_UIManager);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

	/**
	 * This class is responsible for coordinating the "focused"
	 * state for TextInputs. All calls relating to the keyboard
	 * should be funneled through here
	 */
	var TextInputState={
	/**
	   * Internal state
	   */
	_currentlyFocusedNode:null,

	/**
	   * Returns the ID of the currently focused text field, if one exists
	   * If no text field is focused it returns null
	   */
	currentlyFocusedField:function currentlyFocusedField(){
	return this._currentlyFocusedNode;
	},

	/**
	   * @param {Object} TextInputID id of the text field to focus
	   * Focuses the specified text field
	   * noop if the text field was already focused
	   */
	focusTextInput:function focusTextInput(textFieldNode){
	if(this._currentlyFocusedNode!==textFieldNode&&textFieldNode!==null){
	this._currentlyFocusedNode=textFieldNode;
	_UIManager2.default.focus(textFieldNode);
	}
	},

	/**
	   * @param {Object} textFieldNode id of the text field to focus
	   * Unfocuses the specified text field
	   * noop if it wasn't focused
	   */
	blurTextInput:function blurTextInput(textFieldNode){
	if(this._currentlyFocusedNode===textFieldNode&&textFieldNode!==null){
	this._currentlyFocusedNode=null;
	_UIManager2.default.blur(textFieldNode);
	}
	}};/**
	 * Copyright (c) 2016-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 */module.exports=TextInputState;

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ScrollResponder
	 * 
	 */
	'use strict';

	var Dimensions=__webpack_require__(425);
	var Platform=__webpack_require__(433);
	var React=__webpack_require__(1);
	var ReactDOM=__webpack_require__(47);
	// var Subscribable = require('../Subscribable');
	var TextInputState=__webpack_require__(442);
	var UIManager=__webpack_require__(262);

	// var { ScrollViewManager } = require('../../modules/NativeModules');

	var invariant=__webpack_require__(7);
	var warning=__webpack_require__(10);

	// type Component = React.Component

	/**
	 * Mixin that can be integrated in order to handle scrolling that plays well
	 * with `ResponderEventPlugin`. Integrate with your platform specific scroll
	 * views, or even your custom built (every-frame animating) scroll views so that
	 * all of these systems play well with the `ResponderEventPlugin`.
	 *
	 * iOS scroll event timing nuances:
	 * ===============================
	 *
	 *
	 * Scrolling without bouncing, if you touch down:
	 * -------------------------------
	 *
	 * 1. `onMomentumScrollBegin` (when animation begins after letting up)
	 *    ... physical touch starts ...
	 * 2. `onTouchStartCapture`   (when you press down to stop the scroll)
	 * 3. `onTouchStart`          (same, but bubble phase)
	 * 4. `onResponderRelease`    (when lifting up - you could pause forever before * lifting)
	 * 5. `onMomentumScrollEnd`
	 *
	 *
	 * Scrolling with bouncing, if you touch down:
	 * -------------------------------
	 *
	 * 1. `onMomentumScrollBegin` (when animation begins after letting up)
	 *    ... bounce begins ...
	 *    ... some time elapses ...
	 *    ... physical touch during bounce ...
	 * 2. `onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce)
	 * 3. `onTouchStartCapture`   (immediately after `onMomentumScrollEnd`)
	 * 4. `onTouchStart`          (same, but bubble phase)
	 * 5. `onTouchEnd`            (You could hold the touch start for a long time)
	 * 6. `onMomentumScrollBegin` (When releasing the view starts bouncing back)
	 *
	 * So when we receive an `onTouchStart`, how can we tell if we are touching
	 * *during* an animation (which then causes the animation to stop)? The only way
	 * to tell is if the `touchStart` occurred immediately after the
	 * `onMomentumScrollEnd`.
	 *
	 * This is abstracted out for you, so you can just call this.scrollResponderIsAnimating() if
	 * necessary
	 *
	 * `ScrollResponder` also includes logic for blurring a currently focused input
	 * if one is focused while scrolling. The `ScrollResponder` is a natural place
	 * to put this logic since it can support not dismissing the keyboard while
	 * scrolling, unless a recognized "tap"-like gesture has occurred.
	 *
	 * The public lifecycle API includes events for keyboard interaction, responder
	 * interaction, and scrolling (among others). The keyboard callbacks
	 * `onKeyboardWill/Did/*` are *global* events, but are invoked on scroll
	 * responder's props so that you can guarantee that the scroll responder's
	 * internal state has been updated accordingly (and deterministically) by
	 * the time the props callbacks are invoke. Otherwise, you would always wonder
	 * if the scroll responder is currently in a state where it recognizes new
	 * keyboard positions etc. If coordinating scrolling with keyboard movement,
	 * *always* use these hooks instead of listening to your own global keyboard
	 * events.
	 *
	 * Public keyboard lifecycle API: (props callbacks)
	 *
	 * Standard Keyboard Appearance Sequence:
	 *
	 *   this.props.onKeyboardWillShow
	 *   this.props.onKeyboardDidShow
	 *
	 * `onScrollResponderKeyboardDismissed` will be invoked if an appropriate
	 * tap inside the scroll responder's scrollable region was responsible
	 * for the dismissal of the keyboard. There are other reasons why the
	 * keyboard could be dismissed.
	 *
	 *   this.props.onScrollResponderKeyboardDismissed
	 *
	 * Standard Keyboard Hide Sequence:
	 *
	 *   this.props.onKeyboardWillHide
	 *   this.props.onKeyboardDidHide
	 */

	var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










	var ScrollResponderMixin={
	// mixins: [Subscribable.Mixin],
	scrollResponderMixinGetInitialState:function scrollResponderMixinGetInitialState(){
	return{
	isTouching:false,
	lastMomentumScrollBeginTime:0,
	lastMomentumScrollEndTime:0,

	// Reset to false every time becomes responder. This is used to:
	// - Determine if the scroll view has been scrolled and therefore should
	// refuse to give up its responder lock.
	// - Determine if releasing should dismiss the keyboard when we are in
	// tap-to-dismiss mode (!this.props.keyboardShouldPersistTaps).
	observedScrollSinceBecomingResponder:false,
	becameResponderWhileAnimating:false};

	},

	/**
	   * Invoke this from an `onScroll` event.
	   */
	scrollResponderHandleScrollShouldSetResponder:function scrollResponderHandleScrollShouldSetResponder(){
	return this.state.isTouching;
	},

	/**
	   * Merely touch starting is not sufficient for a scroll view to become the
	   * responder. Being the "responder" means that the very next touch move/end
	   * event will result in an action/movement.
	   *
	   * Invoke this from an `onStartShouldSetResponder` event.
	   *
	   * `onStartShouldSetResponder` is used when the next move/end will trigger
	   * some UI movement/action, but when you want to yield priority to views
	   * nested inside of the view.
	   *
	   * There may be some cases where scroll views actually should return `true`
	   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap
	   * that gives priority to nested views.
	   *
	   * - If a single tap on the scroll view triggers an action such as
	   *   recentering a map style view yet wants to give priority to interaction
	   *   views inside (such as dropped pins or labels), then we would return true
	   *   from this method when there is a single touch.
	   *
	   * - Similar to the previous case, if a two finger "tap" should trigger a
	   *   zoom, we would check the `touches` count, and if `>= 2`, we would return
	   *   true.
	   *
	   */
	scrollResponderHandleStartShouldSetResponder:function scrollResponderHandleStartShouldSetResponder(){
	return false;
	},

	/**
	   * There are times when the scroll view wants to become the responder
	   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way
	   * that *doesn't* give priority to nested views (hence the capture phase):
	   *
	   * - Currently animating.
	   * - Tapping anywhere that is not the focused input, while the keyboard is
	   *   up (which should dismiss the keyboard).
	   *
	   * Invoke this from an `onStartShouldSetResponderCapture` event.
	   */
	scrollResponderHandleStartShouldSetResponderCapture:function scrollResponderHandleStartShouldSetResponderCapture(e){
	// First see if we want to eat taps while the keyboard is up
	// var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
	// if (!this.props.keyboardShouldPersistTaps &&
	//   currentlyFocusedTextInput != null &&
	//   e.target !== currentlyFocusedTextInput) {
	//   return true;
	// }
	return this.scrollResponderIsAnimating();
	},

	/**
	   * Invoke this from an `onResponderReject` event.
	   *
	   * Some other element is not yielding its role as responder. Normally, we'd
	   * just disable the `UIScrollView`, but a touch has already began on it, the
	   * `UIScrollView` will not accept being disabled after that. The easiest
	   * solution for now is to accept the limitation of disallowing this
	   * altogether. To improve this, find a way to disable the `UIScrollView` after
	   * a touch has already started.
	   */
	scrollResponderHandleResponderReject:function scrollResponderHandleResponderReject(){
	warning(false,"ScrollView doesn't take rejection well - scrolls anyway");
	},

	/**
	   * We will allow the scroll view to give up its lock iff it acquired the lock
	   * during an animation. This is a very useful default that happens to satisfy
	   * many common user experiences.
	   *
	   * - Stop a scroll on the left edge, then turn that into an outer view's
	   *   backswipe.
	   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer
	   *   view dismiss.
	   * - However, without catching the scroll view mid-bounce (while it is
	   *   motionless), if you drag far enough for the scroll view to become
	   *   responder (and therefore drag the scroll view a bit), any backswipe
	   *   navigation of a swipe gesture higher in the view hierarchy, should be
	   *   rejected.
	   */
	scrollResponderHandleTerminationRequest:function scrollResponderHandleTerminationRequest(){
	return!this.state.observedScrollSinceBecomingResponder;
	},

	/**
	   * Invoke this from an `onTouchEnd` event.
	   *
	   * @param {SyntheticEvent} e Event.
	   */
	scrollResponderHandleTouchEnd:function scrollResponderHandleTouchEnd(e){
	var nativeEvent=e.nativeEvent;
	this.state.isTouching=nativeEvent.touches.length!==0;
	this.props.onTouchEnd&&this.props.onTouchEnd(e);
	},

	/**
	   * Invoke this from an `onResponderRelease` event.
	   */
	scrollResponderHandleResponderRelease:function scrollResponderHandleResponderRelease(e){
	this.props.onResponderRelease&&this.props.onResponderRelease(e);

	// By default scroll views will unfocus a textField
	// if another touch occurs outside of it
	var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
	if(!this.props.keyboardShouldPersistTaps&&
	currentlyFocusedTextInput!=null&&
	e.target!==currentlyFocusedTextInput&&
	!this.state.observedScrollSinceBecomingResponder&&
	!this.state.becameResponderWhileAnimating){
	this.props.onScrollResponderKeyboardDismissed&&
	this.props.onScrollResponderKeyboardDismissed(e);
	TextInputState.blurTextInput(currentlyFocusedTextInput);
	}
	},

	scrollResponderHandleScroll:function scrollResponderHandleScroll(e){
	this.state.observedScrollSinceBecomingResponder=true;
	this.props.onScroll&&this.props.onScroll(e);
	},

	/**
	   * Invoke this from an `onResponderGrant` event.
	   */
	scrollResponderHandleResponderGrant:function scrollResponderHandleResponderGrant(e){
	this.state.observedScrollSinceBecomingResponder=false;
	this.props.onResponderGrant&&this.props.onResponderGrant(e);
	this.state.becameResponderWhileAnimating=this.scrollResponderIsAnimating();
	},

	/**
	   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll
	   * animation, and there's not an easy way to distinguish a drag vs. stopping
	   * momentum.
	   *
	   * Invoke this from an `onScrollBeginDrag` event.
	   */
	scrollResponderHandleScrollBeginDrag:function scrollResponderHandleScrollBeginDrag(e){
	this.props.onScrollBeginDrag&&this.props.onScrollBeginDrag(e);
	},

	/**
	   * Invoke this from an `onScrollEndDrag` event.
	   */
	scrollResponderHandleScrollEndDrag:function scrollResponderHandleScrollEndDrag(e){
	this.props.onScrollEndDrag&&this.props.onScrollEndDrag(e);
	},

	/**
	   * Invoke this from an `onMomentumScrollBegin` event.
	   */
	scrollResponderHandleMomentumScrollBegin:function scrollResponderHandleMomentumScrollBegin(e){
	this.state.lastMomentumScrollBeginTime=Date.now();
	this.props.onMomentumScrollBegin&&this.props.onMomentumScrollBegin(e);
	},

	/**
	   * Invoke this from an `onMomentumScrollEnd` event.
	   */
	scrollResponderHandleMomentumScrollEnd:function scrollResponderHandleMomentumScrollEnd(e){
	this.state.lastMomentumScrollEndTime=Date.now();
	this.props.onMomentumScrollEnd&&this.props.onMomentumScrollEnd(e);
	},

	/**
	   * Invoke this from an `onTouchStart` event.
	   *
	   * Since we know that the `SimpleEventPlugin` occurs later in the plugin
	   * order, after `ResponderEventPlugin`, we can detect that we were *not*
	   * permitted to be the responder (presumably because a contained view became
	   * responder). The `onResponderReject` won't fire in that case - it only
	   * fires when a *current* responder rejects our request.
	   *
	   * @param {SyntheticEvent} e Touch Start event.
	   */
	scrollResponderHandleTouchStart:function scrollResponderHandleTouchStart(e){
	this.state.isTouching=true;
	this.props.onTouchStart&&this.props.onTouchStart(e);
	},

	/**
	   * Invoke this from an `onTouchMove` event.
	   *
	   * Since we know that the `SimpleEventPlugin` occurs later in the plugin
	   * order, after `ResponderEventPlugin`, we can detect that we were *not*
	   * permitted to be the responder (presumably because a contained view became
	   * responder). The `onResponderReject` won't fire in that case - it only
	   * fires when a *current* responder rejects our request.
	   *
	   * @param {SyntheticEvent} e Touch Start event.
	   */
	scrollResponderHandleTouchMove:function scrollResponderHandleTouchMove(e){
	this.props.onTouchMove&&this.props.onTouchMove(e);
	},

	/**
	   * A helper function for this class that lets us quickly determine if the
	   * view is currently animating. This is particularly useful to know when
	   * a touch has just started or ended.
	   */
	scrollResponderIsAnimating:function scrollResponderIsAnimating(){
	var now=Date.now();
	var timeSinceLastMomentumScrollEnd=now-this.state.lastMomentumScrollEndTime;
	var isAnimating=timeSinceLastMomentumScrollEnd<IS_ANIMATING_TOUCH_START_THRESHOLD_MS||
	this.state.lastMomentumScrollEndTime<this.state.lastMomentumScrollBeginTime;
	return isAnimating;
	},

	/**
	   * Returns the node that represents native view that can be scrolled.
	   * Components can pass what node to use by defining a `getScrollableNode`
	   * function otherwise `this` is used.
	   */
	scrollResponderGetScrollableNode:function scrollResponderGetScrollableNode(){
	return this.getScrollableNode?
	this.getScrollableNode():
	ReactDOM.findDOMNode(this);
	},

	/**
	   * A helper function to scroll to a specific point  in the scrollview.
	   * This is currently used to help focus on child textviews, but can also
	   * be used to quickly scroll to any element we want to focus. Syntax:
	   *
	   * scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})
	   *
	   * Note: The weird argument signature is due to the fact that, for historical reasons,
	   * the function also accepts separate arguments as as alternative to the options object.
	   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.
	   */
	scrollResponderScrollTo:function scrollResponderScrollTo(
	x,
	y,
	animated)
	{
	if(typeof x==='number'){
	console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
	}else{var _ref=
	x||{};x=_ref.x;y=_ref.y;animated=_ref.animated;
	}
	var node=this.scrollResponderGetScrollableNode();
	node.scrollLeft=x||0;
	node.scrollTop=y||0;
	},

	/**
	   * Deprecated, do not use.
	   */
	scrollResponderScrollWithoutAnimationTo:function scrollResponderScrollWithoutAnimationTo(offsetX,offsetY){
	console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
	this.scrollResponderScrollTo({x:offsetX,y:offsetY,animated:false});
	},

	/**
	   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape
	   * {x: number; y: number; width: number; height: number; animated: boolean = true}
	   *
	   * @platform ios
	   */
	scrollResponderZoomTo:function scrollResponderZoomTo(
	rect,
	animated// deprecated, put this inside the rect argument instead
	){
	if(Platform.OS!=='ios'){
	invariant('zoomToRect is not implemented');
	}
	},

	/**
	   * This method should be used as the callback to onFocus in a TextInputs'
	   * parent view. Note that any module using this mixin needs to return
	   * the parent view's ref in getScrollViewRef() in order to use this method.
	   * @param {any} nodeHandle The TextInput node handle
	   * @param {number} additionalOffset The scroll view's top "contentInset".
	   *        Default is 0.
	   * @param {bool} preventNegativeScrolling Whether to allow pulling the content
	   *        down to make it meet the keyboard's top. Default is false.
	   */
	scrollResponderScrollNativeHandleToKeyboard:function scrollResponderScrollNativeHandleToKeyboard(nodeHandle,additionalOffset,preventNegativeScrollOffset){
	this.additionalScrollOffset=additionalOffset||0;
	this.preventNegativeScrollOffset=!!preventNegativeScrollOffset;
	UIManager.measureLayout(
	nodeHandle,
	ReactDOM.findDOMNode(this.getInnerViewNode()),
	this.scrollResponderTextInputFocusError,
	this.scrollResponderInputMeasureAndScrollToKeyboard);

	},

	/**
	   * The calculations performed here assume the scroll view takes up the entire
	   * screen - even if has some content inset. We then measure the offsets of the
	   * keyboard, and compensate both for the scroll view's "contentInset".
	   *
	   * @param {number} left Position of input w.r.t. table view.
	   * @param {number} top Position of input w.r.t. table view.
	   * @param {number} width Width of the text input.
	   * @param {number} height Height of the text input.
	   */
	scrollResponderInputMeasureAndScrollToKeyboard:function scrollResponderInputMeasureAndScrollToKeyboard(left,top,width,height){
	var keyboardScreenY=Dimensions.get('window').height;
	if(this.keyboardWillOpenTo){
	keyboardScreenY=this.keyboardWillOpenTo.endCoordinates.screenY;
	}
	var scrollOffsetY=top-keyboardScreenY+height+this.additionalScrollOffset;

	// By default, this can scroll with negative offset, pulling the content
	// down so that the target component's bottom meets the keyboard's top.
	// If requested otherwise, cap the offset at 0 minimum to avoid content
	// shifting down.
	if(this.preventNegativeScrollOffset){
	scrollOffsetY=Math.max(0,scrollOffsetY);
	}
	this.scrollResponderScrollTo({x:0,y:scrollOffsetY,animated:true});

	this.additionalOffset=0;
	this.preventNegativeScrollOffset=false;
	},

	scrollResponderTextInputFocusError:function scrollResponderTextInputFocusError(e){
	console.error('Error measuring text field: ',e);
	},

	/**
	   * `componentWillMount` is the closest thing to a  standard "constructor" for
	   * React components.
	   *
	   * The `keyboardWillShow` is called before input focus.
	   */
	componentWillMount:function componentWillMount(){
	this.keyboardWillOpenTo=null;
	this.additionalScrollOffset=0;
	// this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
	// this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
	// this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
	// this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
	},

	/**
	   * Warning, this may be called several times for a single keyboard opening.
	   * It's best to store the information in this method and then take any action
	   * at a later point (either in `keyboardDidShow` or other).
	   *
	   * Here's the order that events occur in:
	   * - focus
	   * - willShow {startCoordinates, endCoordinates} several times
	   * - didShow several times
	   * - blur
	   * - willHide {startCoordinates, endCoordinates} several times
	   * - didHide several times
	   *
	   * The `ScrollResponder` providesModule callbacks for each of these events.
	   * Even though any user could have easily listened to keyboard events
	   * themselves, using these `props` callbacks ensures that ordering of events
	   * is consistent - and not dependent on the order that the keyboard events are
	   * subscribed to. This matters when telling the scroll view to scroll to where
	   * the keyboard is headed - the scroll responder better have been notified of
	   * the keyboard destination before being instructed to scroll to where the
	   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything
	   * will work.
	   *
	   * WARNING: These callbacks will fire even if a keyboard is displayed in a
	   * different navigation pane. Filter out the events to determine if they are
	   * relevant to you. (For example, only if you receive these callbacks after
	   * you had explicitly focused a node etc).
	   */
	scrollResponderKeyboardWillShow:function scrollResponderKeyboardWillShow(e){
	this.keyboardWillOpenTo=e;
	this.props.onKeyboardWillShow&&this.props.onKeyboardWillShow(e);
	},

	scrollResponderKeyboardWillHide:function scrollResponderKeyboardWillHide(e){
	this.keyboardWillOpenTo=null;
	this.props.onKeyboardWillHide&&this.props.onKeyboardWillHide(e);
	},

	scrollResponderKeyboardDidShow:function scrollResponderKeyboardDidShow(e){
	// TODO(7693961): The event for DidShow is not available on iOS yet.
	// Use the one from WillShow and do not assign.
	if(e){
	this.keyboardWillOpenTo=e;
	}
	this.props.onKeyboardDidShow&&this.props.onKeyboardDidShow(e);
	},

	scrollResponderKeyboardDidHide:function scrollResponderKeyboardDidHide(e){
	this.keyboardWillOpenTo=null;
	this.props.onKeyboardDidHide&&this.props.onKeyboardDidHide(e);
	}};


	var ScrollResponder={
	Mixin:ScrollResponderMixin};


	module.exports=ScrollResponder;

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();







	var _debounce=__webpack_require__(426);var _debounce2=_interopRequireDefault(_debounce);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
	 * Copyright (c) 2016-present, Nicolas Gallagher.
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * 
	 *//**
	 * Encapsulates the Web-specific scroll throttling and disabling logic
	 */var ScrollViewBase=function(_Component){_inherits(ScrollViewBase,_Component);














	function ScrollViewBase(props){_classCallCheck(this,ScrollViewBase);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(ScrollViewBase).call(this,
	props));_this.




	_handlePreventableScrollEvent=function(handler){
	return function(e){
	if(!_this.props.scrollEnabled){
	e.preventDefault();
	}else{
	if(handler){handler(e);}
	}
	};
	};_this.

	_handleScroll=function(e){var
	scrollEventThrottle=_this.props.scrollEventThrottle;
	// A scroll happened, so the scroll bumps the debounce.
	_this._debouncedOnScrollEnd(e);
	if(_this._state.isScrolling){
	// Scroll last tick may have changed, check if we need to notify
	if(_this._shouldEmitScrollEvent(_this._state.scrollLastTick,scrollEventThrottle)){
	_this._handleScrollTick(e);
	}
	}else{
	// Weren't scrolling, so we must have just started
	_this._handleScrollStart(e);
	}
	};_this._debouncedOnScrollEnd=(0,_debounce2.default)(_this._handleScrollEnd,100);_this._state={isScrolling:false};return _this;}_createClass(ScrollViewBase,[{key:'_handleScrollStart',value:function _handleScrollStart(

	e){
	this._state.isScrolling=true;
	this._state.scrollLastTick=Date.now();
	}},{key:'_handleScrollTick',value:function _handleScrollTick(

	e){var
	onScroll=this.props.onScroll;
	this._state.scrollLastTick=Date.now();
	if(onScroll){onScroll(e);}
	}},{key:'_handleScrollEnd',value:function _handleScrollEnd(

	e){var
	onScroll=this.props.onScroll;
	this._state.isScrolling=false;
	if(onScroll){onScroll(e);}
	}},{key:'_shouldEmitScrollEvent',value:function _shouldEmitScrollEvent(

	lastTick,eventThrottle){
	var timeSinceLastTick=Date.now()-lastTick;
	return eventThrottle>0&&timeSinceLastTick>=1000/eventThrottle;
	}},{key:'render',value:function render()

	{var _props=



	this.props;var onMomentumScrollBegin=_props.onMomentumScrollBegin;var onMomentumScrollEnd=_props.onMomentumScrollEnd;var onScrollBeginDrag=_props.onScrollBeginDrag;var onScrollEndDrag=_props.onScrollEndDrag;var scrollEnabled=_props.scrollEnabled;var scrollEventThrottle=_props.scrollEventThrottle;var other=_objectWithoutProperties(_props,['onMomentumScrollBegin','onMomentumScrollEnd','onScrollBeginDrag','onScrollEndDrag','scrollEnabled','scrollEventThrottle']);

	return(
	_react2.default.createElement(_View2.default,_extends({},
	other,{
	onScroll:this._handleScroll,
	onTouchMove:this._handlePreventableScrollEvent(this.props.onTouchMove),
	onWheel:this._handlePreventableScrollEvent(this.props.onWheel)})));


	}}]);return ScrollViewBase;}(_react.Component);ScrollViewBase.propTypes=_extends({},_View2.default.propTypes,{onMomentumScrollBegin:_react.PropTypes.func,onMomentumScrollEnd:_react.PropTypes.func,onScroll:_react.PropTypes.func,onScrollBeginDrag:_react.PropTypes.func,onScrollEndDrag:_react.PropTypes.func,onTouchMove:_react.PropTypes.func,onWheel:_react.PropTypes.func,scrollEnabled:_react.PropTypes.bool,scrollEventThrottle:_react.PropTypes.number});ScrollViewBase.defaultProps={scrollEnabled:true};exports.default=ScrollViewBase;

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(446),
	    baseFlatten = __webpack_require__(447),
	    basePick = __webpack_require__(450),
	    baseRest = __webpack_require__(452),
	    toKey = __webpack_require__(413);

	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [props] The property identifiers to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = baseRest(function(object, props) {
	  return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));
	});

	module.exports = pick;


/***/ },
/* 446 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(448),
	    isFlattenable = __webpack_require__(449);

	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;

	  predicate || (predicate = isFlattenable);
	  result || (result = []);

	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}

	module.exports = baseFlatten;


/***/ },
/* 448 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(370),
	    isArguments = __webpack_require__(378),
	    isArray = __webpack_require__(383);

	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}

	module.exports = isFlattenable;


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(451);

	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} props The property identifiers to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, props) {
	  object = Object(object);
	  return basePickBy(object, props, function(value, key) {
	    return key in object;
	  });
	}

	module.exports = basePick;


/***/ },
/* 451 */
/***/ function(module, exports) {

	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} props The property identifiers to pick from.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, props, predicate) {
	  var index = -1,
	      length = props.length,
	      result = {};

	  while (++index < length) {
	    var key = props[index],
	        value = object[key];

	    if (predicate(value, key)) {
	      result[key] = value;
	    }
	  }
	  return result;
	}

	module.exports = basePickBy;


/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(453);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}

	module.exports = baseRest;


/***/ },
/* 453 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _Animated=__webpack_require__(175);var _Animated2=_interopRequireDefault(_Animated);
	var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var indeterminateWidth='25%';
	var translateInterpolation={inputRange:[0,1],outputRange:['-100%','400%']};var

	ProgressBar=function(_Component){_inherits(ProgressBar,_Component);

















	function ProgressBar(props){_classCallCheck(this,ProgressBar);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(ProgressBar).call(this,
	props));
	_this.state={
	animationTranslate:new _Animated2.default.Value(0)};return _this;

	}_createClass(ProgressBar,[{key:'componentDidMount',value:function componentDidMount()

	{
	this._manageAnimation();
	}},{key:'componentDidUpdate',value:function componentDidUpdate()

	{
	this._manageAnimation();
	}},{key:'render',value:function render()

	{var _props=







	this.props;var color=_props.color;var indeterminate=_props.indeterminate;var progress=_props.progress;var trackColor=_props.trackColor;var style=_props.style;var other=_objectWithoutProperties(_props,['color','indeterminate','progress','trackColor','style']);var

	animationTranslate=this.state.animationTranslate;

	var percentageProgress=indeterminate?50:progress*100;

	return(
	_react2.default.createElement(_View2.default,_extends({},other,{
	accessibilityRole:'progressbar',
	'aria-valuemax':'100',
	'aria-valuemin':'0',
	'aria-valuenow':indeterminate?null:percentageProgress,
	style:[
	styles.track,
	style,
	{backgroundColor:trackColor}]}),


	_react2.default.createElement(_Animated2.default.View,{style:[
	styles.progress,
	{backgroundColor:color},
	indeterminate?{
	transform:[
	{translateX:animationTranslate.interpolate(translateInterpolation)}],

	width:indeterminateWidth}:
	{
	width:percentageProgress+'%'}]})));




	}},{key:'_manageAnimation',value:function _manageAnimation()

	{var
	animationTranslate=this.state.animationTranslate;

	var cycleAnimation=function cycleAnimation(animation){
	animation.setValue(0);
	_Animated2.default.timing(animation,{
	duration:1000,
	toValue:1}).
	start(function(event){
	if(event.finished){
	cycleAnimation(animation);
	}
	});
	};

	if(this.props.indeterminate){
	cycleAnimation(animationTranslate);
	}else{
	animationTranslate.stopAnimation();
	}
	}}]);return ProgressBar;}(_react.Component);ProgressBar.displayName='ProgressBar';ProgressBar.propTypes=_extends({},_View2.default.propTypes,{color:_ColorPropType2.default,indeterminate:_react.PropTypes.bool,progress:_react.PropTypes.number,trackColor:_ColorPropType2.default});ProgressBar.defaultProps={color:'#1976D2',indeterminate:false,progress:0,trackColor:'transparent'};


	var styles=_StyleSheet2.default.create({
	track:{
	height:5,
	overflow:'hidden',
	userSelect:'none'},

	progress:{
	height:'100%'}});



	module.exports=(0,_applyNativeMethods2.default)(ProgressBar);

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _ColorPropType=__webpack_require__(296);var _ColorPropType2=_interopRequireDefault(_ColorPropType);
	var _createDOMElement=__webpack_require__(290);var _createDOMElement2=_interopRequireDefault(_createDOMElement);
	var _multiplyStyleLengthValue=__webpack_require__(270);var _multiplyStyleLengthValue2=_interopRequireDefault(_multiplyStyleLengthValue);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _UIManager=__webpack_require__(262);var _UIManager2=_interopRequireDefault(_UIManager);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var thumbDefaultBoxShadow='0px 1px 3px rgba(0,0,0,0.5)';
	var thumbFocusedBoxShadow=thumbDefaultBoxShadow+', 0 0 0 10px rgba(0,0,0,0.1)';var

	Switch=function(_Component){_inherits(Switch,_Component);function Switch(){var _Object$getPrototypeO;var _temp,_this,_ret;_classCallCheck(this,Switch);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_Object$getPrototypeO=Object.getPrototypeOf(Switch)).call.apply(_Object$getPrototypeO,[this].concat(args))),_this),_this.









































































































	_handleChange=function(event){var
	onValueChange=_this.props.onValueChange;
	onValueChange&&onValueChange(event.nativeEvent.target.checked);
	},_this.

	_handleFocusState=function(event){
	var isFocused=event.nativeEvent.type==='focus';
	var boxShadow=isFocused?thumbFocusedBoxShadow:thumbDefaultBoxShadow;
	_this._thumb.setNativeProps({style:{boxShadow:boxShadow}});
	},_this.

	_setCheckboxRef=function(component){
	_this._checkbox=component;
	},_this.

	_setThumbRef=function(component){
	_this._thumb=component;
	},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(Switch,[{key:'blur',value:function blur(){_UIManager2.default.blur(this._checkbox);}},{key:'focus',value:function focus(){_UIManager2.default.focus(this._checkbox);}},{key:'render',value:function render(){var _props=this.props;var activeThumbColor=_props.activeThumbColor;var activeTrackColor=_props.activeTrackColor;var disabled=_props.disabled;var onValueChange=_props.onValueChange;var style=_props.style;var thumbColor=_props.thumbColor;var trackColor=_props.trackColor;var value=_props.value;var onTintColor=_props.onTintColor;var thumbTintColor=_props.thumbTintColor;var tintColor=_props.tintColor;var other=_objectWithoutProperties(_props,['activeThumbColor','activeTrackColor','disabled','onValueChange','style','thumbColor','trackColor','value','onTintColor','thumbTintColor','tintColor']);var _StyleSheet$flatten=_StyleSheet2.default.flatten(style);var styleHeight=_StyleSheet$flatten.height;var styleWidth=_StyleSheet$flatten.width;var height=styleHeight||20;var minWidth=(0,_multiplyStyleLengthValue2.default)(height,2);var width=styleWidth>minWidth?styleWidth:minWidth;var trackBorderRadius=(0,_multiplyStyleLengthValue2.default)(height,0.5);var trackCurrentColor=value?activeTrackColor:trackColor;var thumbCurrentColor=value?activeThumbColor:thumbColor;var thumbHeight=height;var thumbWidth=thumbHeight;var rootStyle=[styles.root,style,{height:height,width:width},disabled&&styles.cursorDefault];var trackStyle=[styles.track,{backgroundColor:trackCurrentColor,borderRadius:trackBorderRadius},disabled&&styles.disabledTrack];var thumbStyle=[styles.thumb,{alignSelf:value?'flex-end':'flex-start',backgroundColor:thumbCurrentColor,height:thumbHeight,width:thumbWidth},disabled&&styles.disabledThumb];var nativeControl=(0,_createDOMElement2.default)('input',{checked:value,disabled:disabled,onBlur:this._handleFocusState,onChange:this._handleChange,onFocus:this._handleFocusState,ref:this._setCheckboxRef,style:[styles.nativeControl,styles.cursorInherit],type:'checkbox'});return _react2.default.createElement(_View2.default,_extends({},other,{style:rootStyle}),_react2.default.createElement(_View2.default,{style:trackStyle}),_react2.default.createElement(_View2.default,{ref:this._setThumbRef,style:thumbStyle}),nativeControl);}}]);return Switch;}(_react.Component);Switch.displayName='Switch';Switch.propTypes=_extends({},_View2.default.propTypes,{activeThumbColor:_ColorPropType2.default,activeTrackColor:_ColorPropType2.default,disabled:_react.PropTypes.bool,onValueChange:_react.PropTypes.func,thumbColor:_ColorPropType2.default,trackColor:_ColorPropType2.default,value:_react.PropTypes.bool});Switch.defaultProps={activeThumbColor:'#009688',activeTrackColor:'#A3D3CF',disabled:false,style:{},thumbColor:'#FAFAFA',trackColor:'#939393',value:false};


	var styles=_StyleSheet2.default.create({
	root:{
	cursor:'pointer',
	userSelect:'none'},

	cursorDefault:{
	cursor:'default'},

	cursorInherit:{
	cursor:'inherit'},

	track:_extends({},
	_StyleSheet2.default.absoluteFillObject,{
	height:'70%',
	margin:'auto',
	transition:'background-color 0.1s',
	width:'90%'}),

	disabledTrack:{
	backgroundColor:'#D5D5D5'},

	thumb:{
	borderRadius:'100%',
	boxShadow:thumbDefaultBoxShadow,
	transition:'background-color 0.1s'},

	disabledThumb:{
	backgroundColor:'#BDBDBD'},

	nativeControl:_extends({},
	_StyleSheet2.default.absoluteFillObject,{
	height:'100%',
	margin:0,
	opacity:0,
	padding:0,
	width:'100%'})});



	module.exports=(0,_applyNativeMethods2.default)(Switch);

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _applyNativeMethods=__webpack_require__(260);var _applyNativeMethods2=_interopRequireDefault(_applyNativeMethods);
	var _createDOMElement=__webpack_require__(290);var _createDOMElement2=_interopRequireDefault(_createDOMElement);
	var _omit=__webpack_require__(457);var _omit2=_interopRequireDefault(_omit);
	var _pick=__webpack_require__(445);var _pick2=_interopRequireDefault(_pick);
	var _reactDom=__webpack_require__(47);var _reactDom2=_interopRequireDefault(_reactDom);
	var _StyleSheet=__webpack_require__(291);var _StyleSheet2=_interopRequireDefault(_StyleSheet);
	var _Text=__webpack_require__(311);var _Text2=_interopRequireDefault(_Text);
	var _reactTextareaAutosize=__webpack_require__(473);var _reactTextareaAutosize2=_interopRequireDefault(_reactTextareaAutosize);
	var _TextInputState=__webpack_require__(442);var _TextInputState2=_interopRequireDefault(_TextInputState);
	var _UIManager=__webpack_require__(262);var _UIManager2=_interopRequireDefault(_UIManager);
	var _View=__webpack_require__(308);var _View2=_interopRequireDefault(_View);
	var _ViewStylePropTypes=__webpack_require__(303);var _ViewStylePropTypes2=_interopRequireDefault(_ViewStylePropTypes);
	var _react=__webpack_require__(1);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

	var viewStyleProps=Object.keys(_ViewStylePropTypes2.default);var

	TextInput=function(_Component){_inherits(TextInput,_Component);







































	function TextInput(props,context){_classCallCheck(this,TextInput);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(TextInput).call(this,
	props,context));_this.





































































































































	_handleBlur=function(e){var
	onBlur=_this.props.onBlur;
	var text=e.target.value;
	_this.setState({showPlaceholder:text===''});
	_this.blur();
	if(onBlur){onBlur(e);}
	};_this.

	_handleChange=function(e){var _this$props=
	_this.props;var onChange=_this$props.onChange;var onChangeText=_this$props.onChangeText;
	var text=e.target.value;
	_this.setState({showPlaceholder:text===''});
	if(onChange){onChange(e);}
	if(onChangeText){onChangeText(text);}
	if(!_this._inputRef){
	// calling `this.props.onChange` or `this.props.onChangeText`
	// may clean up the input itself. Exits here.
	return;
	}
	};_this.

	_handleClick=function(e){
	_this.focus();
	};_this.

	_handleFocus=function(e){var _this$props2=
	_this.props;var clearTextOnFocus=_this$props2.clearTextOnFocus;var onFocus=_this$props2.onFocus;var selectTextOnFocus=_this$props2.selectTextOnFocus;
	var node=_reactDom2.default.findDOMNode(_this._inputRef);
	var text=e.target.value;
	if(onFocus){onFocus(e);}
	if(clearTextOnFocus){_this.clear();}
	if(selectTextOnFocus){node.select();}
	_this.setState({showPlaceholder:text===''});
	};_this.

	_handleSelectionChange=function(e){var
	onSelectionChange=_this.props.onSelectionChange;
	try{var _e$target=
	e.target;var selectionDirection=_e$target.selectionDirection;var selectionEnd=_e$target.selectionEnd;var selectionStart=_e$target.selectionStart;
	var event={
	selectionDirection:selectionDirection,
	selectionEnd:selectionEnd,
	selectionStart:selectionStart,
	nativeEvent:e.nativeEvent};

	if(onSelectionChange){onSelectionChange(event);}
	}catch(e){}
	};_this.

	_setInputRef=function(component){
	_this._inputRef=component;
	};_this.state={showPlaceholder:!props.value&&!props.defaultValue};return _this;}_createClass(TextInput,[{key:'blur',value:function blur(){_TextInputState2.default.blurTextInput(_reactDom2.default.findDOMNode(this._inputRef));}},{key:'clear',value:function clear(){this.setNativeProps({text:''});}},{key:'focus',value:function focus(){_TextInputState2.default.focusTextInput(_reactDom2.default.findDOMNode(this._inputRef));}},{key:'setNativeProps',value:function setNativeProps(props){_UIManager2.default.updateView(this._inputRef,props,this);}},{key:'render',value:function render(){var _props=this.props;var accessibilityLabel=_props.accessibilityLabel;var autoComplete=_props.autoComplete;var autoFocus=_props.autoFocus;var defaultValue=_props.defaultValue;var editable=_props.editable;var keyboardType=_props.keyboardType;var maxLength=_props.maxLength;var maxNumberOfLines=_props.maxNumberOfLines;var multiline=_props.multiline;var numberOfLines=_props.numberOfLines;var onLayout=_props.onLayout;var onSelectionChange=_props.onSelectionChange;var placeholder=_props.placeholder;var placeholderTextColor=_props.placeholderTextColor;var secureTextEntry=_props.secureTextEntry;var style=_props.style;var testID=_props.testID;var value=_props.value;var type=void 0;switch(keyboardType){case'email-address':type='email';break;case'numeric':type='number';break;case'phone-pad':type='tel';break;case'search':case'web-search':type='search';break;case'url':type='url';break;default:type='text';}if(secureTextEntry){type='password';}// In order to support 'Text' styles on 'TextInput', we split the 'Text'
	// and 'View' styles and apply them to the 'Text' and 'View' components
	// used in the implementation
	var flattenedStyle=_StyleSheet2.default.flatten(style);var rootStyles=(0,_pick2.default)(flattenedStyle,viewStyleProps);var textStyles=(0,_omit2.default)(flattenedStyle,viewStyleProps);var propsCommon={autoComplete:autoComplete&&'on',autoFocus:autoFocus,defaultValue:defaultValue,maxLength:maxLength,onBlur:this._handleBlur,onChange:this._handleChange,onFocus:this._handleFocus,onSelect:onSelectionChange&&this._handleSelectionChange,readOnly:!editable,ref:this._setInputRef,style:[styles.input,textStyles,{outline:style.outline}],value:value};var propsMultiline=_extends({},propsCommon,{maxRows:maxNumberOfLines||numberOfLines,minRows:numberOfLines});var propsSingleline=_extends({},propsCommon,{type:type});var component=multiline?_reactTextareaAutosize2.default:'input';var props=multiline?propsMultiline:propsSingleline;var optionalPlaceholder=placeholder&&this.state.showPlaceholder&&_react2.default.createElement(_View2.default,{pointerEvents:'none',style:styles.placeholder},_react2.default.createElement(_Text2.default,{children:placeholder,style:[styles.placeholderText,textStyles,placeholderTextColor&&{color:placeholderTextColor}]}));return _react2.default.createElement(_View2.default,{accessibilityLabel:accessibilityLabel,onClick:this._handleClick,onLayout:onLayout,style:[styles.initial,rootStyles],testID:testID},_react2.default.createElement(_View2.default,{style:styles.wrapper},(0,_createDOMElement2.default)(component,props),optionalPlaceholder));}}]);return TextInput;}(_react.Component);TextInput.displayName='TextInput';TextInput.propTypes=_extends({},_View2.default.propTypes,{autoComplete:_react.PropTypes.bool,autoFocus:_react.PropTypes.bool,clearTextOnFocus:_react.PropTypes.bool,defaultValue:_react.PropTypes.string,editable:_react.PropTypes.bool,keyboardType:_react.PropTypes.oneOf(['default','email-address','numeric','phone-pad','search','url','web-search']),maxLength:_react.PropTypes.number,maxNumberOfLines:_react.PropTypes.number,multiline:_react.PropTypes.bool,numberOfLines:_react.PropTypes.number,onBlur:_react.PropTypes.func,onChange:_react.PropTypes.func,onChangeText:_react.PropTypes.func,onFocus:_react.PropTypes.func,onSelectionChange:_react.PropTypes.func,placeholder:_react.PropTypes.string,placeholderTextColor:_react.PropTypes.string,secureTextEntry:_react.PropTypes.bool,selectTextOnFocus:_react.PropTypes.bool,style:_Text2.default.propTypes.style,testID:_Text2.default.propTypes.testID,value:_react.PropTypes.string});TextInput.defaultProps={editable:true,keyboardType:'default',multiline:false,numberOfLines:2,secureTextEntry:false,style:{}};(0,_applyNativeMethods2.default)(TextInput);

	var styles=_StyleSheet2.default.create({
	initial:{
	borderColor:'black'},

	wrapper:{
	flex:1},

	input:{
	appearance:'none',
	backgroundColor:'transparent',
	borderWidth:0,
	boxSizing:'border-box',
	color:'inherit',
	flex:1,
	font:'inherit',
	minHeight:'100%',// center small inputs (fix #139)
	padding:0,
	zIndex:1},

	placeholder:{
	bottom:0,
	justifyContent:'center',
	left:0,
	position:'absolute',
	right:0,
	top:0},

	placeholderText:{
	color:'darkgray',
	overflow:'hidden',
	whiteSpace:'pre'}});



	module.exports=TextInput;

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(446),
	    baseDifference = __webpack_require__(458),
	    baseFlatten = __webpack_require__(447),
	    basePick = __webpack_require__(450),
	    baseRest = __webpack_require__(452),
	    getAllKeysIn = __webpack_require__(464),
	    toKey = __webpack_require__(413);

	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable string keyed properties of `object` that are
	 * not omitted.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [props] The property identifiers to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = baseRest(function(object, props) {
	  if (object == null) {
	    return {};
	  }
	  props = arrayMap(baseFlatten(props, 1), toKey);
	  return basePick(object, baseDifference(getAllKeysIn(object), props));
	});

	module.exports = omit;


/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(365),
	    arrayIncludes = __webpack_require__(459),
	    arrayIncludesWith = __webpack_require__(462),
	    arrayMap = __webpack_require__(446),
	    baseUnary = __webpack_require__(397),
	    cacheHas = __webpack_require__(463);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;

	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseDifference;


/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(460);

	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array ? array.length : 0;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}

	module.exports = arrayIncludes;


/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(317),
	    baseIsNaN = __webpack_require__(461);

	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  if (value !== value) {
	    return baseFindIndex(array, baseIsNaN, fromIndex);
	  }
	  var index = fromIndex - 1,
	      length = array.length;

	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseIndexOf;


/***/ },
/* 461 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}

	module.exports = baseIsNaN;


/***/ },
/* 462 */
/***/ function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arrayIncludesWith;


/***/ },
/* 463 */
/***/ function(module, exports) {

	/**
	 * Checks if a cache value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}

	module.exports = cacheHas;


/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(465),
	    getSymbolsIn = __webpack_require__(466),
	    keysIn = __webpack_require__(470);

	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}

	module.exports = getAllKeysIn;


/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(448),
	    isArray = __webpack_require__(383);

	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}

	module.exports = baseGetAllKeys;


/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(448),
	    getPrototype = __webpack_require__(467),
	    getSymbols = __webpack_require__(468),
	    stubArray = __webpack_require__(469);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own and inherited enumerable symbol properties
	 * of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};

	module.exports = getSymbolsIn;


/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(388);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(388),
	    stubArray = __webpack_require__(469);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own enumerable symbol properties of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

	module.exports = getSymbols;


/***/ },
/* 469 */
/***/ function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}

	module.exports = stubArray;


/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(376),
	    baseKeysIn = __webpack_require__(471),
	    isArrayLike = __webpack_require__(380);

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}

	module.exports = keysIn;


/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(339),
	    isPrototype = __webpack_require__(386),
	    nativeKeysIn = __webpack_require__(472);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];

	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeysIn;


/***/ },
/* 472 */
/***/ function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = nativeKeysIn;


/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp; /**
	                    * <TextareaAutosize />
	                    */

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _calculateNodeHeight = __webpack_require__(474);

	var _calculateNodeHeight2 = _interopRequireDefault(_calculateNodeHeight);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var emptyFunction = function emptyFunction() {};

	var TextareaAutosize = (_temp = _class = function (_React$Component) {
	  _inherits(TextareaAutosize, _React$Component);

	  function TextareaAutosize(props) {
	    _classCallCheck(this, TextareaAutosize);

	    var _this = _possibleConstructorReturn(this, (TextareaAutosize.__proto__ || Object.getPrototypeOf(TextareaAutosize)).call(this, props));

	    _this.state = {
	      height: null,
	      minHeight: -Infinity,
	      maxHeight: Infinity
	    };
	    _this._onNextFrameActionId = null;
	    _this._rootDOMNode = null;
	    _this._onChange = _this._onChange.bind(_this);
	    _this._resizeComponent = _this._resizeComponent.bind(_this);
	    _this._onRootDOMNode = _this._onRootDOMNode.bind(_this);
	    return _this;
	  }

	  _createClass(TextareaAutosize, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var valueLink = _props.valueLink;
	      var _minRows = _props.minRows;
	      var _maxRows = _props.maxRows;
	      var _onHeightChange = _props.onHeightChange;
	      var _useCacheForDOMMeasurements = _props.useCacheForDOMMeasurements;

	      var props = _objectWithoutProperties(_props, ['valueLink', 'minRows', 'maxRows', 'onHeightChange', 'useCacheForDOMMeasurements']);

	      if ((typeof valueLink === 'undefined' ? 'undefined' : _typeof(valueLink)) === 'object') {
	        props.value = valueLink.value;
	      }
	      props.style = _extends({}, props.style, {
	        height: this.state.height || 0
	      });
	      var maxHeight = Math.max(props.style.maxHeight ? props.style.maxHeight : Infinity, this.state.maxHeight);
	      if (maxHeight < this.state.height) {
	        props.style.overflow = 'hidden';
	      }
	      return _react2.default.createElement('textarea', _extends({}, props, {
	        onChange: this._onChange,
	        ref: this._onRootDOMNode
	      }));
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._resizeComponent();
	      window.addEventListener('resize', this._resizeComponent);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps() {
	      // Re-render with the new content then recalculate the height as required.
	      this._clearNextFrame();
	      this._onNextFrameActionId = onNextFrame(this._resizeComponent);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      // Invoke callback when old height does not equal to new one.
	      if (this.state.height !== prevState.height) {
	        this.props.onHeightChange(this.state.height);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      // Remove any scheduled events to prevent manipulating the node after it's
	      // been unmounted.
	      this._clearNextFrame();
	      window.removeEventListener('resize', this._resizeComponent);
	    }
	  }, {
	    key: '_clearNextFrame',
	    value: function _clearNextFrame() {
	      if (this._onNextFrameActionId) {
	        clearNextFrameAction(this._onNextFrameActionId);
	      }
	    }
	  }, {
	    key: '_onRootDOMNode',
	    value: function _onRootDOMNode(node) {
	      this._rootDOMNode = node;
	    }
	  }, {
	    key: '_onChange',
	    value: function _onChange(e) {
	      this._resizeComponent();
	      var _props2 = this.props;
	      var valueLink = _props2.valueLink;
	      var onChange = _props2.onChange;

	      if (valueLink) {
	        valueLink.requestChange(e.target.value);
	      } else {
	        onChange(e);
	      }
	    }
	  }, {
	    key: '_resizeComponent',
	    value: function _resizeComponent() {
	      var useCacheForDOMMeasurements = this.props.useCacheForDOMMeasurements;

	      this.setState((0, _calculateNodeHeight2.default)(this._rootDOMNode, useCacheForDOMMeasurements, this.props.rows || this.props.minRows, this.props.maxRows));
	    }

	    /**
	     * Read the current value of <textarea /> from DOM.
	     */

	  }, {
	    key: 'focus',


	    /**
	     * Put focus on a <textarea /> DOM element.
	     */
	    value: function focus() {
	      this._rootDOMNode.focus();
	    }

	    /**
	     * Shifts focus away from a <textarea /> DOM element.
	     */

	  }, {
	    key: 'blur',
	    value: function blur() {
	      this._rootDOMNode.blur();
	    }
	  }, {
	    key: 'value',
	    get: function get() {
	      return this._rootDOMNode.value;
	    }

	    /**
	     * Set the current value of <textarea /> DOM node.
	     */
	    ,
	    set: function set(val) {
	      this._rootDOMNode.value = val;
	    }

	    /**
	     * Read the current selectionStart of <textarea /> from DOM.
	     */

	  }, {
	    key: 'selectionStart',
	    get: function get() {
	      return this._rootDOMNode.selectionStart;
	    }

	    /**
	     * Set the current selectionStart of <textarea /> DOM node.
	     */
	    ,
	    set: function set(selectionStart) {
	      this._rootDOMNode.selectionStart = selectionStart;
	    }

	    /**
	     * Read the current selectionEnd of <textarea /> from DOM.
	     */

	  }, {
	    key: 'selectionEnd',
	    get: function get() {
	      return this._rootDOMNode.selectionEnd;
	    }

	    /**
	     * Set the current selectionEnd of <textarea /> DOM node.
	     */
	    ,
	    set: function set(selectionEnd) {
	      this._rootDOMNode.selectionEnd = selectionEnd;
	    }
	  }]);

	  return TextareaAutosize;
	}(_react2.default.Component), _class.propTypes = {
	  /**
	   * Current textarea value.
	   */
	  value: _react2.default.PropTypes.string,

	  /**
	   * Callback on value change.
	   */
	  onChange: _react2.default.PropTypes.func,

	  /**
	   * Callback on height changes.
	   */
	  onHeightChange: _react2.default.PropTypes.func,

	  /**
	   * Try to cache DOM measurements performed by component so that we don't
	   * touch DOM when it's not needed.
	   *
	   * This optimization doesn't work if we dynamically style <textarea />
	   * component.
	   */
	  useCacheForDOMMeasurements: _react2.default.PropTypes.bool,

	  /**
	   * Minimal numbder of rows to show.
	   */
	  rows: _react2.default.PropTypes.number,

	  /**
	   * Alias for `rows`.
	   */
	  minRows: _react2.default.PropTypes.number,

	  /**
	   * Maximum number of rows to show.
	   */
	  maxRows: _react2.default.PropTypes.number
	}, _class.defaultProps = {
	  onChange: emptyFunction,
	  onHeightChange: emptyFunction,
	  useCacheForDOMMeasurements: false
	}, _temp);
	exports.default = TextareaAutosize;


	function onNextFrame(cb) {
	  if (window.requestAnimationFrame) {
	    return window.requestAnimationFrame(cb);
	  }
	  return window.setTimeout(cb, 1);
	}

	function clearNextFrameAction(nextFrameId) {
	  if (window.cancelAnimationFrame) {
	    window.cancelAnimationFrame(nextFrameId);
	  } else {
	    window.clearTimeout(nextFrameId);
	  }
	}


/***/ },
/* 474 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = calculateNodeHeight;
	/**
	 * calculateNodeHeight(uiTextNode, useCache = false)
	 */

	var HIDDEN_TEXTAREA_STYLE = '\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';

	var SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];

	var computedStyleCache = {};
	var hiddenTextarea = void 0;

	function calculateNodeHeight(uiTextNode) {
	  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	  var minRows = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	  var maxRows = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

	  if (!hiddenTextarea) {
	    hiddenTextarea = document.createElement('textarea');
	    document.body.appendChild(hiddenTextarea);
	  }

	  // Copy all CSS properties that have an impact on the height of the content in
	  // the textbox

	  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache);

	  var paddingSize = _calculateNodeStyling.paddingSize;
	  var borderSize = _calculateNodeStyling.borderSize;
	  var boxSizing = _calculateNodeStyling.boxSizing;
	  var sizingStyle = _calculateNodeStyling.sizingStyle;

	  // Need to have the overflow attribute to hide the scrollbar otherwise
	  // text-lines will not calculated properly as the shadow will technically be
	  // narrower for content

	  hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);
	  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';

	  var minHeight = -Infinity;
	  var maxHeight = Infinity;
	  var height = hiddenTextarea.scrollHeight;

	  if (boxSizing === 'border-box') {
	    // border-box: add border, since height = content + padding + border
	    height = height + borderSize;
	  } else if (boxSizing === 'content-box') {
	    // remove padding, since height = content
	    height = height - paddingSize;
	  }

	  if (minRows !== null || maxRows !== null) {
	    // measure height of a textarea with a single row
	    hiddenTextarea.value = 'x';
	    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;
	    if (minRows !== null) {
	      minHeight = singleRowHeight * minRows;
	      if (boxSizing === 'border-box') {
	        minHeight = minHeight + paddingSize + borderSize;
	      }
	      height = Math.max(minHeight, height);
	    }
	    if (maxRows !== null) {
	      maxHeight = singleRowHeight * maxRows;
	      if (boxSizing === 'border-box') {
	        maxHeight = maxHeight + paddingSize + borderSize;
	      }
	      height = Math.min(maxHeight, height);
	    }
	  }
	  return { height: height, minHeight: minHeight, maxHeight: maxHeight };
	}

	function calculateNodeStyling(node) {
	  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');

	  if (useCache && computedStyleCache[nodeRef]) {
	    return computedStyleCache[nodeRef];
	  }

	  var style = window.getComputedStyle(node);

	  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');

	  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));

	  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));

	  var sizingStyle = SIZING_STYLE.map(function (name) {
	    return name + ':' + style.getPropertyValue(name);
	  }).join(';');

	  var nodeInfo = {
	    sizingStyle: sizingStyle,
	    paddingSize: paddingSize,
	    borderSize: borderSize,
	    boxSizing: boxSizing
	  };

	  if (useCache && nodeRef) {
	    computedStyleCache[nodeRef] = nodeInfo;
	  }

	  return nodeInfo;
	}


/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Touchable
	 */

	'use strict';

	/* @edit start */var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};
	var BoundingDimensions=__webpack_require__(476);
	var keyMirror=__webpack_require__(22);
	var normalizeColor=__webpack_require__(297);
	var Position=__webpack_require__(477);
	var React=__webpack_require__(1);
	var TouchEventUtils=__webpack_require__(478);
	var UIManager=__webpack_require__(262);
	var View=__webpack_require__(308);
	/* @edit end */

	/**
	 * `Touchable`: Taps done right.
	 *
	 * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`
	 * will measure time/geometry and tells you when to give feedback to the user.
	 *
	 * ====================== Touchable Tutorial ===============================
	 * The `Touchable` mixin helps you handle the "press" interaction. It analyzes
	 * the geometry of elements, and observes when another responder (scroll view
	 * etc) has stolen the touch lock. It notifies your component when it should
	 * give feedback to the user. (bouncing/highlighting/unhighlighting).
	 *
	 * - When a touch was activated (typically you highlight)
	 * - When a touch was deactivated (typically you unhighlight)
	 * - When a touch was "pressed" - a touch ended while still within the geometry
	 *   of the element, and no other element (like scroller) has "stolen" touch
	 *   lock ("responder") (Typically you bounce the element).
	 *
	 * A good tap interaction isn't as simple as you might think. There should be a
	 * slight delay before showing a highlight when starting a touch. If a
	 * subsequent touch move exceeds the boundary of the element, it should
	 * unhighlight, but if that same touch is brought back within the boundary, it
	 * should rehighlight again. A touch can move in and out of that boundary
	 * several times, each time toggling highlighting, but a "press" is only
	 * triggered if that touch ends while within the element's boundary and no
	 * scroller (or anything else) has stolen the lock on touches.
	 *
	 * To create a new type of component that handles interaction using the
	 * `Touchable` mixin, do the following:
	 *
	 * - Initialize the `Touchable` state.
	 *
	 *   getInitialState: function() {
	 *     return merge(this.touchableGetInitialState(), yourComponentState);
	 *   }
	 *
	 * - Choose the rendered component who's touches should start the interactive
	 *   sequence. On that rendered node, forward all `Touchable` responder
	 *   handlers. You can choose any rendered node you like. Choose a node whose
	 *   hit target you'd like to instigate the interaction sequence:
	 *
	 *   // In render function:
	 *   return (
	 *     <View
	 *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}
	 *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}
	 *       onResponderGrant={this.touchableHandleResponderGrant}
	 *       onResponderMove={this.touchableHandleResponderMove}
	 *       onResponderRelease={this.touchableHandleResponderRelease}
	 *       onResponderTerminate={this.touchableHandleResponderTerminate}>
	 *       <View>
	 *         Even though the hit detection/interactions are triggered by the
	 *         wrapping (typically larger) node, we usually end up implementing
	 *         custom logic that highlights this inner one.
	 *       </View>
	 *     </View>
	 *   );
	 *
	 * - You may set up your own handlers for each of these events, so long as you
	 *   also invoke the `touchable*` handlers inside of your custom handler.
	 *
	 * - Implement the handlers on your component class in order to provide
	 *   feedback to the user. See documentation for each of these class methods
	 *   that you should implement.
	 *
	 *   touchableHandlePress: function() {
	 *      this.performBounceAnimation();  // or whatever you want to do.
	 *   },
	 *   touchableHandleActivePressIn: function() {
	 *     this.beginHighlighting(...);  // Whatever you like to convey activation
	 *   },
	 *   touchableHandleActivePressOut: function() {
	 *     this.endHighlighting(...);  // Whatever you like to convey deactivation
	 *   },
	 *
	 * - There are more advanced methods you can implement (see documentation below):
	 *   touchableGetHighlightDelayMS: function() {
	 *     return 20;
	 *   }
	 *   // In practice, *always* use a predeclared constant (conserve memory).
	 *   touchableGetPressRectOffset: function() {
	 *     return {top: 20, left: 20, right: 20, bottom: 100};
	 *   }
	 */

	/**
	 * Touchable states.
	 */
	var States=keyMirror({
	NOT_RESPONDER:null,// Not the responder
	RESPONDER_INACTIVE_PRESS_IN:null,// Responder, inactive, in the `PressRect`
	RESPONDER_INACTIVE_PRESS_OUT:null,// Responder, inactive, out of `PressRect`
	RESPONDER_ACTIVE_PRESS_IN:null,// Responder, active, in the `PressRect`
	RESPONDER_ACTIVE_PRESS_OUT:null,// Responder, active, out of `PressRect`
	RESPONDER_ACTIVE_LONG_PRESS_IN:null,// Responder, active, in the `PressRect`, after long press threshold
	RESPONDER_ACTIVE_LONG_PRESS_OUT:null,// Responder, active, out of `PressRect`, after long press threshold
	ERROR:null});


	/**
	 * Quick lookup map for states that are considered to be "active"
	 */
	var IsActive={
	RESPONDER_ACTIVE_PRESS_OUT:true,
	RESPONDER_ACTIVE_PRESS_IN:true};


	/**
	 * Quick lookup for states that are considered to be "pressing" and are
	 * therefore eligible to result in a "selection" if the press stops.
	 */
	var IsPressingIn={
	RESPONDER_INACTIVE_PRESS_IN:true,
	RESPONDER_ACTIVE_PRESS_IN:true,
	RESPONDER_ACTIVE_LONG_PRESS_IN:true};


	var IsLongPressingIn={
	RESPONDER_ACTIVE_LONG_PRESS_IN:true};


	/**
	 * Inputs to the state machine.
	 */
	var Signals=keyMirror({
	DELAY:null,
	RESPONDER_GRANT:null,
	RESPONDER_RELEASE:null,
	RESPONDER_TERMINATED:null,
	ENTER_PRESS_RECT:null,
	LEAVE_PRESS_RECT:null,
	LONG_PRESS_DETECTED:null});


	/**
	 * Mapping from States x Signals => States
	 */
	var Transitions={
	NOT_RESPONDER:{
	DELAY:States.ERROR,
	RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
	RESPONDER_RELEASE:States.ERROR,
	RESPONDER_TERMINATED:States.ERROR,
	ENTER_PRESS_RECT:States.ERROR,
	LEAVE_PRESS_RECT:States.ERROR,
	LONG_PRESS_DETECTED:States.ERROR},

	RESPONDER_INACTIVE_PRESS_IN:{
	DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
	RESPONDER_GRANT:States.ERROR,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
	LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
	LONG_PRESS_DETECTED:States.ERROR},

	RESPONDER_INACTIVE_PRESS_OUT:{
	DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
	RESPONDER_GRANT:States.ERROR,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
	LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
	LONG_PRESS_DETECTED:States.ERROR},

	RESPONDER_ACTIVE_PRESS_IN:{
	DELAY:States.ERROR,
	RESPONDER_GRANT:States.ERROR,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
	LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
	LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

	RESPONDER_ACTIVE_PRESS_OUT:{
	DELAY:States.ERROR,
	RESPONDER_GRANT:States.ERROR,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
	LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
	LONG_PRESS_DETECTED:States.ERROR},

	RESPONDER_ACTIVE_LONG_PRESS_IN:{
	DELAY:States.ERROR,
	RESPONDER_GRANT:States.ERROR,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
	LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
	LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

	RESPONDER_ACTIVE_LONG_PRESS_OUT:{
	DELAY:States.ERROR,
	RESPONDER_GRANT:States.ERROR,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
	LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
	LONG_PRESS_DETECTED:States.ERROR},

	error:{
	DELAY:States.NOT_RESPONDER,
	RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
	RESPONDER_RELEASE:States.NOT_RESPONDER,
	RESPONDER_TERMINATED:States.NOT_RESPONDER,
	ENTER_PRESS_RECT:States.NOT_RESPONDER,
	LEAVE_PRESS_RECT:States.NOT_RESPONDER,
	LONG_PRESS_DETECTED:States.NOT_RESPONDER}};



	// ==== Typical Constants for integrating into UI components ====
	// var HIT_EXPAND_PX = 20;
	// var HIT_VERT_OFFSET_PX = 10;
	var HIGHLIGHT_DELAY_MS=130;

	var PRESS_EXPAND_PX=20;

	var LONG_PRESS_THRESHOLD=500;

	var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD-HIGHLIGHT_DELAY_MS;

	var LONG_PRESS_ALLOWED_MOVEMENT=10;

	// Default amount "active" region protrudes beyond box

	/**
	 * By convention, methods prefixed with underscores are meant to be @private,
	 * and not @protected. Mixers shouldn't access them - not even to provide them
	 * as callback handlers.
	 *
	 *
	 * ========== Geometry =========
	 * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`
	 * is an abstract box that is extended beyond the `HitRect`.
	 *
	 *  +--------------------------+
	 *  |                          | - "Start" events in `HitRect` cause `HitRect`
	 *  |  +--------------------+  |   to become the responder.
	 *  |  |  +--------------+  |  | - `HitRect` is typically expanded around
	 *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.
	 *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,
	 *  |  |  |              |  |  |   and before letting up, the Visual React
	 *  |  |  +--------------+  |  |   will become "active". This makes it eligible
	 *  |  |     HitRect        |  |   for being highlighted (so long as the
	 *  |  +--------------------+  |   press remains in the `PressRect`).
	 *  |        PressRect     o   |
	 *  +----------------------|---+
	 *           Out Region    |
	 *                         +-----+ This gap between the `HitRect` and
	 *                                 `PressRect` allows a touch to move far away
	 *                                 from the original hit rect, and remain
	 *                                 highlighted, and eligible for a "Press".
	 *                                 Customize this via
	 *                                 `touchableGetPressRectOffset()`.
	 *
	 *
	 *
	 * ======= State Machine =======
	 *
	 * +-------------+ <---+ RESPONDER_RELEASE
	 * |NOT_RESPONDER|
	 * +-------------+ <---+ RESPONDER_TERMINATED
	 *     +
	 *     | RESPONDER_GRANT (HitRect)
	 *     v
	 * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+
	 * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|
	 * +---------------------------+          +-------------------------+                +------------------------------+
	 *     +            ^                         +           ^                                 +           ^
	 *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_
	 *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT
	 *     |            |                         |           |                                 |           |
	 *     v            +                         v           +                                 v           +
	 * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+
	 * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|
	 * +----------------------------+         +--------------------------+               +-------------------------------+
	 *
	 * T + DELAY => LONG_PRESS_DELAY_MS + DELAY
	 *
	 * Not drawn are the side effects of each transition. The most important side
	 * effect is the `touchableHandlePress` abstract method invocation that occurs
	 * when a responder is released while in either of the "Press" states.
	 *
	 * The other important side effects are the highlight abstract method
	 * invocations (internal callbacks) to be implemented by the mixer.
	 *
	 *
	 * @lends Touchable.prototype
	 */
	var TouchableMixin={
	/**
	   * Clear all timeouts on unmount
	   */
	componentWillUnmount:function componentWillUnmount(){
	this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);
	this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);
	this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);
	},

	/**
	   * It's prefer that mixins determine state in this way, having the class
	   * explicitly mix the state in the one and only `getInitialState` method.
	   *
	   * @return {object} State object to be placed inside of
	   * `this.state.touchable`.
	   */
	touchableGetInitialState:function touchableGetInitialState(){
	return{
	touchable:{touchState:undefined,responderID:null}};

	},

	// ==== Hooks to Gesture Responder system ====
	/**
	   * Must return true if embedded in a native platform scroll view.
	   */
	touchableHandleResponderTerminationRequest:function touchableHandleResponderTerminationRequest(){
	return!this.props.rejectResponderTermination;
	},

	/**
	   * Must return true to start the process of `Touchable`.
	   */
	touchableHandleStartShouldSetResponder:function touchableHandleStartShouldSetResponder(){
	return!this.props.disabled;
	},

	/**
	   * Return true to cancel press on long press.
	   */
	touchableLongPressCancelsPress:function touchableLongPressCancelsPress(){
	return true;
	},

	/**
	   * Place as callback for a DOM element's `onResponderGrant` event.
	   * @param {SyntheticEvent} e Synthetic event from event system.
	   *
	   */
	touchableHandleResponderGrant:function touchableHandleResponderGrant(e){
	var dispatchID=e.currentTarget;
	// Since e is used in a callback invoked on another event loop
	// (as in setTimeout etc), we need to call e.persist() on the
	// event to make sure it doesn't get reused in the event object pool.
	e.persist();

	this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);
	this.pressOutDelayTimeout=null;

	this.state.touchable.touchState=States.NOT_RESPONDER;
	this.state.touchable.responderID=dispatchID;
	this._receiveSignal(Signals.RESPONDER_GRANT,e);
	var delayMS=
	this.touchableGetHighlightDelayMS!==undefined?
	Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
	delayMS=isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
	if(delayMS!==0){
	this.touchableDelayTimeout=setTimeout(
	this._handleDelay.bind(this,e),
	delayMS);

	}else{
	this._handleDelay(e);
	}

	var longDelayMS=
	this.touchableGetLongPressDelayMS!==undefined?
	Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
	longDelayMS=isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
	this.longPressDelayTimeout=setTimeout(
	this._handleLongDelay.bind(this,e),
	longDelayMS+delayMS);

	},

	/**
	   * Place as callback for a DOM element's `onResponderRelease` event.
	   */
	touchableHandleResponderRelease:function touchableHandleResponderRelease(e){
	this._receiveSignal(Signals.RESPONDER_RELEASE,e);
	},

	/**
	   * Place as callback for a DOM element's `onResponderTerminate` event.
	   */
	touchableHandleResponderTerminate:function touchableHandleResponderTerminate(e){
	this._receiveSignal(Signals.RESPONDER_TERMINATED,e);
	},

	/**
	   * Place as callback for a DOM element's `onResponderMove` event.
	   */
	touchableHandleResponderMove:function touchableHandleResponderMove(e){
	// Not enough time elapsed yet, wait for highlight -
	// this is just a perf optimization.
	if(this.state.touchable.touchState===States.RESPONDER_INACTIVE_PRESS_IN){
	return;
	}

	// Measurement may not have returned yet.
	if(!this.state.touchable.positionOnActivate){
	return;
	}

	var positionOnActivate=this.state.touchable.positionOnActivate;
	var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
	var pressRectOffset=this.touchableGetPressRectOffset?
	this.touchableGetPressRectOffset():{
	left:PRESS_EXPAND_PX,
	right:PRESS_EXPAND_PX,
	top:PRESS_EXPAND_PX,
	bottom:PRESS_EXPAND_PX};


	var pressExpandLeft=pressRectOffset.left;
	var pressExpandTop=pressRectOffset.top;
	var pressExpandRight=pressRectOffset.right;
	var pressExpandBottom=pressRectOffset.bottom;

	var hitSlop=this.touchableGetHitSlop?
	this.touchableGetHitSlop():null;

	if(hitSlop){
	pressExpandLeft+=hitSlop.left;
	pressExpandTop+=hitSlop.top;
	pressExpandRight+=hitSlop.right;
	pressExpandBottom+=hitSlop.bottom;
	}

	var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
	var pageX=touch&&touch.pageX;
	var pageY=touch&&touch.pageY;

	if(this.pressInLocation){
	var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
	if(movedDistance>LONG_PRESS_ALLOWED_MOVEMENT){
	this._cancelLongPressDelayTimeout();
	}
	}

	var isTouchWithinActive=
	pageX>positionOnActivate.left-pressExpandLeft&&
	pageY>positionOnActivate.top-pressExpandTop&&
	pageX<
	positionOnActivate.left+
	dimensionsOnActivate.width+
	pressExpandRight&&
	pageY<
	positionOnActivate.top+
	dimensionsOnActivate.height+
	pressExpandBottom;
	if(isTouchWithinActive){
	this._receiveSignal(Signals.ENTER_PRESS_RECT,e);
	var curState=this.state.touchable.touchState;
	if(curState===States.RESPONDER_INACTIVE_PRESS_IN){
	// fix for t7967420
	this._cancelLongPressDelayTimeout();
	}
	}else{
	this._cancelLongPressDelayTimeout();
	this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);
	}
	},

	// ==== Abstract Application Callbacks ====

	/**
	   * Invoked when the item should be highlighted. Mixers should implement this
	   * to visually distinguish the `VisualRect` so that the user knows that
	   * releasing a touch will result in a "selection" (analog to click).
	   *
	   * @abstract
	   * touchableHandleActivePressIn: function,
	   */

	/**
	   * Invoked when the item is "active" (in that it is still eligible to become
	   * a "select") but the touch has left the `PressRect`. Usually the mixer will
	   * want to unhighlight the `VisualRect`. If the user (while pressing) moves
	   * back into the `PressRect` `touchableHandleActivePressIn` will be invoked
	   * again and the mixer should probably highlight the `VisualRect` again. This
	   * event will not fire on an `touchEnd/mouseUp` event, only move events while
	   * the user is depressing the mouse/touch.
	   *
	   * @abstract
	   * touchableHandleActivePressOut: function
	   */

	/**
	   * Invoked when the item is "selected" - meaning the interaction ended by
	   * letting up while the item was either in the state
	   * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.
	   *
	   * @abstract
	   * touchableHandlePress: function
	   */

	/**
	   * Invoked when the item is long pressed - meaning the interaction ended by
	   * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If
	   * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will
	   * be called as it normally is. If `touchableHandleLongPress` is provided, by
	   * default any `touchableHandlePress` callback will not be invoked. To
	   * override this default behavior, override `touchableLongPressCancelsPress`
	   * to return false. As a result, `touchableHandlePress` will be called when
	   * lifting up, even if `touchableHandleLongPress` has also been called.
	   *
	   * @abstract
	   * touchableHandleLongPress: function
	   */

	/**
	   * Returns the number of millis to wait before triggering a highlight.
	   *
	   * @abstract
	   * touchableGetHighlightDelayMS: function
	   */

	/**
	   * Returns the amount to extend the `HitRect` into the `PressRect`. Positive
	   * numbers mean the size expands outwards.
	   *
	   * @abstract
	   * touchableGetPressRectOffset: function
	   */



	// ==== Internal Logic ====

	/**
	   * Measures the `HitRect` node on activation. The Bounding rectangle is with
	   * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`
	   * should result in points that are in the same coordinate system as an
	   * event's `globalX/globalY` data values.
	   *
	   * - Consider caching this for the lifetime of the component, or possibly
	   *   being able to share this cache between any `ScrollMap` view.
	   *
	   * @sideeffects
	   * @private
	   */
	_remeasureMetricsOnActivation:function _remeasureMetricsOnActivation(e){
	/* @edit begin */
	UIManager.measure(
	e.nativeEvent.target,
	this._handleQueryLayout);

	/* @edit end */
	},

	_handleQueryLayout:function _handleQueryLayout(l,t,w,h,globalX,globalY){
	this.state.touchable.positionOnActivate&&
	Position.release(this.state.touchable.positionOnActivate);
	this.state.touchable.dimensionsOnActivate&&
	BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
	this.state.touchable.positionOnActivate=Position.getPooled(globalX,globalY);
	this.state.touchable.dimensionsOnActivate=BoundingDimensions.getPooled(w,h);
	},

	_handleDelay:function _handleDelay(e){
	this.touchableDelayTimeout=null;
	this._receiveSignal(Signals.DELAY,e);
	},

	_handleLongDelay:function _handleLongDelay(e){
	this.longPressDelayTimeout=null;
	var curState=this.state.touchable.touchState;
	if(curState!==States.RESPONDER_ACTIVE_PRESS_IN&&
	curState!==States.RESPONDER_ACTIVE_LONG_PRESS_IN){
	console.error('Attempted to transition from state `'+curState+'` to `'+
	States.RESPONDER_ACTIVE_LONG_PRESS_IN+'`, which is not supported. This is '+
	'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
	}else{
	this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);
	}
	},

	/**
	   * Receives a state machine signal, performs side effects of the transition
	   * and stores the new state. Validates the transition as well.
	   *
	   * @param {Signals} signal State machine signal.
	   * @throws Error if invalid state transition or unrecognized signal.
	   * @sideeffects
	   */
	_receiveSignal:function _receiveSignal(signal,e){
	var responderID=this.state.touchable.responderID;
	var curState=this.state.touchable.touchState;
	var nextState=Transitions[curState]&&Transitions[curState][signal];
	if(!responderID&&signal===Signals.RESPONDER_RELEASE){
	return;
	}
	if(!nextState){
	throw new Error(
	'Unrecognized signal `'+signal+'` or state `'+curState+
	'` for Touchable responder `'+responderID+'`');

	}
	if(nextState===States.ERROR){
	throw new Error(
	'Touchable cannot transition from `'+curState+'` to `'+signal+
	'` for responder `'+responderID+'`');

	}
	if(curState!==nextState){
	this._performSideEffectsForTransition(curState,nextState,signal,e);
	this.state.touchable.touchState=nextState;
	}
	},

	_cancelLongPressDelayTimeout:function _cancelLongPressDelayTimeout(){
	this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);
	this.longPressDelayTimeout=null;
	},

	_isHighlight:function _isHighlight(state){
	return state===States.RESPONDER_ACTIVE_PRESS_IN||
	state===States.RESPONDER_ACTIVE_LONG_PRESS_IN;
	},

	_savePressInLocation:function _savePressInLocation(e){
	var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
	var pageX=touch&&touch.pageX;
	var pageY=touch&&touch.pageY;
	var locationX=touch&&touch.locationX;
	var locationY=touch&&touch.locationY;
	this.pressInLocation={pageX:pageX,pageY:pageY,locationX:locationX,locationY:locationY};
	},

	_getDistanceBetweenPoints:function _getDistanceBetweenPoints(aX,aY,bX,bY){
	var deltaX=aX-bX;
	var deltaY=aY-bY;
	return Math.sqrt(deltaX*deltaX+deltaY*deltaY);
	},

	/**
	   * Will perform a transition between touchable states, and identify any
	   * highlighting or unhighlighting that must be performed for this particular
	   * transition.
	   *
	   * @param {States} curState Current Touchable state.
	   * @param {States} nextState Next Touchable state.
	   * @param {Signal} signal Signal that triggered the transition.
	   * @param {Event} e Native event.
	   * @sideeffects
	   */
	_performSideEffectsForTransition:function _performSideEffectsForTransition(curState,nextState,signal,e){var _this=this;
	var curIsHighlight=this._isHighlight(curState);
	var newIsHighlight=this._isHighlight(nextState);

	var isFinalSignal=
	signal===Signals.RESPONDER_TERMINATED||
	signal===Signals.RESPONDER_RELEASE;

	if(isFinalSignal){
	this._cancelLongPressDelayTimeout();
	}

	if(!IsActive[curState]&&IsActive[nextState]){
	this._remeasureMetricsOnActivation(e);
	}

	if(IsPressingIn[curState]&&signal===Signals.LONG_PRESS_DETECTED){
	this.touchableHandleLongPress&&this.touchableHandleLongPress(e);
	}

	if(newIsHighlight&&!curIsHighlight){
	this._savePressInLocation(e);
	this.touchableHandleActivePressIn&&this.touchableHandleActivePressIn(e);
	}else if(!newIsHighlight&&curIsHighlight&&this.touchableHandleActivePressOut){
	if(this.touchableGetPressOutDelayMS&&this.touchableGetPressOutDelayMS()){
	this.pressOutDelayTimeout=setTimeout(function(){
	_this.touchableHandleActivePressOut(e);
	},this.touchableGetPressOutDelayMS());
	}else{
	this.touchableHandleActivePressOut(e);
	}
	}

	if(IsPressingIn[curState]&&signal===Signals.RESPONDER_RELEASE){
	var hasLongPressHandler=!!this.props.onLongPress;
	var pressIsLongButStillCallOnPress=
	IsLongPressingIn[curState]&&(// We *are* long pressing..
	!hasLongPressHandler||// But either has no long handler
	!this.touchableLongPressCancelsPress()// or we're told to ignore it.
	);

	var shouldInvokePress=!IsLongPressingIn[curState]||pressIsLongButStillCallOnPress;
	if(shouldInvokePress&&this.touchableHandlePress){
	this.touchableHandlePress(e);
	}
	}

	this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);
	this.touchableDelayTimeout=null;
	}};



	var Touchable={
	Mixin:TouchableMixin,
	TOUCH_TARGET_DEBUG:false,// Highlights all touchable targets. Toggle with Inspector.
	/**
	   * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).
	   */
	renderDebugView:function renderDebugView(_ref){var color=_ref.color;var hitSlop=_ref.hitSlop;
	if(!Touchable.TOUCH_TARGET_DEBUG){
	return null;
	}
	if(true){
	throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
	}
	var debugHitSlopStyle={};
	hitSlop=hitSlop||{top:0,bottom:0,left:0,right:0};
	for(var key in hitSlop){
	debugHitSlopStyle[key]=-hitSlop[key];
	}
	var hexColor='#'+('00000000'+normalizeColor(color).toString(16)).substr(-8);
	return(
	React.createElement(View,{
	pointerEvents:'none',
	style:_extends({
	position:'absolute',
	borderColor:hexColor.slice(0,-2)+'55',// More opaque
	borderWidth:1,
	borderStyle:'dashed',
	backgroundColor:hexColor.slice(0,-2)+'0F'},
	debugHitSlopStyle)}));



	}};


	module.exports=Touchable;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 */

	'use strict';

	var PooledClass=__webpack_require__(5);

	var twoArgumentPooler=PooledClass.twoArgumentPooler;

	/**
	 * PooledClass representing the bounding rectangle of a region.
	 *
	 * @param {number} width Width of bounding rectangle.
	 * @param {number} height Height of bounding rectangle.
	 * @constructor BoundingDimensions
	 */
	function BoundingDimensions(width,height){
	this.width=width;
	this.height=height;
	}

	BoundingDimensions.prototype.destructor=function(){
	this.width=null;
	this.height=null;
	};

	/**
	 * @param {HTMLElement} element Element to return `BoundingDimensions` for.
	 * @return {BoundingDimensions} Bounding dimensions of `element`.
	 */
	BoundingDimensions.getPooledFromElement=function(element){
	return BoundingDimensions.getPooled(
	element.offsetWidth,
	element.offsetHeight);

	};

	PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

	module.exports=BoundingDimensions;

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 */

	'use strict';

	var PooledClass=__webpack_require__(5);

	var twoArgumentPooler=PooledClass.twoArgumentPooler;

	/**
	 * Position does not expose methods for construction via an `HTMLDOMElement`,
	 * because it isn't meaningful to construct such a thing without first defining
	 * a frame of reference.
	 *
	 * @param {number} windowStartKey Key that window starts at.
	 * @param {number} windowEndKey Key that window ends at.
	 */
	function Position(left,top){
	this.left=left;
	this.top=top;
	}

	Position.prototype.destructor=function(){
	this.left=null;
	this.top=null;
	};

	PooledClass.addPoolingTo(Position,twoArgumentPooler);

	module.exports=Position;

/***/ },
/* 478 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	var TouchEventUtils = {
	  /**
	   * Utility function for common case of extracting out the primary touch from a
	   * touch event.
	   * - `touchEnd` events usually do not have the `touches` property.
	   *   http://stackoverflow.com/questions/3666929/
	   *   mobile-sarai-touchend-event-not-firing-when-last-touch-is-removed
	   *
	   * @param {Event} nativeEvent Native event that may or may not be a touch.
	   * @return {TouchesObject?} an object with pageX and pageY or null.
	   */
	  extractSingleTouch: function extractSingleTouch(nativeEvent) {
	    var touches = nativeEvent.touches;
	    var changedTouches = nativeEvent.changedTouches;
	    var hasTouches = touches && touches.length > 0;
	    var hasChangedTouches = changedTouches && changedTouches.length > 0;

	    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
	  }
	};

	module.exports = TouchEventUtils;

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule TouchableBounce
	 * 
	 */
	'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

	var Animated=__webpack_require__(175);
	var EdgeInsetsPropType=__webpack_require__(310);
	var NativeMethodsMixin=__webpack_require__(261);
	var React=__webpack_require__(1);
	var StyleSheet=__webpack_require__(291);
	var Touchable=__webpack_require__(475);








	var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};

	/**
	 * Example of using the `TouchableMixin` to play well with other responder
	 * locking views including `ScrollView`. `TouchableMixin` provides touchable
	 * hooks (`this.touchableHandle*`) that we forward events to. In turn,
	 * `TouchableMixin` expects us to implement some abstract methods to handle
	 * interesting interactions such as `handleTouchablePress`.
	 */
	var TouchableBounce=React.createClass({displayName:'TouchableBounce',
	mixins:[Touchable.Mixin,NativeMethodsMixin],

	propTypes:{
	onPress:React.PropTypes.func,
	onPressIn:React.PropTypes.func,
	onPressOut:React.PropTypes.func,
	// The function passed takes a callback to start the animation which should
	// be run after this onPress handler is done. You can use this (for example)
	// to update UI before starting the animation.
	onPressWithCompletion:React.PropTypes.func,
	// the function passed is called after the animation is complete
	onPressAnimationComplete:React.PropTypes.func,
	/**
	     * When the scroll view is disabled, this defines how far your touch may
	     * move off of the button, before deactivating the button. Once deactivated,
	     * try moving it back and you'll see that the button is once again
	     * reactivated! Move it back and forth several times while the scroll view
	     * is disabled. Ensure you pass in a constant to reduce memory allocations.
	     */
	pressRetentionOffset:EdgeInsetsPropType,
	/**
	     * This defines how far your touch can start away from the button. This is
	     * added to `pressRetentionOffset` when moving off of the button.
	     * ** NOTE **
	     * The touch area never extends past the parent view bounds and the Z-index
	     * of sibling views always takes precedence if a touch hits two overlapping
	     * views.
	     */
	hitSlop:EdgeInsetsPropType},


	getInitialState:function getInitialState(){
	return _extends({},
	this.touchableGetInitialState(),{
	scale:new Animated.Value(1)});

	},

	bounceTo:function bounceTo(
	value,
	velocity,
	bounciness,
	callback)
	{
	Animated.spring(this.state.scale,{
	toValue:value,
	velocity:velocity,
	bounciness:bounciness}).
	start(callback);
	},

	/**
	   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are
	   * defined on your component.
	   */
	touchableHandleActivePressIn:function touchableHandleActivePressIn(e){
	this.bounceTo(0.93,0.1,0);
	this.props.onPressIn&&this.props.onPressIn(e);
	},

	touchableHandleActivePressOut:function touchableHandleActivePressOut(e){
	this.bounceTo(1,0.4,0);
	this.props.onPressOut&&this.props.onPressOut(e);
	},

	touchableHandlePress:function touchableHandlePress(e){var _this=this;
	var onPressWithCompletion=this.props.onPressWithCompletion;
	if(onPressWithCompletion){
	onPressWithCompletion(function(){
	_this.state.scale.setValue(0.93);
	_this.bounceTo(1,10,10,_this.props.onPressAnimationComplete);
	});
	return;
	}

	this.bounceTo(1,10,10,this.props.onPressAnimationComplete);
	this.props.onPress&&this.props.onPress(e);
	},

	touchableGetPressRectOffset:function touchableGetPressRectOffset(){
	return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;
	},

	touchableGetHitSlop:function touchableGetHitSlop(){
	return this.props.hitSlop;
	},

	touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){
	return 0;
	},

	render:function render(){
	var scaleTransform=[{scale:this.state.scale}];
	var propsTransform=this.props.style.transform;
	var transform=propsTransform&&Array.isArray(propsTransform)?propsTransform.concat(scaleTransform):scaleTransform;

	return(
	React.createElement(Animated.View,{
	accessible:true,
	accessibilityLabel:this.props.accessibilityLabel,
	accessibilityRole:this.props.accessibilityRole||'button',
	testID:this.props.testID,
	hitSlop:this.props.hitSlop,
	onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
	onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
	onResponderGrant:this.touchableHandleResponderGrant,
	onResponderMove:this.touchableHandleResponderMove,
	onResponderRelease:this.touchableHandleResponderRelease,
	onResponderTerminate:this.touchableHandleResponderTerminate,
	style:[styles.root,this.props.style,{transform:transform}],
	tabIndex:'0'},

	this.props.children));


	}});


	var styles=StyleSheet.create({
	root:{
	cursor:'pointer',
	userSelect:'none'}});



	module.exports=TouchableBounce;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule TouchableHighlight
	 * @noflow
	 */
	'use strict';

	// Note (avik): add  when Flow supports spread properties in propTypes
	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};
	var ColorPropType=__webpack_require__(296);
	var NativeMethodsMixin=__webpack_require__(261);
	var React=__webpack_require__(1);
	var StyleSheet=__webpack_require__(291);
	var TimerMixin=__webpack_require__(481);
	var Touchable=__webpack_require__(475);
	var TouchableWithoutFeedback=__webpack_require__(482);
	var View=__webpack_require__(308);

	var ensureComponentIsNative=__webpack_require__(484);
	var ensurePositiveDelayProps=__webpack_require__(483);
	var keyOf=__webpack_require__(24);
	var merge=__webpack_require__(307);



	var DEFAULT_PROPS={
	accessibilityRole:'button',
	activeOpacity:0.8,
	underlayColor:'black'};


	var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};

	/**
	 * A wrapper for making views respond properly to touches.
	 * On press down, the opacity of the wrapped view is decreased, which allows
	 * the underlay color to show through, darkening or tinting the view.  The
	 * underlay comes from adding a view to the view hierarchy, which can sometimes
	 * cause unwanted visual artifacts if not used correctly, for example if the
	 * backgroundColor of the wrapped view isn't explicitly set to an opaque color.
	 *
	 * Example:
	 *
	 * ```
	 * renderButton: function() {
	 *   return (
	 *     <TouchableHighlight onPress={this._onPressButton}>
	 *       <Image
	 *         style={styles.button}
	 *         source={require('image!myButton')}
	 *       />
	 *     </TouchableHighlight>
	 *   );
	 * },
	 * ```
	 * > **NOTE**: TouchableHighlight supports only one child
	 * >
	 * > If you wish to have several child components, wrap them in a View.
	 */

	var TouchableHighlight=React.createClass({displayName:'TouchableHighlight',
	propTypes:_extends({},
	TouchableWithoutFeedback.propTypes,{
	/**
	     * Determines what the opacity of the wrapped view should be when touch is
	     * active.
	     */
	activeOpacity:React.PropTypes.number,
	/**
	     * The color of the underlay that will show through when the touch is
	     * active.
	     */
	underlayColor:ColorPropType,
	style:View.propTypes.style,
	/**
	     * Called immediately after the underlay is shown
	     */
	onShowUnderlay:React.PropTypes.func,
	/**
	     * Called immediately after the underlay is hidden
	     */
	onHideUnderlay:React.PropTypes.func}),


	mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

	getDefaultProps:function getDefaultProps(){return DEFAULT_PROPS;},

	// Performance optimization to avoid constantly re-generating these objects.
	computeSyntheticState:function computeSyntheticState(props){var
	activeOpacity=props.activeOpacity;var style=props.style;var underlayColor=props.underlayColor;
	return{
	activeProps:{
	style:{
	opacity:activeOpacity}},


	activeUnderlayProps:{
	style:{
	backgroundColor:underlayColor}},


	underlayStyle:[
	INACTIVE_UNDERLAY_PROPS.style,
	props.style]};


	},

	getInitialState:function getInitialState(){
	return merge(this.touchableGetInitialState(),this.computeSyntheticState(this.props));
	},

	componentDidMount:function componentDidMount(){
	ensurePositiveDelayProps(this.props);
	ensureComponentIsNative(this.refs[CHILD_REF]);
	},

	componentDidUpdate:function componentDidUpdate(){
	ensureComponentIsNative(this.refs[CHILD_REF]);
	},

	componentWillReceiveProps:function componentWillReceiveProps(nextProps){
	ensurePositiveDelayProps(nextProps);
	if(nextProps.activeOpacity!==this.props.activeOpacity||
	nextProps.underlayColor!==this.props.underlayColor||
	nextProps.style!==this.props.style){
	this.setState(this.computeSyntheticState(nextProps));
	}
	},

	// viewConfig: {
	//   uiViewClassName: 'RCTView',
	//   validAttributes: ReactNativeViewAttributes.RCTView
	// },

	/**
	   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are
	   * defined on your component.
	   */
	touchableHandleActivePressIn:function touchableHandleActivePressIn(e){
	this.clearTimeout(this._hideTimeout);
	this._hideTimeout=null;
	this._showUnderlay();
	this.props.onPressIn&&this.props.onPressIn(e);
	},

	touchableHandleActivePressOut:function touchableHandleActivePressOut(e){
	if(!this._hideTimeout){
	this._hideUnderlay();
	}
	this.props.onPressOut&&this.props.onPressOut(e);
	},

	touchableHandlePress:function touchableHandlePress(e){
	this.clearTimeout(this._hideTimeout);
	this._showUnderlay();
	this._hideTimeout=this.setTimeout(this._hideUnderlay,
	this.props.delayPressOut||100);
	this.props.onPress&&this.props.onPress(e);
	},

	touchableHandleLongPress:function touchableHandleLongPress(e){
	this.props.onLongPress&&this.props.onLongPress(e);
	},

	touchableGetPressRectOffset:function touchableGetPressRectOffset(){
	return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;
	},

	touchableGetHitSlop:function touchableGetHitSlop(){
	return this.props.hitSlop;
	},

	touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){
	return this.props.delayPressIn;
	},

	touchableGetLongPressDelayMS:function touchableGetLongPressDelayMS(){
	return this.props.delayLongPress;
	},

	touchableGetPressOutDelayMS:function touchableGetPressOutDelayMS(){
	return this.props.delayPressOut;
	},

	_showUnderlay:function _showUnderlay(){
	if(!this.isMounted()||!this._hasPressHandler()){
	return;
	}

	this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
	this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
	this.props.onShowUnderlay&&this.props.onShowUnderlay();
	},

	_hideUnderlay:function _hideUnderlay(){
	this.clearTimeout(this._hideTimeout);
	this._hideTimeout=null;
	if(this._hasPressHandler()&&this.refs[UNDERLAY_REF]){
	this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
	this.refs[UNDERLAY_REF].setNativeProps(_extends({},
	INACTIVE_UNDERLAY_PROPS,{
	style:this.state.underlayStyle}));

	this.props.onHideUnderlay&&this.props.onHideUnderlay();
	}
	},

	_hasPressHandler:function _hasPressHandler(){
	return!!(
	this.props.onPress||
	this.props.onPressIn||
	this.props.onPressOut||
	this.props.onLongPress);

	},

	_onKeyEnter:function _onKeyEnter(e,callback){
	var ENTER=13;
	if(e.keyCode===ENTER){
	callback&&callback(e);
	}
	},

	render:function render(){var _this=this;
	return(
	React.createElement(View,{
	accessible:true,
	accessibilityLabel:this.props.accessibilityLabel,
	accessibilityRole:this.props.accessibilityRole,
	disabled:this.props.disabled,
	hitSlop:this.props.hitSlop,
	onKeyDown:function onKeyDown(e){_this._onKeyEnter(e,_this.touchableHandleActivePressIn);},
	onKeyPress:function onKeyPress(e){_this._onKeyEnter(e,_this.touchableHandlePress);},
	onKeyUp:function onKeyUp(e){_this._onKeyEnter(e,_this.touchableHandleActivePressOut);},
	onLayout:this.props.onLayout,
	onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
	onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
	onResponderGrant:this.touchableHandleResponderGrant,
	onResponderMove:this.touchableHandleResponderMove,
	onResponderRelease:this.touchableHandleResponderRelease,
	onResponderTerminate:this.touchableHandleResponderTerminate,
	ref:UNDERLAY_REF,
	style:[
	styles.root,
	this.props.disabled&&styles.disabled,
	this.state.underlayStyle],

	tabIndex:this.props.disabled?null:'0',
	testID:this.props.testID},
	React.cloneElement(
	React.Children.only(this.props.children),
	{
	ref:CHILD_REF})));




	}});


	var CHILD_REF=keyOf({childRef:null});
	var UNDERLAY_REF=keyOf({underlayRef:null});
	var INACTIVE_CHILD_PROPS={
	style:StyleSheet.create({x:{opacity:1.0}}).x};

	var INACTIVE_UNDERLAY_PROPS={
	style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


	var styles=StyleSheet.create({
	root:{
	cursor:'pointer',
	userSelect:'none'},

	disabled:{
	cursor:'default'}});



	module.exports=TouchableHighlight;

/***/ },
/* 481 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/*
	 *  Copyright (c) 2015-present, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';

	var GLOBAL = typeof window === 'undefined' ? global : window;

	var setter = function(_setter, _clearer, array) {
	  return function(callback, delta) {
	    var id = _setter(function() {
	      _clearer.call(this, id);
	      callback.apply(this, arguments);
	    }.bind(this), delta);

	    if (!this[array]) {
	      this[array] = [id];
	    } else {
	      this[array].push(id);
	    }
	    return id;
	  };
	};

	var clearer = function(_clearer, array) {
	  return function(id) {
	    if (this[array]) {
	      var index = this[array].indexOf(id);
	      if (index !== -1) {
	        this[array].splice(index, 1);
	      }
	    }
	    _clearer(id);
	  };
	};

	var _timeouts = 'TimerMixin_timeouts';
	var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);
	var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

	var _intervals = 'TimerMixin_intervals';
	var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);
	var _setInterval = setter(GLOBAL.setInterval, function() {/* noop */}, _intervals);

	var _immediates = 'TimerMixin_immediates';
	var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);
	var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

	var _rafs = 'TimerMixin_rafs';
	var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);
	var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

	var TimerMixin = {
	  componentWillUnmount: function() {
	    this[_timeouts] && this[_timeouts].forEach(function(id) {
	      GLOBAL.clearTimeout(id);
	    });
	    this[_timeouts] = null;
	    this[_intervals] && this[_intervals].forEach(function(id) {
	      GLOBAL.clearInterval(id);
	    });
	    this[_intervals] = null;
	    this[_immediates] && this[_immediates].forEach(function(id) {
	      GLOBAL.clearImmediate(id);
	    });
	    this[_immediates] = null;
	    this[_rafs] && this[_rafs].forEach(function(id) {
	      GLOBAL.cancelAnimationFrame(id);
	    });
	    this[_rafs] = null;
	  },

	  setTimeout: _setTimeout,
	  clearTimeout: _clearTimeout,

	  setInterval: _setInterval,
	  clearInterval: _clearInterval,

	  setImmediate: _setImmediate,
	  clearImmediate: _clearImmediate,

	  requestAnimationFrame: _requestAnimationFrame,
	  cancelAnimationFrame: _cancelAnimationFrame,
	};

	module.exports = TimerMixin;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule TouchableWithoutFeedback
	 * 
	 */
	'use strict';

	var EdgeInsetsPropType=__webpack_require__(310);
	var React=__webpack_require__(1);
	var TimerMixin=__webpack_require__(481);
	var Touchable=__webpack_require__(475);
	var View=__webpack_require__(308);
	var ensurePositiveDelayProps=__webpack_require__(483);
	var warning=__webpack_require__(10);
	var StyleSheet=__webpack_require__(291);



	var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};

	/**
	 * Do not use unless you have a very good reason. All the elements that
	 * respond to press should have a visual feedback when touched. This is
	 * one of the primary reason a "web" app doesn't feel "native".
	 *
	 * > **NOTE**: TouchableWithoutFeedback supports only one child
	 * >
	 * > If you wish to have several child components, wrap them in a View.
	 */
	var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback',
	mixins:[TimerMixin,Touchable.Mixin],

	propTypes:{
	accessible:View.propTypes.accessible,
	accessibilityLabel:View.propTypes.accessibilityLabel,
	accessibilityRole:View.propTypes.accessibilityRole,
	/**
	     * If true, disable all interactions for this component.
	     */
	disabled:React.PropTypes.bool,
	/**
	     * Called when the touch is released, but not if cancelled (e.g. by a scroll
	     * that steals the responder lock).
	     */
	onPress:React.PropTypes.func,
	onPressIn:React.PropTypes.func,
	onPressOut:React.PropTypes.func,
	/**
	     * Invoked on mount and layout changes with
	     *
	     *   `{nativeEvent: {layout: {x, y, width, height}}}`
	     */
	onLayout:React.PropTypes.func,

	onLongPress:React.PropTypes.func,

	/**
	     * Delay in ms, from the start of the touch, before onPressIn is called.
	     */
	delayPressIn:React.PropTypes.number,
	/**
	     * Delay in ms, from the release of the touch, before onPressOut is called.
	     */
	delayPressOut:React.PropTypes.number,
	/**
	     * Delay in ms, from onPressIn, before onLongPress is called.
	     */
	delayLongPress:React.PropTypes.number,
	/**
	     * When the scroll view is disabled, this defines how far your touch may
	     * move off of the button, before deactivating the button. Once deactivated,
	     * try moving it back and you'll see that the button is once again
	     * reactivated! Move it back and forth several times while the scroll view
	     * is disabled. Ensure you pass in a constant to reduce memory allocations.
	     */
	pressRetentionOffset:EdgeInsetsPropType,
	/**
	     * This defines how far your touch can start away from the button. This is
	     * added to `pressRetentionOffset` when moving off of the button.
	     * ** NOTE **
	     * The touch area never extends past the parent view bounds and the Z-index
	     * of sibling views always takes precedence if a touch hits two overlapping
	     * views.
	     */
	hitSlop:EdgeInsetsPropType},


	getInitialState:function getInitialState(){
	return this.touchableGetInitialState();
	},

	componentDidMount:function componentDidMount(){
	ensurePositiveDelayProps(this.props);
	},

	componentWillReceiveProps:function componentWillReceiveProps(nextProps){
	ensurePositiveDelayProps(nextProps);
	},

	/**
	   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are
	   * defined on your component.
	   */
	touchableHandlePress:function touchableHandlePress(e){
	this.props.onPress&&this.props.onPress(e);
	},

	touchableHandleActivePressIn:function touchableHandleActivePressIn(e){
	this.props.onPressIn&&this.props.onPressIn(e);
	},

	touchableHandleActivePressOut:function touchableHandleActivePressOut(e){
	this.props.onPressOut&&this.props.onPressOut(e);
	},

	touchableHandleLongPress:function touchableHandleLongPress(e){
	this.props.onLongPress&&this.props.onLongPress(e);
	},

	touchableGetPressRectOffset:function touchableGetPressRectOffset(){
	return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;
	},

	touchableGetHitSlop:function touchableGetHitSlop(){
	return this.props.hitSlop;
	},

	touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){
	return this.props.delayPressIn||0;
	},

	touchableGetLongPressDelayMS:function touchableGetLongPressDelayMS(){
	return this.props.delayLongPress===0?0:
	this.props.delayLongPress||500;
	},

	touchableGetPressOutDelayMS:function touchableGetPressOutDelayMS(){
	return this.props.delayPressOut||0;
	},

	render:function render(){
	// Note(avik): remove dynamic typecast once Flow has been upgraded
	var child=React.Children.only(this.props.children);
	var children=child.props.children;
	warning(
	!child.type||child.type.displayName!=='Text',
	'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See '+(
	child._owner&&child._owner.getName&&child._owner.getName()||'<unknown>'));

	if(Touchable.TOUCH_TARGET_DEBUG&&child.type&&child.type.displayName==='View'){
	if(!Array.isArray(children)){
	children=[children];
	}
	children.push(Touchable.renderDebugView({color:'red',hitSlop:this.props.hitSlop}));
	}
	var style=Touchable.TOUCH_TARGET_DEBUG&&child.type&&child.type.displayName==='Text'?
	[
	styles.root,
	this.props.disabled&&styles.disabled,
	child.props.style,
	{color:'red'}]:

	[
	styles.root,
	this.props.disabled&&styles.disabled,
	child.props.style];

	return React.cloneElement(child,{
	accessible:this.props.accessible!==false,
	accessibilityLabel:this.props.accessibilityLabel,
	accessibilityRole:this.props.accessibilityRole,
	disabled:this.props.disabled,
	testID:this.props.testID,
	onLayout:this.props.onLayout,
	hitSlop:this.props.hitSlop,
	onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
	onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
	onResponderGrant:this.touchableHandleResponderGrant,
	onResponderMove:this.touchableHandleResponderMove,
	onResponderRelease:this.touchableHandleResponderRelease,
	onResponderTerminate:this.touchableHandleResponderTerminate,
	style:style,
	children:children,
	tabIndex:this.props.disabled?null:'0'});

	}});


	var styles=StyleSheet.create({
	root:{
	cursor:'pointer'},

	disabled:{
	cursor:'default'}});



	module.exports=TouchableWithoutFeedback;

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ensurePositiveDelayProps
	 * 
	 */
	'use strict';

	var invariant=__webpack_require__(7);

	var ensurePositiveDelayProps=function ensurePositiveDelayProps(props){
	invariant(
	!(props.delayPressIn<0||props.delayPressOut<0||
	props.delayLongPress<0),
	'Touchable components cannot have negative delay properties');

	};

	module.exports=ensurePositiveDelayProps;

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ensureComponentIsNative
	 * 
	 */
	'use strict';

	var invariant=__webpack_require__(7);

	var ensureComponentIsNative=function ensureComponentIsNative(component){
	invariant(
	component&&typeof component.setNativeProps==='function',
	'Touchable child must either be native or forward setNativeProps to a '+
	'native component');

	};

	module.exports=ensureComponentIsNative;

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule TouchableOpacity
	 * @noflow
	 */
	'use strict';

	// Note (avik): add  when Flow supports spread properties in propTypes
	var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};
	var Animated=__webpack_require__(175);
	var NativeMethodsMixin=__webpack_require__(261);
	var React=__webpack_require__(1);
	var StyleSheet=__webpack_require__(291);
	var TimerMixin=__webpack_require__(481);
	var Touchable=__webpack_require__(475);
	var TouchableWithoutFeedback=__webpack_require__(482);

	var ensurePositiveDelayProps=__webpack_require__(483);
	var flattenStyle=StyleSheet.flatten;



	var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};

	/**
	 * A wrapper for making views respond properly to touches.
	 * On press down, the opacity of the wrapped view is decreased, dimming it.
	 * This is done without actually changing the view hierarchy, and in general is
	 * easy to add to an app without weird side-effects.
	 *
	 * Example:
	 *
	 * ```
	 * renderButton: function() {
	 *   return (
	 *     <TouchableOpacity onPress={this._onPressButton}>
	 *       <Image
	 *         style={styles.button}
	 *         source={require('image!myButton')}
	 *       />
	 *     </TouchableOpacity>
	 *   );
	 * },
	 * ```
	 */
	var TouchableOpacity=React.createClass({displayName:'TouchableOpacity',
	mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin],

	propTypes:_extends({},
	TouchableWithoutFeedback.propTypes,{
	/**
	     * Determines what the opacity of the wrapped view should be when touch is
	     * active.
	     */
	activeOpacity:React.PropTypes.number}),


	getDefaultProps:function getDefaultProps(){
	return{
	accessibilityRole:'button',
	activeOpacity:0.2};

	},

	getInitialState:function getInitialState(){
	return _extends({},
	this.touchableGetInitialState(),{
	anim:new Animated.Value(1)});

	},

	componentDidMount:function componentDidMount(){
	ensurePositiveDelayProps(this.props);
	},

	componentWillReceiveProps:function componentWillReceiveProps(nextProps){
	ensurePositiveDelayProps(nextProps);
	},

	setOpacityTo:function setOpacityTo(value){
	Animated.timing(
	this.state.anim,
	{toValue:value,duration:150}).
	start();
	},

	/**
	   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are
	   * defined on your component.
	   */
	touchableHandleActivePressIn:function touchableHandleActivePressIn(e){
	this.clearTimeout(this._hideTimeout);
	this._hideTimeout=null;
	this._opacityActive();
	this.props.onPressIn&&this.props.onPressIn(e);
	},

	touchableHandleActivePressOut:function touchableHandleActivePressOut(e){
	if(!this._hideTimeout){
	this._opacityInactive();
	}
	this.props.onPressOut&&this.props.onPressOut(e);
	},

	touchableHandlePress:function touchableHandlePress(e){
	this.clearTimeout(this._hideTimeout);
	this._opacityActive();
	this._hideTimeout=this.setTimeout(
	this._opacityInactive,
	this.props.delayPressOut||100);

	this.props.onPress&&this.props.onPress(e);
	},

	touchableHandleLongPress:function touchableHandleLongPress(e){
	this.props.onLongPress&&this.props.onLongPress(e);
	},

	touchableGetPressRectOffset:function touchableGetPressRectOffset(){
	return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;
	},

	touchableGetHitSlop:function touchableGetHitSlop(){
	return this.props.hitSlop;
	},

	touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){
	return this.props.delayPressIn||0;
	},

	touchableGetLongPressDelayMS:function touchableGetLongPressDelayMS(){
	return this.props.delayLongPress===0?0:
	this.props.delayLongPress||500;
	},

	touchableGetPressOutDelayMS:function touchableGetPressOutDelayMS(){
	return this.props.delayPressOut;
	},

	_opacityActive:function _opacityActive(){
	this.setOpacityTo(this.props.activeOpacity);
	},

	_opacityInactive:function _opacityInactive(){
	this.clearTimeout(this._hideTimeout);
	this._hideTimeout=null;
	var childStyle=flattenStyle(this.props.style)||{};
	this.setOpacityTo(
	childStyle.opacity===undefined?1:childStyle.opacity);

	},

	_onKeyEnter:function _onKeyEnter(e,callback){
	var ENTER=13;
	if(e.keyCode===ENTER){
	callback&&callback(e);
	}
	},

	render:function render(){var _this=this;
	return(
	React.createElement(Animated.View,{
	accessible:this.props.accessible!==false,
	accessibilityLabel:this.props.accessibilityLabel,
	accessibilityRole:this.props.accessibilityRole,
	disabled:this.props.disabled,
	style:[
	styles.root,
	this.props.disabled&&styles.disabled,
	this.props.style,
	{opacity:this.state.anim}],

	testID:this.props.testID,
	onLayout:this.props.onLayout,
	hitSlop:this.props.hitSlop,
	onKeyDown:function onKeyDown(e){_this._onKeyEnter(e,_this.touchableHandleActivePressIn);},
	onKeyPress:function onKeyPress(e){_this._onKeyEnter(e,_this.touchableHandlePress);},
	onKeyUp:function onKeyUp(e){_this._onKeyEnter(e,_this.touchableHandleActivePressOut);},
	onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
	onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
	onResponderGrant:this.touchableHandleResponderGrant,
	onResponderMove:this.touchableHandleResponderMove,
	onResponderRelease:this.touchableHandleResponderRelease,
	onResponderTerminate:this.touchableHandleResponderTerminate,
	tabIndex:this.props.disabled?null:'0'},

	this.props.children));


	}});


	var styles=StyleSheet.create({
	root:{
	cursor:'pointer',
	userSelect:'none'},

	disabled:{
	cursor:'default'}});



	module.exports=TouchableOpacity;

/***/ },
/* 486 */
/***/ function(module, exports) {

	// NativeModules shim
	module.exports={};

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable */
	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PointPropType
	 * 
	 */
	'use strict';

	var PropTypes=__webpack_require__(1).PropTypes;

	var createStrictShapeTypeChecker=__webpack_require__(306);

	var PointPropType=createStrictShapeTypeChecker({
	x:PropTypes.number,
	y:PropTypes.number});


	module.exports=PointPropType;

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.typography = exports.list = exports.card = exports.actionbar = exports.theme = exports.ScrollContainer = exports.Range = exports.Icon = exports.FloatButton = exports.Container = exports.Button = exports.Badge = exports.BR = exports.HR = exports.BLOCKQUOTE = exports.A = exports.P = exports.H6 = exports.H5 = exports.H4 = exports.H3 = exports.H2 = exports.H1 = exports.ItemThumb = exports.ItemIcon = exports.ItemFooter = exports.ItemHeader = exports.ItemDivider = exports.ItemText = exports.ItemContent = exports.Item = exports.ListItem = exports.List = exports.ImageHeader = exports.Card = exports.ActionItem = exports.ActionBar = undefined;

	var _index = __webpack_require__(489);

	var _index2 = __webpack_require__(507);

	var _index3 = __webpack_require__(512);

	var _Badge = __webpack_require__(517);

	var _Badge2 = _interopRequireDefault(_Badge);

	var _Button = __webpack_require__(525);

	var _Button2 = _interopRequireDefault(_Button);

	var _Container = __webpack_require__(526);

	var _Container2 = _interopRequireDefault(_Container);

	var _FloatButton = __webpack_require__(527);

	var _FloatButton2 = _interopRequireDefault(_FloatButton);

	var _Icon = __webpack_require__(505);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Range = __webpack_require__(528);

	var _Range2 = _interopRequireDefault(_Range);

	var _ScrollContainer = __webpack_require__(529);

	var _ScrollContainer2 = _interopRequireDefault(_ScrollContainer);

	var _Typography = __webpack_require__(509);

	var _index4 = __webpack_require__(491);

	var _index5 = _interopRequireDefault(_index4);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var actionbar = { ActionBar: _index.ActionBar, ActionItem: _index.ActionItem };
	var card = { Card: _index2.Card, ImageHeader: _index2.ImageHeader };
	var list = { List: _index3.List, ListItem: _index3.ListItem, Item: _index3.Item, ItemContent: _index3.ItemContent, ItemText: _index3.ItemText, ItemDivider: _index3.ItemDivider, ItemHeader: _index3.ItemHeader, ItemFooter: _index3.ItemFooter, ItemIcon: _index3.ItemIcon, ItemThumb: _index3.ItemThumb };
	var typography = { H1: _Typography.H1, H2: _Typography.H2, H3: _Typography.H3, H4: _Typography.H4, H5: _Typography.H5, H6: _Typography.H6, P: _Typography.P, A: _Typography.A, BLOCKQUOTE: _Typography.BLOCKQUOTE, HR: _Typography.HR, BR: _Typography.BR };
	exports.ActionBar = _index.ActionBar;
	exports.ActionItem = _index.ActionItem;
	exports.Card = _index2.Card;
	exports.ImageHeader = _index2.ImageHeader;
	exports.List = _index3.List;
	exports.ListItem = _index3.ListItem;
	exports.Item = _index3.Item;
	exports.ItemContent = _index3.ItemContent;
	exports.ItemText = _index3.ItemText;
	exports.ItemDivider = _index3.ItemDivider;
	exports.ItemHeader = _index3.ItemHeader;
	exports.ItemFooter = _index3.ItemFooter;
	exports.ItemIcon = _index3.ItemIcon;
	exports.ItemThumb = _index3.ItemThumb;
	exports.H1 = _Typography.H1;
	exports.H2 = _Typography.H2;
	exports.H3 = _Typography.H3;
	exports.H4 = _Typography.H4;
	exports.H5 = _Typography.H5;
	exports.H6 = _Typography.H6;
	exports.P = _Typography.P;
	exports.A = _Typography.A;
	exports.BLOCKQUOTE = _Typography.BLOCKQUOTE;
	exports.HR = _Typography.HR;
	exports.BR = _Typography.BR;
	exports.Badge = _Badge2.default;
	exports.Button = _Button2.default;
	exports.Container = _Container2.default;
	exports.FloatButton = _FloatButton2.default;
	exports.Icon = _Icon2.default;
	exports.Range = _Range2.default;
	exports.ScrollContainer = _ScrollContainer2.default;
	exports.theme = _index5.default;
	exports.actionbar = actionbar;
	exports.card = card;
	exports.list = list;
	exports.typography = typography;
	exports.default = {
	    ActionBar: _index.ActionBar, ActionItem: _index.ActionItem,
	    Card: _index2.Card, ImageHeader: _index2.ImageHeader,
	    List: _index3.List, ListItem: _index3.ListItem, Item: _index3.Item, ItemContent: _index3.ItemContent, ItemText: _index3.ItemText, ItemDivider: _index3.ItemDivider, ItemHeader: _index3.ItemHeader, ItemFooter: _index3.ItemFooter, ItemIcon: _index3.ItemIcon, ItemThumb: _index3.ItemThumb,
	    H1: _Typography.H1, H2: _Typography.H2, H3: _Typography.H3, H4: _Typography.H4, H5: _Typography.H5, H6: _Typography.H6, P: _Typography.P, A: _Typography.A, BLOCKQUOTE: _Typography.BLOCKQUOTE, HR: _Typography.HR, BR: _Typography.BR,
	    Badge: _Badge2.default, Button: _Button2.default, Container: _Container2.default, FloatButton: _FloatButton2.default, Icon: _Icon2.default, Range: _Range2.default, ScrollContainer: _ScrollContainer2.default,
	    theme: _index5.default,
	    actionbar: actionbar,
	    card: card,
	    list: list,
	    typography: typography
		};

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ActionItem = exports.ActionBar = undefined;

	var _ActionBar = __webpack_require__(490);

	var _ActionBar2 = _interopRequireDefault(_ActionBar);

	var _ActionItem = __webpack_require__(504);

	var _ActionItem2 = _interopRequireDefault(_ActionItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.ActionBar = _ActionBar2.default;
	exports.ActionItem = _ActionItem2.default;
	exports.default = {
	    ActionBar: _ActionBar2.default,
	    ActionItem: _ActionItem2.default
		};

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _index = __webpack_require__(491);

	var _index2 = _interopRequireDefault(_index);

	var _index3 = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var color = _index2.default.color;

	var ActionItemCenter = function ActionItemCenter(_ref) {
	    var children = _ref.children;
	    return _react2.default.createElement(_reactNative.View, { style: [_index3.actionBarStyles.actionBarItem, _index3.actionBarStyles.actionBarCenter] }, children);
	};
	var ActionItemLeft = function ActionItemLeft(_ref2) {
	    var children = _ref2.children;
	    return _react2.default.createElement(_reactNative.View, { style: [_index3.actionBarStyles.actionBarItem, _index3.actionBarStyles.actionBarLeft] }, children);
	};
	var ActionItemRight = function ActionItemRight(_ref3) {
	    var children = _ref3.children;
	    return _react2.default.createElement(_reactNative.View, { style: [_index3.actionBarStyles.actionBarItem, _index3.actionBarStyles.actionBarRight] }, children);
	};
	var ActionBar = function ActionBar(props) {
	    var tc = color(props);
	    var center = _react2.default.createElement(ActionItemCenter, null),
	        left = _react2.default.createElement(ActionItemLeft, null),
	        right = _react2.default.createElement(ActionItemRight, null);
	    if (props.title) {
	        if (typeof props.title === 'string') {
	            center = _react2.default.createElement(ActionItemCenter, null, _react2.default.createElement(_reactNative.Text, { style: [_index3.actionBarStyles.actionBarTitle, { color: tc.textColor }] }, props.title));
	        } else {
	            center = _react2.default.createElement(ActionItemCenter, null, props.title);
	        }
	    }
	    if (props.left) {
	        left = _react2.default.createElement(ActionItemLeft, null, props.left);
	    }
	    if (props.right) {
	        right = _react2.default.createElement(ActionItemRight, null, props.right);
	    }
	    return _react2.default.createElement(_reactNative.View, { style: [_index3.actionBarStyles.actionbar, props.header && _index3.actionBarStyles.actionbarHeader, props.footer && _index3.actionBarStyles.actionbarFooter, { backgroundColor: tc.backgroundColor }, props.style] }, left, center, right);
	};
	ActionBar.propTypes = {
	    title: _react.PropTypes.oneOfType([_react.PropTypes.instanceOf(_react.PropTypes.node), _react.PropTypes.string]),
	    left: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.arrayOf(_react.PropTypes.node)]),
	    right: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.arrayOf(_react.PropTypes.node)]),
	    footer: _react.PropTypes.bool,
	    header: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	ActionBar.defaultProps = {};
	exports.default = ActionBar;

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _materialui = __webpack_require__(492);

	var _materialui2 = _interopRequireDefault(_materialui);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var defaulttheme = {
	    white: "#FFFFFF",
	    black: "#000000",
	    light: "#FAFAFA",
	    gray: "#E0E0E0",
	    stable: "#F5F5F5",
	    primary: "#2196F3",
	    secondary: "#FFC107",
	    calm: "#0097A7",
	    energized: "#FF9800",
	    danger: "#F44336",
	    royal: "#7E57C2",
	    dark: "#424242",
	    border: "#EEEEEE",
	    underlay: "#EEEEEE",
	    clear: "rgba(0, 0, 0, 0)",
	    margin: 8,
	    padding: 8,
	    rowHeight: 50,
	    actionbarHeight: 44,
	    activeColorShade: -0.15,
	    buttonRadius: 5,
	    floatRadius: 28,
	    floatMiniRadius: 20,
	    floatShadow: 10
	};

	var _Dimensions$get = _reactNative.Dimensions.get('window');

	var height = _Dimensions$get.height;
	var width = _Dimensions$get.width;

	var componentToHex = function componentToHex(c) {
	    var hex = c.toString(16);
	    return hex.length === 1 ? "0" + hex : hex;
	};
	var rgbToHex = function rgbToHex(r, g, b) {
	    return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
	};
	var hexToRGB = function hexToRGB(hex) {
	    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	    return result ? {
	        r: parseInt(result[1], 16),
	        g: parseInt(result[2], 16),
	        b: parseInt(result[3], 16)
	    } : null;
	};
	var textFromRGB = function textFromRGB(r, g, b) {
	    return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? _materialui2.default.black || defaulttheme.black : _materialui2.default.white || defaulttheme.white;
	};
	var textFromHex = function textFromHex(hex) {
	    var rgb = hexToRGB(hex);
	    return textFromRGB(rgb.r, rgb.g, rgb.b);
	};
	var shade = function shade(hex, lum) {
	    hex = String(hex).replace(/[^0-9a-f]/gi, '');
	    if (hex.length < 6) {
	        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
	    }
	    lum = lum || 0;
	    var rgb = "#",
	        c = void 0,
	        i = void 0;
	    for (i = 0; i < 3; i++) {
	        c = parseInt(hex.substr(i * 2, 2), 16);
	        c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);
	        rgb += ("00" + c).substr(c.length);
	    }
	    return rgb;
	};
	var themeColor = function themeColor(props, active) {
	    var color = _materialui2.default.stable || defaulttheme.stable;
	    if (props.color) {
	        color = props.color;
	    } else if (props.primary) {
	        color = _materialui2.default.primary || defaulttheme.primary;
	    } else if (props.secondary) {
	        color = _materialui2.default.secondary || defaulttheme.secondary;
	    } else if (props.calm) {
	        color = _materialui2.default.calm || defaulttheme.calm;
	    } else if (props.energized) {
	        color = _materialui2.default.energized || defaulttheme.energized;
	    } else if (props.danger) {
	        color = _materialui2.default.danger || defaulttheme.danger;
	    } else if (props.royal) {
	        color = _materialui2.default.royal || defaulttheme.royal;
	    } else if (props.dark) {
	        color = _materialui2.default.dark || defaulttheme.dark;
	    } else if (props.light) {
	        color = _materialui2.default.light || defaulttheme.light;
	    } else if (props.gray) {
	        color = _materialui2.default.gray || defaulttheme.gray;
	    } else if (props.stable) {
	        color = _materialui2.default.stable || defaulttheme.stable;
	    } else if (props.white) {
	        color = _materialui2.default.white || defaulttheme.white;
	    } else if (props.black) {
	        color = _materialui2.default.black || defaulttheme.black;
	    } else if (props.clear) {
	        color = _materialui2.default.black || defaulttheme.black;
	    }
	    var activeColor = shade(color, _materialui2.default.activeColorShade || defaulttheme.activeColorShade || -0.15);
	    if (props.outline) {
	        if (active) {
	            return {
	                borderColor: color,
	                backgroundColor: color,
	                textColor: textFromHex(color),
	                activeColor: shade(color, 0)
	            };
	        } else {
	            return {
	                borderColor: color,
	                backgroundColor: _materialui2.default.clear || defaulttheme.clear,
	                textColor: color,
	                activeColor: activeColor
	            };
	        }
	    } else if (props.clear) {
	        return {
	            borderColor: _materialui2.default.clear || defaulttheme.clear,
	            backgroundColor: _materialui2.default.clear || defaulttheme.clear,
	            textColor: color,
	            activeColor: activeColor
	        };
	    }
	    return {
	        borderColor: color,
	        backgroundColor: color,
	        textColor: textFromHex(color),
	        activeColor: activeColor
	    };
	};
	var hasTheme = function hasTheme(props) {
	    if (props.primary || props.secondary || props.calm || props.energized || props.danger || props.royal || props.dark || props.light || props.gray || props.stable || props.white || props.black || props.clear) {
	        return true;
	    }
	    return false;
	};
	var setPosition = function setPosition(pos, dim, off) {
	    var center = (width - dim.w) / 2;
	    var middle = (height - dim.h) / 2;
	    var margin = _materialui2.default.margin || defaulttheme.margin;
	    var positionStyles = { position: 'absolute' };
	    switch (pos) {
	        case "TL":
	            positionStyles.top = off.v + margin;
	            positionStyles.left = off.h + margin;
	            break;
	        case "T":
	            positionStyles.top = off.v + margin;
	            positionStyles.left = center + margin;
	            break;
	        case "TR":
	            positionStyles.top = off.v + margin;
	            positionStyles.right = off.h + margin;
	            break;
	        case "ML":
	            positionStyles.top = middle + margin;
	            positionStyles.left = off.h + margin;
	            break;
	        case "M":
	            positionStyles.top = middle + margin;
	            positionStyles.left = center + margin;
	            break;
	        case "MR":
	            positionStyles.top = middle + margin;
	            positionStyles.right = off.h + margin;
	            break;
	        case "BL":
	            positionStyles.bottom = off.v + margin;
	            positionStyles.left = off.h + margin;
	            break;
	        case "B":
	            positionStyles.bottom = off.v + margin;
	            positionStyles.left = center + margin;
	            break;
	        case "BR":
	            positionStyles.bottom = off.v + margin;
	            positionStyles.right = off.h + margin;
	            break;
	    }
	    return positionStyles;
	};
	var helpers = {
	    colors: _materialui2.default,
	    rgbToHex: rgbToHex, hexToRGB: hexToRGB, textFromRGB: textFromRGB, textFromHex: textFromHex,
	    shade: shade, height: height, width: width,
	    hasTheme: hasTheme,
	    color: themeColor,
	    position: setPosition,
	    margin: _materialui2.default.margin || defaulttheme.margin,
	    padding: _materialui2.default.padding || defaulttheme.padding,
	    rowHeight: _materialui2.default.rowHeight || defaulttheme.rowHeight,
	    actionbarHeight: _materialui2.default.actionbarHeight || defaulttheme.actionbarHeight,
	    activeColorShade: _materialui2.default.activeColorShade || defaulttheme.activeColorShade,
	    buttonRadius: _materialui2.default.buttonRadius || defaulttheme.buttonRadius,
	    floatRadius: _materialui2.default.floatRadius || defaulttheme.floatRadius,
	    floatMiniRadius: _materialui2.default.floatMiniRadius || defaulttheme.floatMiniRadius,
	    floatShadow: _materialui2.default.floatShadow || defaulttheme.floatShadow
	};
		exports.default = helpers;

/***/ },
/* 492 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var colors = exports.colors = {
	    red50: '#ffebee',
	    red100: '#ffcdd2',
	    red200: '#ef9a9a',
	    red300: '#e57373',
	    red400: '#ef5350',
	    red500: '#f44336',
	    red600: '#e53935',
	    red700: '#d32f2f',
	    red800: '#c62828',
	    red900: '#b71c1c',
	    redA100: '#ff8a80',
	    redA200: '#ff5252',
	    redA400: '#ff1744',
	    redA700: '#d50000',
	    pink50: '#fce4ec',
	    pink100: '#f8bbd0',
	    pink200: '#f48fb1',
	    pink300: '#f06292',
	    pink400: '#ec407a',
	    pink500: '#e91e63',
	    pink600: '#d81b60',
	    pink700: '#c2185b',
	    pink800: '#ad1457',
	    pink900: '#880e4f',
	    pinkA100: '#ff80ab',
	    pinkA200: '#ff4081',
	    pinkA400: '#f50057',
	    pinkA700: '#c51162',
	    purple50: '#f3e5f5',
	    purple100: '#e1bee7',
	    purple200: '#ce93d8',
	    purple300: '#ba68c8',
	    purple400: '#ab47bc',
	    purple500: '#9c27b0',
	    purple600: '#8e24aa',
	    purple700: '#7b1fa2',
	    purple800: '#6a1b9a',
	    purple900: '#4a148c',
	    purpleA100: '#ea80fc',
	    purpleA200: '#e040fb',
	    purpleA400: '#d500f9',
	    purpleA700: '#aa00ff',
	    deepPurple50: '#ede7f6',
	    deepPurple100: '#d1c4e9',
	    deepPurple200: '#b39ddb',
	    deepPurple300: '#9575cd',
	    deepPurple400: '#7e57c2',
	    deepPurple500: '#673ab7',
	    deepPurple600: '#5e35b1',
	    deepPurple700: '#512da8',
	    deepPurple800: '#4527a0',
	    deepPurple900: '#311b92',
	    deepPurpleA100: '#b388ff',
	    deepPurpleA200: '#7c4dff',
	    deepPurpleA400: '#651fff',
	    deepPurpleA700: '#6200ea',
	    indigo50: '#e8eaf6',
	    indigo100: '#c5cae9',
	    indigo200: '#9fa8da',
	    indigo300: '#7986cb',
	    indigo400: '#5c6bc0',
	    indigo500: '#3f51b5',
	    indigo600: '#3949ab',
	    indigo700: '#303f9f',
	    indigo800: '#283593',
	    indigo900: '#1a237e',
	    indigoA100: '#8c9eff',
	    indigoA200: '#536dfe',
	    indigoA400: '#3d5afe',
	    indigoA700: '#304ffe',
	    blue50: '#e3f2fd',
	    blue100: '#bbdefb',
	    blue200: '#90caf9',
	    blue300: '#64b5f6',
	    blue400: '#42a5f5',
	    blue500: '#2196f3',
	    blue600: '#1e88e5',
	    blue700: '#1976d2',
	    blue800: '#1565c0',
	    blue900: '#0d47a1',
	    blueA100: '#82b1ff',
	    blueA200: '#448aff',
	    blueA400: '#2979ff',
	    blueA700: '#2962ff',
	    lightBlue50: '#e1f5fe',
	    lightBlue100: '#b3e5fc',
	    lightBlue200: '#81d4fa',
	    lightBlue300: '#4fc3f7',
	    lightBlue400: '#29b6f6',
	    lightBlue500: '#03a9f4',
	    lightBlue600: '#039be5',
	    lightBlue700: '#0288d1',
	    lightBlue800: '#0277bd',
	    lightBlue900: '#01579b',
	    lightBlueA100: '#80d8ff',
	    lightBlueA200: '#40c4ff',
	    lightBlueA400: '#00b0ff',
	    lightBlueA700: '#0091ea',
	    cyan50: '#e0f7fa',
	    cyan100: '#b2ebf2',
	    cyan200: '#80deea',
	    cyan300: '#4dd0e1',
	    cyan400: '#26c6da',
	    cyan500: '#00bcd4',
	    cyan600: '#00acc1',
	    cyan700: '#0097a7',
	    cyan800: '#00838f',
	    cyan900: '#006064',
	    cyanA100: '#84ffff',
	    cyanA200: '#18ffff',
	    cyanA400: '#00e5ff',
	    cyanA700: '#00b8d4',
	    teal50: '#e0f2f1',
	    teal100: '#b2dfdb',
	    teal200: '#80cbc4',
	    teal300: '#4db6ac',
	    teal400: '#26a69a',
	    teal500: '#009688',
	    teal600: '#00897b',
	    teal700: '#00796b',
	    teal800: '#00695c',
	    teal900: '#004d40',
	    tealA100: '#a7ffeb',
	    tealA200: '#64ffda',
	    tealA400: '#1de9b6',
	    tealA700: '#00bfa5',
	    green50: '#e8f5e9',
	    green100: '#c8e6c9',
	    green200: '#a5d6a7',
	    green300: '#81c784',
	    green400: '#66bb6a',
	    green500: '#4caf50',
	    green600: '#43a047',
	    green700: '#388e3c',
	    green800: '#2e7d32',
	    green900: '#1b5e20',
	    greenA100: '#b9f6ca',
	    greenA200: '#69f0ae',
	    greenA400: '#00e676',
	    greenA700: '#00c853',
	    lightGreen50: '#f1f8e9',
	    lightGreen100: '#dcedc8',
	    lightGreen200: '#c5e1a5',
	    lightGreen300: '#aed581',
	    lightGreen400: '#9ccc65',
	    lightGreen500: '#8bc34a',
	    lightGreen600: '#7cb342',
	    lightGreen700: '#689f38',
	    lightGreen800: '#558b2f',
	    lightGreen900: '#33691e',
	    lightGreenA100: '#ccff90',
	    lightGreenA200: '#b2ff59',
	    lightGreenA400: '#76ff03',
	    lightGreenA700: '#64dd17',
	    lime50: '#f9fbe7',
	    lime100: '#f0f4c3',
	    lime200: '#e6ee9c',
	    lime300: '#dce775',
	    lime400: '#d4e157',
	    lime500: '#cddc39',
	    lime600: '#c0ca33',
	    lime700: '#afb42b',
	    lime800: '#9e9d24',
	    lime900: '#827717',
	    limeA100: '#f4ff81',
	    limeA200: '#eeff41',
	    limeA400: '#c6ff00',
	    limeA700: '#aeea00',
	    yellow50: '#fffde7',
	    yellow100: '#fff9c4',
	    yellow200: '#fff59d',
	    yellow300: '#fff176',
	    yellow400: '#ffee58',
	    yellow500: '#ffeb3b',
	    yellow600: '#fdd835',
	    yellow700: '#fbc02d',
	    yellow800: '#f9a825',
	    yellow900: '#f57f17',
	    yellowA100: '#ffff8d',
	    yellowA200: '#ffff00',
	    yellowA400: '#ffea00',
	    yellowA700: '#ffd600',
	    amber50: '#fff8e1',
	    amber100: '#ffecb3',
	    amber200: '#ffe082',
	    amber300: '#ffd54f',
	    amber400: '#ffca28',
	    amber500: '#ffc107',
	    amber600: '#ffb300',
	    amber700: '#ffa000',
	    amber800: '#ff8f00',
	    amber900: '#ff6f00',
	    amberA100: '#ffe57f',
	    amberA200: '#ffd740',
	    amberA400: '#ffc400',
	    amberA700: '#ffab00',
	    orange50: '#fff3e0',
	    orange100: '#ffe0b2',
	    orange200: '#ffcc80',
	    orange300: '#ffb74d',
	    orange400: '#ffa726',
	    orange500: '#ff9800',
	    orange600: '#fb8c00',
	    orange700: '#f57c00',
	    orange800: '#ef6c00',
	    orange900: '#e65100',
	    orangeA100: '#ffd180',
	    orangeA200: '#ffab40',
	    orangeA400: '#ff9100',
	    orangeA700: '#ff6d00',
	    deepOrange50: '#fbe9e7',
	    deepOrange100: '#ffccbc',
	    deepOrange200: '#ffab91',
	    deepOrange300: '#ff8a65',
	    deepOrange400: '#ff7043',
	    deepOrange500: '#ff5722',
	    deepOrange600: '#f4511e',
	    deepOrange700: '#e64a19',
	    deepOrange800: '#d84315',
	    deepOrange900: '#bf360c',
	    deepOrangeA100: '#ff9e80',
	    deepOrangeA200: '#ff6e40',
	    deepOrangeA400: '#ff3d00',
	    deepOrangeA700: '#dd2c00',
	    brown50: '#efebe9',
	    brown100: '#d7ccc8',
	    brown200: '#bcaaa4',
	    brown300: '#a1887f',
	    brown400: '#8d6e63',
	    brown500: '#795548',
	    brown600: '#6d4c41',
	    brown700: '#5d4037',
	    brown800: '#4e342e',
	    brown900: '#3e2723',
	    blueGrey50: '#eceff1',
	    blueGrey100: '#cfd8dc',
	    blueGrey200: '#b0bec5',
	    blueGrey300: '#90a4ae',
	    blueGrey400: '#78909c',
	    blueGrey500: '#607d8b',
	    blueGrey600: '#546e7a',
	    blueGrey700: '#455a64',
	    blueGrey800: '#37474f',
	    blueGrey900: '#263238',
	    grey50: '#fafafa',
	    grey100: '#f5f5f5',
	    grey200: '#eeeeee',
	    grey300: '#e0e0e0',
	    grey400: '#bdbdbd',
	    grey500: '#9e9e9e',
	    grey600: '#757575',
	    grey700: '#616161',
	    grey800: '#424242',
	    grey900: '#212121',
	    black: '#000000',
	    white: '#ffffff',
	    transparent: 'rgba(0, 0, 0, 0)',
	    fullBlack: 'rgba(0, 0, 0, 1)',
	    darkBlack: 'rgba(0, 0, 0, 0.87)',
	    lightBlack: 'rgba(0, 0, 0, 0.54)',
	    minBlack: 'rgba(0, 0, 0, 0.26)',
	    faintBlack: 'rgba(0, 0, 0, 0.12)',
	    fullWhite: 'rgba(255, 255, 255, 1)',
	    darkWhite: 'rgba(255, 255, 255, 0.87)',
	    lightWhite: 'rgba(255, 255, 255, 0.54)'
	};
	var theme = {
	    white: colors.white,
	    black: colors.black,
	    light: colors.grey50,
	    gray: colors.grey300,
	    stable: colors.grey100,
	    primary: colors.blue500,
	    secondary: colors.amber500,
	    calm: colors.cyan500,
	    energized: colors.orange500,
	    danger: colors.red500,
	    royal: colors.deepPurple400,
	    dark: colors.grey800,
	    border: colors.grey200,
	    underlay: colors.grey200,
	    clear: colors.transparent,
	    colors: colors,
	    margin: 8,
	    padding: 8,
	    rowHeight: 50,
	    actionbarHeight: 44,
	    activeColorShade: -0.15,
	    buttonRadius: 5,
	    floatRadius: 28,
	    floatMiniRadius: 20,
	    floatShadow: 10
	};
		exports.default = theme;

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.typographyStyles = exports.rangeStyles = exports.listStyles = exports.iconStyles = exports.floatRadiusMini = exports.floatRadius = exports.floatShadow = exports.floatButtonStyles = exports.containerStyles = exports.cardShadow = exports.cardStyles = exports.buttonStyles = exports.badgeStyles = exports.actionBarStyles = undefined;

	var _actionbar = __webpack_require__(494);

	var _actionbar2 = _interopRequireDefault(_actionbar);

	var _badge = __webpack_require__(495);

	var _badge2 = _interopRequireDefault(_badge);

	var _button = __webpack_require__(496);

	var _button2 = _interopRequireDefault(_button);

	var _card = __webpack_require__(497);

	var _container = __webpack_require__(498);

	var _container2 = _interopRequireDefault(_container);

	var _floatbutton = __webpack_require__(499);

	var _icon = __webpack_require__(500);

	var _icon2 = _interopRequireDefault(_icon);

	var _list = __webpack_require__(501);

	var _list2 = _interopRequireDefault(_list);

	var _range = __webpack_require__(502);

	var _range2 = _interopRequireDefault(_range);

	var _typography = __webpack_require__(503);

	var _typography2 = _interopRequireDefault(_typography);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.actionBarStyles = _actionbar2.default;
	exports.badgeStyles = _badge2.default;
	exports.buttonStyles = _button2.default;
	exports.cardStyles = _card.styles;
	exports.cardShadow = _card.shadow;
	exports.containerStyles = _container2.default;
	exports.floatButtonStyles = _floatbutton.styles;
	exports.floatShadow = _floatbutton.shadow;
	exports.floatRadius = _floatbutton.radius;
	exports.floatRadiusMini = _floatbutton.radiusMini;
	exports.iconStyles = _icon2.default;
	exports.listStyles = _list2.default;
	exports.rangeStyles = _range2.default;
		exports.typographyStyles = _typography2.default;

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var margin = _themes2.default.margin;
	var padding = _themes2.default.padding;
	var width = _themes2.default.width;
	var actionbarHeight = _themes2.default.actionbarHeight;

	var sideWidth = 50;
	var statusbarHeight = 20;
	var styles = _reactNative.StyleSheet.create({
	    actionbar: {
	        height: actionbarHeight,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'space-between'
	    },
	    actionbarHeader: {
	        position: 'relative',
	        top: 0, left: 0, right: 0,
	        height: actionbarHeight + statusbarHeight,
	        paddingTop: statusbarHeight
	    },
	    actionbarFooter: {
	        alignSelf: 'flex-end',
	        width: width,
	        height: actionbarHeight
	    },
	    actionItem: {
	        flexDirection: 'row',
	        justifyContent: 'flex-start',
	        alignItems: 'center',
	        borderWidth: 0,
	        backgroundColor: colors.clear
	    },
	    actionItemText: {
	        flex: 1,
	        fontSize: 17
	    },
	    actionItemIcon: {
	        flex: 0,
	        marginRight: margin / 2
	    },
	    actionBarItem: {
	        flexDirection: 'row',
	        backgroundColor: colors.clear
	    },
	    actionBarCenter: {
	        flex: 1,
	        backgroundColor: colors.clear
	    },
	    actionBarTitle: {
	        flex: 1,
	        textAlign: 'center',
	        fontWeight: '600',
	        fontSize: 17
	    },
	    actionBarLeft: {
	        width: sideWidth,
	        justifyContent: 'flex-start',
	        paddingVertical: 0
	    },
	    actionBarRight: {
	        width: sideWidth,
	        justifyContent: 'flex-end',
	        paddingLeft: padding
	    }
	});
		exports.default = styles;

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var padding = _themes2.default.padding;

	var styles = _reactNative.StyleSheet.create({
	    badge: {
	        flex: 0,
	        paddingHorizontal: padding,
	        paddingVertical: 3,
	        borderRadius: 50
	    },
	    badgeText: {
	        backgroundColor: colors.clear,
	        textAlign: 'center',
	        fontWeight: '600',
	        fontSize: 14
	    }
	});
		exports.default = styles;

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var padding = _themes2.default.padding;
	var buttonRadius = _themes2.default.buttonRadius;

	var styles = _reactNative.StyleSheet.create({
	    button: {
	        flex: 0,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'center',
	        paddingHorizontal: padding * 2,
	        paddingVertical: padding,
	        borderRadius: buttonRadius
	    },
	    buttonText: {
	        flexDirection: 'row',
	        justifyContent: 'center',
	        alignItems: 'center',
	        backgroundColor: colors.clear,
	        textAlign: 'center',
	        fontSize: 14
	    },
	    outline: {
	        borderWidth: 1
	    },
	    clear: {
	        borderWidth: 0,
	        backgroundColor: colors.clear
	    },
	    round: {
	        borderRadius: 50
	    },
	    full: {
	        borderLeftWidth: 0,
	        borderRightWidth: 0,
	        borderRadius: 0
	    },
	    xsmall: {
	        paddingHorizontal: padding,
	        paddingVertical: padding / 2
	    },
	    small: {
	        paddingHorizontal: padding,
	        paddingVertical: padding
	    },
	    large: {
	        padding: padding * 2
	    },
	    textxsmall: {
	        fontSize: 10
	    },
	    textsmall: {
	        fontSize: 12
	    },
	    textlarge: {
	        fontSize: 20
	    },
	    disabled: {
	        opacity: 0.7
	    },
	    disabledtext: {}
	});
		exports.default = styles;

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.shadow = exports.styles = undefined;

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var margin = _themes2.default.margin;
	var padding = _themes2.default.padding;
	var width = _themes2.default.width;
	var styles = exports.styles = _reactNative.StyleSheet.create({
	    card: {
	        flexDirection: 'column',
	        marginBottom: 2 * margin,
	        borderRadius: 2,
	        backgroundColor: colors.white
	    },
	    header: {
	        padding: 2 * padding,
	        paddingBottom: padding,
	        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
	        borderBottomColor: colors.border
	    },
	    headerText: {
	        color: colors.dark
	    },
	    content: {
	        padding: padding
	    },
	    footer: {
	        padding: 2 * padding,
	        paddingBottom: padding,
	        borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
	        borderTopColor: colors.border
	    },
	    footerText: {
	        color: colors.gray
	    },
	    imageHeader: {
	        flex: 1,
	        justifyContent: 'flex-end',
	        alignItems: 'flex-start',
	        height: 200,
	        width: width - 2 * margin
	    },
	    imageHeaderText: {
	        backgroundColor: 'rgba(0,0,0,0.5)',
	        color: colors.white,
	        padding: 10,
	        fontSize: 16,
	        fontWeight: '600'
	    }
	});
	var shadow = exports.shadow = {
	    color: "rgba(0, 0, 0, 0.3)",
	    offset: {
	        width: 0,
	        height: 1
	    },
	    opacity: 1,
	    radius: 2
	};
		exports.default = styles;

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var padding = _themes2.default.padding;

	var styles = _reactNative.StyleSheet.create({
	    container: {
	        flex: 1,
	        backgroundColor: colors.light
	    },
	    padding: {
	        padding: padding
	    }
	});
		exports.default = styles;

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.shadow = exports.styles = exports.radiusMini = exports.radius = undefined;

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var margin = _themes2.default.margin;
	var floatMiniRadius = _themes2.default.floatMiniRadius;
	var floatRadius = _themes2.default.floatRadius;
	var radius = exports.radius = _reactNative.PixelRatio.getPixelSizeForLayoutSize(floatRadius);
	var radiusMini = exports.radiusMini = _reactNative.PixelRatio.getPixelSizeForLayoutSize(floatMiniRadius);
	var styles = exports.styles = _reactNative.StyleSheet.create({
	    container: {
	        alignSelf: 'flex-start'
	    },
	    button: {
	        flex: 0,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'center',
	        height: radius,
	        width: radius,
	        borderRadius: radius / 2
	    },
	    mini: {
	        height: radiusMini,
	        width: radiusMini,
	        borderRadius: radiusMini / 2
	    },
	    buttonIcon: {
	        flex: 0,
	        backgroundColor: colors.clear
	    },
	    disabled: {
	        opacity: 0.7
	    },
	    disabledtext: {}
	});
	var shadow = exports.shadow = {
	    color: "rgba(0, 0, 0, 0.3)",
	    offset: {
	        width: 0,
	        height: 1
	    },
	    opacity: 1,
	    radius: 2
	};
		exports.default = styles;

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var styles = _reactNative.StyleSheet.create({
	    icon: {
	        flex: 0
	    }
	});
		exports.default = styles;

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var margin = _themes2.default.margin;
	var padding = _themes2.default.padding;
	var rowHeight = _themes2.default.rowHeight;

	var styles = _reactNative.StyleSheet.create({
	    list: {
	        flex: 1,
	        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
	        borderColor: colors.clear,
	        backgroundColor: colors.light
	    },
	    listMargin: {
	        paddingHorizontal: padding * 2
	    },
	    item: {
	        flexDirection: 'row',
	        justifyContent: 'space-between',
	        alignItems: 'center',
	        paddingLeft: padding,
	        paddingRight: 0,
	        minHeight: rowHeight,
	        backgroundColor: colors.white
	    },
	    itemContent: {
	        flex: 1,
	        minHeight: rowHeight,
	        flexDirection: 'row',
	        justifyContent: 'flex-start',
	        alignItems: 'center',
	        paddingRight: padding,
	        backgroundColor: colors.white,
	        borderBottomColor: colors.border,
	        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
	    },
	    multilineContainer: {
	        minHeight: rowHeight,
	        backgroundColor: colors.clear,
	        justifyContent: 'flex-start',
	        alignItems: 'flex-start',
	        marginVertical: margin
	    },
	    itemMultilinePrimaryText: {
	        flex: 0,
	        fontSize: 16,
	        fontWeight: '400'
	    },
	    itemText: {
	        flex: 2,
	        flexDirection: 'column',
	        alignItems: 'flex-start',
	        justifyContent: 'center'
	    },
	    itemDivider: {
	        flex: 0,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'flex-start',
	        paddingLeft: margin,
	        paddingTop: margin * 2,
	        paddingBottom: margin,
	        backgroundColor: colors.light
	    },
	    itemDividerText: {
	        fontSize: 14,
	        fontWeight: '600'
	    },
	    noteText: {
	        flex: 0,
	        marginRight: margin,
	        textAlign: 'right',
	        color: colors.primary
	    },
	    badgeText: {
	        flex: 0,
	        marginRight: margin,
	        color: colors.primary
	    },
	    accessory: {
	        flex: 0,
	        marginRight: 0
	    },
	    itemNoLine: {
	        borderBottomColor: colors.clear
	    },
	    itemHeader: {
	        flex: 0,
	        height: rowHeight,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'flex-start',
	        paddingLeft: padding,
	        backgroundColor: colors.white,
	        borderBottomColor: colors.border,
	        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
	    },
	    itemHeaderText: {
	        fontSize: 14,
	        fontWeight: '600'
	    },
	    itemFooter: {
	        flex: 0,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'flex-start',
	        paddingHorizontal: padding,
	        backgroundColor: colors.light
	    },
	    itemFooterText: {
	        flex: 1,
	        fontSize: 12,
	        marginVertical: padding,
	        fontWeight: '200',
	        color: colors.dark
	    },
	    thumb: {
	        flex: 0,
	        width: rowHeight,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'center',
	        marginRight: margin
	    },
	    thumbImage: {
	        width: rowHeight,
	        height: rowHeight
	    },
	    avatar: {
	        borderRadius: 20
	    },
	    icon: {
	        flex: 0,
	        width: 32,
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'flex-start'
	    },
	    itemRight: {
	        flexDirection: 'row',
	        alignItems: 'center',
	        justifyContent: 'flex-end',
	        marginLeft: margin
	    }
	});
		exports.default = styles;

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _themes2.default.colors;
	var margin = _themes2.default.margin;
	var padding = _themes2.default.padding;
	var width = _themes2.default.width;

	var styles = _reactNative.StyleSheet.create({
	    range: {
	        flex: 0,
	        flexDirection: 'row',
	        justifyContent: 'space-between',
	        alignItems: 'center',
	        paddingHorizontal: padding,
	        paddingVertical: padding / 2
	    },
	    slider: {
	        flex: 1,
	        height: 10,
	        margin: margin
	    },
	    text: {
	        flex: 0,
	        color: colors.black,
	        fontWeight: '400',
	        fontSize: 12,
	        paddingHorizontal: padding / 2,
	        justifyContent: 'flex-start'
	    },
	    textRight: {
	        textAlign: 'left',
	        fontSize: 14,
	        justifyContent: 'flex-end'
	    },
	    icon: {
	        justifyContent: 'flex-start'
	    },
	    iconRight: {
	        justifyContent: 'flex-end'
	    }
	});
		exports.default = styles;

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var margin = _themes2.default.margin;
	var padding = _themes2.default.padding;
	var width = _themes2.default.width;
	var colors = _themes2.default.colors;

	var styles = _reactNative.StyleSheet.create({
	    h1: {
	        marginBottom: margin,
	        fontWeight: '500',
	        fontSize: 36
	    },
	    h2: {
	        marginBottom: margin,
	        fontWeight: '500',
	        fontSize: 30
	    },
	    h3: {
	        marginBottom: margin,
	        fontWeight: '500',
	        fontSize: 24
	    },
	    h4: {
	        marginBottom: margin,
	        fontWeight: '500',
	        fontSize: 18
	    },
	    h5: {
	        marginBottom: margin,
	        fontWeight: '500',
	        fontSize: 14
	    },
	    h6: {
	        marginBottom: margin,
	        fontWeight: '500',
	        fontSize: 12
	    },
	    hr: {
	        marginBottom: margin,
	        borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
	        borderBottomColor: colors.border
	    },
	    br: {
	        marginBottom: margin * 2
	    },
	    p: {
	        marginBottom: margin,
	        flexDirection: 'row',
	        flexWrap: 'wrap'
	    },
	    blockquote: {
	        paddingLeft: padding,
	        borderLeftWidth: 10,
	        borderLeftColor: colors.primary
	    },
	    blockquoteText: {
	        flexDirection: 'row',
	        flexWrap: 'wrap',
	        fontStyle: 'italic'
	    },
	    a: {
	        color: colors.primary
	    },
	    textLeft: {
	        textAlign: 'left'
	    },
	    textCenter: {
	        textAlign: 'center'
	    },
	    textRight: {
	        textAlign: 'right'
	    }
	});
		exports.default = styles;

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Icon = __webpack_require__(505);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _index = __webpack_require__(491);

	var _index2 = _interopRequireDefault(_index);

	var _index3 = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var colors = _index2.default.colors;
	var color = _index2.default.color;
	var margin = _index2.default.margin;

	var ActionItem = function ActionItem(props) {
	    var tc = color(props);
	    var contents = props.children;
	    if (props.children) {
	        content = _react2.default.createElement(_reactNative.View, null, props.children);
	    } else {
	        var _icon = void 0,
	            _label = void 0;
	        if (props.icon) {
	            if (typeof props.icon === 'string') {
	                _icon = _react2.default.createElement(_Icon2.default, { name: props.icon, color: tc.textColor, size: props.icon.size || 38, style: [_index3.actionBarStyles.actionItemIcon, props.icon.style] });
	            } else {
	                _icon = _react2.default.createElement(_Icon2.default, { name: props.icon.icon, set: props.icon.set, color: props.icon.theme && _index2.default[props.icon.theme] || tc.textColor, size: props.icon.size || 38, style: [_index3.actionBarStyles.actionItemIcon, props.icon.style] });
	            }
	        }
	        if (props.label) {
	            if (typeof props.label === 'string') {
	                _label = _react2.default.createElement(_reactNative.Text, { style: [_index3.actionBarStyles.actionItemText, { color: tc.textColor }] }, props.label);
	            } else {
	                _label = _react2.default.createElement(_reactNative.Text, { style: [_index3.actionBarStyles.actionItemText, { color: props.label.theme && colors[props.label.theme] || tc.textColor }] }, props.label.text);
	            }
	        }
	        contents = _react2.default.createElement(_reactNative.View, { style: [_index3.actionBarStyles.actionItem, props.disabled && _index3.actionBarStyles.disabled, { backgroundColor: tc.backgroundColor }, props.style] }, _icon, _label);
	    }
	    var action = props.disabled ? null : props.action;
	    return _react2.default.createElement(_reactNative.TouchableOpacity, { style: [{ marginHorizontal: margin, backgroundColor: 'rgba(0,0,0,0.3)' }], onPress: action }, contents);
	};
	ActionItem.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    label: _react.PropTypes.oneOfType([_react.PropTypes.shape({
	        text: _react2.default.PropTypes.string,
	        theme: _react2.default.PropTypes.string
	    }), _react.PropTypes.string]),
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.string]),
	    action: _react.PropTypes.func,
	    disabled: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	ActionItem.defaultProps = {
	    action: function action() {}
	};
		exports.default = ActionItem;

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var react_1 = __webpack_require__(1);
	var react_native_1 = __webpack_require__(30);
	var themes_1 = __webpack_require__(491);
	var styles_1 = __webpack_require__(493);
	var Icon = function Icon(props) {
	    var IconSet = function (set) {
	        return __webpack_require__(506);
	    }(props.set);
	    var tc = themes_1.default.color(props);
	    return react_1.default.createElement(IconSet, { name: props.name, size: "2x", color: tc.backgroundColor, style: [styles_1.iconStyles.icon, props.style] });
	};
	Icon.propTypes = {
	    name: react_1.PropTypes.string,
	    set: react_1.PropTypes.string,
	    size: react_1.PropTypes.number,
	    color: react_1.PropTypes.string,
	    style: react_1.PropTypes.any
	};
	Icon.defaultProps = {
	    set: react_native_1.Platform.OS === 'ios' ? 'FontAwesome' : 'MaterialIcons',
	    size: 24,
	    black: true
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Icon;

/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A React component for the font-awesome icon library.
	 *
	 *
	 * @param {Boolean} [border=false] Whether or not to show a border radius
	 * @param {String} [className] An extra set of CSS classes to add to the component
	 * @param {Object} [cssModule] Option to pass FontAwesome CSS as a module
	 * @param {Boolean} [fixedWidth=false] Make buttons fixed width
	 * @param {String} [flip=false] Flip the icon's orientation.
	 * @param {Boolean} [inverse=false]Inverse the icon's color
	 * @param {String} name Name of the icon to use
	 * @param {Boolean} [pulse=false] Rotate icon with 8 steps (rather than smoothly)
	 * @param {Number} [rotate] The degress to rotate the icon by
	 * @param {String} [size] The icon scaling size
	 * @param {Boolean} [spin=false] Spin the icon
	 * @param {String} [stack] Stack an icon on top of another
	 * @module FontAwesome
	 * @type {ReactClass}
	 */
	exports.default = _react2.default.createClass({

	  displayName: 'FontAwesome',

	  propTypes: {
	    border: _react2.default.PropTypes.bool,
	    className: _react2.default.PropTypes.string,
	    cssModule: _react2.default.PropTypes.object,
	    fixedWidth: _react2.default.PropTypes.bool,
	    flip: _react2.default.PropTypes.oneOf(['horizontal', 'vertical']),
	    inverse: _react2.default.PropTypes.bool,
	    name: _react2.default.PropTypes.string.isRequired,
	    pulse: _react2.default.PropTypes.bool,
	    rotate: _react2.default.PropTypes.oneOf([90, 180, 270]),
	    size: _react2.default.PropTypes.oneOf(['lg', '2x', '3x', '4x', '5x']),
	    spin: _react2.default.PropTypes.bool,
	    stack: _react2.default.PropTypes.oneOf(['1x', '2x'])
	  },

	  render: function render() {
	    var _props = this.props;
	    var border = _props.border;
	    var cssModule = _props.cssModule;
	    var className = _props.className;
	    var fixedWidth = _props.fixedWidth;
	    var flip = _props.flip;
	    var inverse = _props.inverse;
	    var name = _props.name;
	    var pulse = _props.pulse;
	    var rotate = _props.rotate;
	    var size = _props.size;
	    var spin = _props.spin;
	    var stack = _props.stack;

	    var props = _objectWithoutProperties(_props, ['border', 'cssModule', 'className', 'fixedWidth', 'flip', 'inverse', 'name', 'pulse', 'rotate', 'size', 'spin', 'stack']);

	    var classNames = [];

	    if (cssModule) {
	      classNames.push(cssModule['fa']);
	      classNames.push(cssModule['fa-' + name]);
	      size && classNames.push(cssModule['fa-' + size]);
	      spin && classNames.push(cssModule['fa-spin']);
	      pulse && classNames.push(cssModule['fa-pulse']);
	      border && classNames.push(cssModule['fa-border']);
	      fixedWidth && classNames.push(cssModule['fa-fw']);
	      inverse && classNames.push(cssModule['fa-inverse']);
	      flip && classNames.push(cssModule['fa-flip-' + flip]);
	      rotate && classNames.push(cssModule['fa-rotate-' + rotate]);
	      stack && classNames.push(cssModule['fa-stack-' + stack]);
	    } else {
	      classNames.push('fa');
	      classNames.push('fa-' + name);
	      size && classNames.push('fa-' + size);
	      spin && classNames.push('fa-spin');
	      pulse && classNames.push('fa-pulse');
	      border && classNames.push('fa-border');
	      fixedWidth && classNames.push('fa-fw');
	      inverse && classNames.push('fa-inverse');
	      flip && classNames.push('fa-flip-' + flip);
	      rotate && classNames.push('fa-rotate-' + rotate);
	      stack && classNames.push('fa-stack-' + stack);
	    }

	    // Add any custom class names at the end.
	    className && classNames.push(className);

	    return _react2.default.createElement('span', _extends({}, props, {
	      className: classNames.join(' ')
	    }));
	  }
	});
	module.exports = exports['default'];

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ImageHeader = exports.Card = undefined;

	var _Card = __webpack_require__(508);

	var _Card2 = _interopRequireDefault(_Card);

	var _ImageHeader = __webpack_require__(510);

	var _ImageHeader2 = _interopRequireDefault(_ImageHeader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Card = _Card2.default;
	exports.ImageHeader = _ImageHeader2.default;
	exports.default = {
	    Card: _Card2.default, ImageHeader: _ImageHeader2.default
		};

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Typography = __webpack_require__(509);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var Card = function Card(props) {
	    var header = void 0,
	        footer = void 0;
	    if (typeof props.header !== 'undefined') {
	        if (typeof props.header === 'string') {
	            header = _react2.default.createElement(_reactNative.View, { style: _styles.cardStyles.header }, _react2.default.createElement(_Typography.H5, { style: _styles.cardStyles.headerText }, props.header));
	        } else {
	            header = props.header;
	        }
	    }
	    if (typeof props.footer !== 'undefined') {
	        if (typeof props.footer === 'string') {
	            footer = _react2.default.createElement(_reactNative.View, { style: _styles.cardStyles.footer }, _react2.default.createElement(_Typography.H5, { style: _styles.cardStyles.footerText }, props.footer));
	        } else {
	            footer = _react2.default.createElement(_reactNative.View, { style: [_styles.cardStyles.footer, { padding: 0, paddingBottom: 0 }] }, props.footer);
	        }
	    }
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { shadowColor: _styles.cardShadow.color, shadowOffset: _styles.cardShadow.offset, shadowOpacity: _styles.cardShadow.opacity, shadowRadius: _styles.cardShadow.radius, style: [_styles.cardStyles.card, props.style] }), header, _react2.default.createElement(_reactNative.View, { style: props.padding && _styles.cardStyles.content }, props.children), footer);
	};
	Card.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    header: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.node]),
	    footer: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.node]),
	    padding: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	Card.defaultProps = {};
	exports.default = Card;

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.BR = exports.HR = exports.BLOCKQUOTE = exports.A = exports.P = exports.H6 = exports.H5 = exports.H4 = exports.H3 = exports.H2 = exports.H1 = undefined;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node, _react.PropTypes.string]),
	    style: _react.PropTypes.any
	};
	var H1 = function H1(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.h1, props.style] }), props.children);
	};
	H1.propTypes = propTypes;
	var H2 = function H2(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.h2, props.style] }), props.children);
	};
	H2.propTypes = propTypes;
	var H3 = function H3(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.h3, props.style] }), props.children);
	};
	H3.propTypes = propTypes;
	var H4 = function H4(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.h4, props.style] }), props.children);
	};
	H4.propTypes = propTypes;
	var H5 = function H5(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.h5, props.style] }), props.children);
	};
	H5.propTypes = propTypes;
	var H6 = function H6(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.h6, props.style] }), props.children);
	};
	H6.propTypes = propTypes;
	var P = function P(props) {
	    var center = typeof props.center !== 'undefined';
	    var right = typeof props.right !== 'undefined';
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.p, props.style, center && _styles.typographyStyles.textCenter, right && _styles.typographyStyles.textRight] }), props.children);
	};
	P.propTypes = propTypes;
	var A = function A(props) {
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.typographyStyles.a, props.style] }), props.children);
	};
	A.propTypes = propTypes;
	var BLOCKQUOTE = function BLOCKQUOTE(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: _styles.typographyStyles.blockquote }), _react2.default.createElement(_reactNative.Text, { style: [_styles.typographyStyles.blockquoteText, props.style] }, props.children));
	};
	BLOCKQUOTE.propTypes = propTypes;
	var HR = function HR(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.typographyStyles.hr, props.style] }));
	};
	HR.propTypes = propTypes;
	var BR = function BR(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.typographyStyles.br, props.style] }));
	};
	BR.propTypes = propTypes;
	exports.H1 = H1;
	exports.H2 = H2;
	exports.H3 = H3;
	exports.H4 = H4;
	exports.H5 = H5;
	exports.H6 = H6;
	exports.P = P;
	exports.A = A;
	exports.BLOCKQUOTE = BLOCKQUOTE;
	exports.HR = HR;
	exports.BR = BR;
	exports.default = {
	    H1: H1, H2: H2, H3: H3, H4: H4, H5: H5, H6: H6, P: P, A: A, BLOCKQUOTE: BLOCKQUOTE, HR: HR, BR: BR
		};

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Typography = __webpack_require__(509);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ImageHeader = function ImageHeader(props) {
	    var _image = void 0;
	    if (typeof props.image === "string") {
	        _image = __webpack_require__(511)(props.image);
	    } else {
	        _image = props.image;
	    }
	    return _react2.default.createElement(_reactNative.Image, __assign({}, props, { source: _image, style: [_styles.cardStyles.imageHeader, props.style], resizeMode: props.mode }), _react2.default.createElement(_Typography.H5, { style: [_styles.cardStyles.imageHeaderText, props.textStyle] }, props.caption));
	};
	ImageHeader.propTypes = {
	    image: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.any]),
	    mode: _react.PropTypes.string,
	    caption: _react.PropTypes.string,
	    style: _react.PropTypes.object,
	    textStyle: _react.PropTypes.object
	};
	ImageHeader.defaultProps = {
	    mode: "cover"
	};
		exports.default = ImageHeader;

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./Card": 508,
		"./Card.js": 508,
		"./ImageHeader": 510,
		"./ImageHeader.js": 510,
		"./index": 507,
		"./index.js": 507
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 511;


/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ItemThumb = exports.ItemIcon = exports.ItemFooter = exports.ItemHeader = exports.ItemDivider = exports.ItemText = exports.ItemContent = exports.Item = exports.ListItem = exports.List = undefined;

	var _List = __webpack_require__(513);

	var _List2 = _interopRequireDefault(_List);

	var _ListItem = __webpack_require__(514);

	var _ListItem2 = _interopRequireDefault(_ListItem);

	var _Item = __webpack_require__(515);

	var _Item2 = _interopRequireDefault(_Item);

	var _ItemContent = __webpack_require__(516);

	var _ItemContent2 = _interopRequireDefault(_ItemContent);

	var _ItemText = __webpack_require__(518);

	var _ItemText2 = _interopRequireDefault(_ItemText);

	var _ItemDivider = __webpack_require__(522);

	var _ItemDivider2 = _interopRequireDefault(_ItemDivider);

	var _ItemHeader = __webpack_require__(524);

	var _ItemHeader2 = _interopRequireDefault(_ItemHeader);

	var _ItemFooter = __webpack_require__(523);

	var _ItemFooter2 = _interopRequireDefault(_ItemFooter);

	var _ItemIcon = __webpack_require__(519);

	var _ItemIcon2 = _interopRequireDefault(_ItemIcon);

	var _ItemThumb = __webpack_require__(520);

	var _ItemThumb2 = _interopRequireDefault(_ItemThumb);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.List = _List2.default;
	exports.ListItem = _ListItem2.default;
	exports.Item = _Item2.default;
	exports.ItemContent = _ItemContent2.default;
	exports.ItemText = _ItemText2.default;
	exports.ItemDivider = _ItemDivider2.default;
	exports.ItemHeader = _ItemHeader2.default;
	exports.ItemFooter = _ItemFooter2.default;
	exports.ItemIcon = _ItemIcon2.default;
	exports.ItemThumb = _ItemThumb2.default;
	exports.default = {
	    List: _List2.default, ListItem: _ListItem2.default,
	    Item: _Item2.default,
	    ItemContent: _ItemContent2.default,
	    ItemText: _ItemText2.default,
	    ItemDivider: _ItemDivider2.default,
	    ItemHeader: _ItemHeader2.default,
	    ItemFooter: _ItemFooter2.default,
	    ItemIcon: _ItemIcon2.default,
	    ItemThumb: _ItemThumb2.default
		};

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var List = function List(props) {
	    var inset = props.inset;
	    var noscroll = props.noscroll;
	    var children = props.children;
	    var stickyHeader = props.stickyHeader;

	    var stickyIndices = [];
	    children.forEach(function (child, i) {
	        if (stickyHeader) {
	            if (child && (child.type.name === "ItemDivider" || child.type.name === "ItemHeader")) {
	                stickyIndices.push(i);
	            }
	        }
	        if (i === children.length - 1 && child && child.type && child.type.name === "Item") {}
	    });
	    var contentStyle = [_styles.listStyles.list, inset && _styles.listStyles.listMargin, props.style];
	    if (noscroll) {
	        return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: contentStyle }), children);
	    }
	    return _react2.default.createElement(_reactNative.ScrollView, __assign({}, props, { style: contentStyle, stickyHeaderIndices: stickyIndices }), props.children);
	};
	List.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    inset: _react.PropTypes.bool,
	    noscroll: _react.PropTypes.bool,
	    stickyHeader: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	List.defaultProps = {};
	exports.default = List;

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Item = __webpack_require__(515);

	var _Item2 = _interopRequireDefault(_Item);

	var _ItemContent = __webpack_require__(516);

	var _ItemContent2 = _interopRequireDefault(_ItemContent);

	var _ItemText = __webpack_require__(518);

	var _ItemText2 = _interopRequireDefault(_ItemText);

	var _ItemIcon = __webpack_require__(519);

	var _ItemIcon2 = _interopRequireDefault(_ItemIcon);

	var _ItemThumb = __webpack_require__(520);

	var _ItemThumb2 = _interopRequireDefault(_ItemThumb);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ListItem = function ListItem(props) {
	    var _thumb = void 0,
	        _icon = void 0;
	    var text = props.text;
	    var children = props.children;
	    var note = props.note;
	    var icon = props.icon;
	    var badge = props.badge;
	    var accessory = props.accessory;
	    var noline = props.noline;
	    var thumb = props.thumb;
	    var style = props.style;
	    var contentStyle = props.contentStyle;
	    var onPress = props.onPress;

	    var _content = children || text;
	    if (thumb) {
	        if (thumb.image) {
	            _thumb = _react2.default.createElement(_ItemThumb2.default, { image: thumb.image, avatar: thumb.avatar, style: thumb.style });
	        } else {
	            if (typeof thumb === "string") {
	                _thumb = _react2.default.createElement(_ItemThumb2.default, { image: __webpack_require__(521)(thumb) });
	            } else {
	                _thumb = _react2.default.createElement(_ItemThumb2.default, { image: thumb });
	            }
	        }
	    }
	    if (icon) {
	        if (typeof icon === "string") {
	            _icon = _react2.default.createElement(_ItemIcon2.default, { name: icon });
	        } else {
	            _icon = _react2.default.createElement(_ItemIcon2.default, { name: icon.icon, set: icon.set, color: icon.color, style: icon.style });
	        }
	    }
	    return _react2.default.createElement(_Item2.default, __assign({}, props, { onPress: onPress, style: style }), _thumb, _icon, _react2.default.createElement(_ItemContent2.default, { accessory: accessory, note: note, noline: noline, style: contentStyle }, _react2.default.createElement(_ItemText2.default, null, _content)));
	};
	ListItem.propTypes = {
	    text: _react.PropTypes.string,
	    onPress: _react.PropTypes.func,
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    note: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.string]),
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.shape({
	        icon: _react.PropTypes.string,
	        set: _react.PropTypes.string,
	        color: _react.PropTypes.string,
	        style: _react.PropTypes.any
	    })]),
	    badge: _react.PropTypes.string,
	    accessory: _react.PropTypes.oneOf(['checkmark', 'disclosure', 'detail']),
	    noline: _react.PropTypes.bool,
	    thumb: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.any, _react.PropTypes.shape({
	        image: _react.PropTypes.any,
	        avatar: _react.PropTypes.bool,
	        style: _react.PropTypes.any
	    })]),
	    contentStyle: _react.PropTypes.any,
	    style: _react.PropTypes.any
	};
	ListItem.defaultProps = {};
	exports.default = ListItem;

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var colors = _themes2.default.colors;

	var Item = function Item(props) {
	    return _reactNative.Platform.OS === 'android' ? _react2.default.createElement(_reactNative.TouchableNativeFeedback, __assign({}, props, { onPress: props.onPress, background: _reactNative.TouchableNativeFeedback.Ripple(colors.light, false) }), _react2.default.createElement(_reactNative.View, { style: [_styles.listStyles.item, props.style] }, props.children)) : _react2.default.createElement(_reactNative.TouchableHighlight, __assign({}, props, { underlay: colors.light, onPress: props.onPress }), _react2.default.createElement(_reactNative.View, { style: [_styles.listStyles.item, props.style] }, props.children));
	};
	Item.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    onPress: _react.PropTypes.func,
	    style: _react.PropTypes.any
	};
	Item.defaultProps = {};
	exports.default = Item;

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Icon = __webpack_require__(505);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Badge = __webpack_require__(517);

	var _Badge2 = _interopRequireDefault(_Badge);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemRight = function ItemRight(_ref) {
	    var children = _ref.children;
	    return _react2.default.createElement(_reactNative.View, { style: [_styles.listStyles.itemRight] }, children);
	};
	var ItemContent = function ItemContent(props) {
	    // check Platform and use
	    var accessory = void 0;
	    if (typeof props.accessory !== 'undefined') {
	        if (props.accessory === 'checkmark') {
	            accessory = _react2.default.createElement(_Icon2.default, { name: "check", style: _styles.listStyles.accessory, right: true, primary: true });
	        } else if (props.accessory === 'disclosure') {
	            accessory = _react2.default.createElement(_Icon2.default, { name: _reactNative.Platform.OS === 'android' ? 'md-arrow-forward' : 'ios-arrow-forward', set: "Ionicons", style: _styles.listStyles.accessory, right: true, gray: true });
	        } else if (props.accessory === 'detail') {}
	    }
	    var noline = typeof props.noline !== 'undefined';
	    var note = void 0;
	    if (typeof props.note !== 'undefined') {
	        if (typeof props.note === 'string') {
	            note = _react2.default.createElement(_reactNative.Text, { style: _styles.listStyles.noteText }, props.note);
	        } else {
	            note = props.note;
	        }
	    } else if (typeof props.badge !== 'undefined') {
	        if (typeof props.badge === 'string') {
	            note = _react2.default.createElement(_Badge2.default, { style: _styles.listStyles.badgeText, text: props.badge });
	        } else {
	            note = props.badge;
	        }
	    }
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.listStyles.itemContent, noline && _styles.listStyles.itemNoLine, props.style] }), _react2.default.createElement(_reactNative.View, { style: _styles.listStyles.itemText }, props.children), _react2.default.createElement(_reactNative.View, { style: [_styles.listStyles.itemRight] }, note, accessory));
	};
	ItemContent.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    note: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node, _react.PropTypes.string]),
	    badge: _react.PropTypes.oneOfType([_react.PropTypes.string, _react2.default.PropTypes.instanceOf(_Badge2.default)]),
	    accessory: _react.PropTypes.oneOf(['checkmark', 'disclosure', 'detail']),
	    noline: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	ItemContent.defaultProps = {};
	exports.default = ItemContent;

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var Badge = function Badge(props) {
	    var tc = _themes2.default.color(props, false);
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.badgeStyles.badge, props.style, { backgroundColor: tc.backgroundColor }] }), _react2.default.createElement(_reactNative.Text, { style: [_styles.badgeStyles.badgeText, { color: tc.textColor }] }, props.text || props.children || ""));
	};
	Badge.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    text: _react.PropTypes.any,
	    color: _react.PropTypes.string,
	    style: _react.PropTypes.any
	};
	Badge.defaultProps = {};
	exports.default = Badge;

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemText = function ItemText(props) {
	    if (typeof props.children !== 'string' && props.children.length > 1) {
	        var mainText = props.children.length > 0 ? _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.listStyles.itemMultilinePrimaryText, props.style] }), props.children[0]) : null;
	        var subText = props.children.length > 1 ? props.children.slice(1) : null;
	        return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.listStyles.multilineContainer, props.style] }), mainText, subText);
	    }
	    return _react2.default.createElement(_reactNative.Text, __assign({}, props, { style: [_styles.listStyles.itemMultilinePrimaryText, props.style] }), props.children);
	};
	ItemText.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    style: _react.PropTypes.any
	};
	ItemText.defaultProps = {};
	exports.default = ItemText;

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Icon = __webpack_require__(505);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemIcon = function ItemIcon(props) {
	    return _react2.default.createElement(_reactNative.View, { style: [_styles.listStyles.icon, props.style, props.right && _styles.listStyles.iconRight] }, _react2.default.createElement(_Icon2.default, __assign({}, props)));
	};
	ItemIcon.propTypes = {
	    name: _react.PropTypes.string,
	    set: _react.PropTypes.string,
	    size: _react.PropTypes.number,
	    color: _react.PropTypes.string,
	    right: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
		exports.default = ItemIcon;

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemThumb = function ItemThumb(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.listStyles.thumb, props.style] }), _react2.default.createElement(_reactNative.Image, { source: props.image, resizeMode: "cover", style: [_styles.listStyles.thumbImage, props.avatar && _styles.listStyles.avatar] }));
	};
	ItemThumb.propTypes = {
	    image: _react.PropTypes.any,
	    avatar: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	ItemThumb.defaultProps = {};
	exports.default = ItemThumb;

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./Item": 515,
		"./Item.js": 515,
		"./ItemContent": 516,
		"./ItemContent.js": 516,
		"./ItemDivider": 522,
		"./ItemDivider.js": 522,
		"./ItemFooter": 523,
		"./ItemFooter.js": 523,
		"./ItemHeader": 524,
		"./ItemHeader.js": 524,
		"./ItemIcon": 519,
		"./ItemIcon.js": 519,
		"./ItemText": 518,
		"./ItemText.js": 518,
		"./ItemThumb": 520,
		"./ItemThumb.js": 520,
		"./List": 513,
		"./List.js": 513,
		"./ListItem": 514,
		"./ListItem.js": 514,
		"./index": 512,
		"./index.js": 512
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 521;


/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemDivider = function ItemDivider(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.listStyles.itemDivider, props.style] }), _react2.default.createElement(_reactNative.Text, { style: [_styles.listStyles.itemDividerText, props.textStyle] }, (props.text || props.children || "").toUpperCase()));
	};
	ItemDivider.propTypes = {
	    children: _react.PropTypes.string,
	    text: _react.PropTypes.string,
	    style: _react.PropTypes.any,
	    textStyle: _react.PropTypes.any
	};
	ItemDivider.defaultProps = {};
	exports.default = ItemDivider;

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemFooter = function ItemFooter(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.listStyles.itemFooter, props.style] }), _react2.default.createElement(_reactNative.Text, { style: [_styles.listStyles.itemFooterText, props.textStyle] }, props.children));
	};
	ItemFooter.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    style: _react.PropTypes.any,
	    textStyle: _react.PropTypes.any
	};
	ItemFooter.defaultProps = {};
	exports.default = ItemFooter;

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ItemHeader = function ItemHeader(props) {
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: [_styles.listStyles.itemHeader, props.style] }), _react2.default.createElement(_reactNative.Text, { style: [_styles.listStyles.itemHeaderText, props.textStyle] }, props.children));
	};
	ItemHeader.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    style: _react.PropTypes.any,
	    textStyle: _react.PropTypes.any
	};
	ItemHeader.defaultProps = {};
	exports.default = ItemHeader;

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var buttonRadius = _themes2.default.buttonRadius;

	var Button = function (_Component) {
	    _inherits(Button, _Component);

	    function Button(props) {
	        _classCallCheck(this, Button);

	        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

	        _this.state = {
	            active: false
	        };
	        _this._highlight = _this._highlight.bind(_this);
	        _this._unhighlight = _this._unhighlight.bind(_this);
	        return _this;
	    }

	    _createClass(Button, [{
	        key: 'render',
	        value: function render() {
	            var tc = _themes2.default.color(this.props, this.state.active);
	            var _props = this.props;
	            var text = _props.text;
	            var children = _props.children;
	            var size = _props.size;
	            var full = _props.full;
	            var clear = _props.clear;
	            var outline = _props.outline;
	            var round = _props.round;
	            var color = _props.color;
	            var disabled = _props.disabled;
	            var style = _props.style;

	            var onPress = disabled ? null : this.props.onPress;
	            var contents = text || children || "";
	            var textContents = _react2.default.createElement(_reactNative.Text, { style: [_styles.buttonStyles.buttonText, { color: tc.textColor }, size && _styles.buttonStyles["text" + size]] }, contents);
	            if (clear) {
	                return _react2.default.createElement(_reactNative.TouchableOpacity, __assign({}, this.props, { style: [style, !full && { borderRadius: buttonRadius, marginVertical: _themes2.default.margin / 2, marginHorizontal: _themes2.default.margin }], onPress: onPress }), _react2.default.createElement(_reactNative.View, { style: [_styles.buttonStyles.button, _styles.buttonStyles.clear, size && _styles.buttonStyles[size], full && _styles.buttonStyles.full, disabled && _styles.buttonStyles.disabled, { backgroundColor: tc.backgroundColor }] }, textContents));
	            } else if (outline) {
	                return _reactNative.Platform.OS === 'android' ? _react2.default.createElement(_reactNative.TouchableNativeFeedback, __assign({}, this.props, { onPress: onPress, background: _reactNative.TouchableNativeFeedback.Ripple(tc.activeColor, false), style: [{ backgroundColor: tc.backgroundColor }, !full && { borderRadius: buttonRadius, marginVertical: _themes2.default.margin / 2, marginHorizontal: _themes2.default.margin }, round && _styles.buttonStyles.round, disabled && _styles.buttonStyles.disabled, style] }), _react2.default.createElement(_reactNative.View, { style: [_styles.buttonStyles.button, _styles.buttonStyles.outline, size && _styles.buttonStyles[size], full && _styles.buttonStyles.full, disabled && _styles.buttonStyles.disabled, { borderColor: tc.borderColor, backgroundColor: tc.backgroundColor }] }, textContents)) : _react2.default.createElement(_reactNative.TouchableHighlight, __assign({ onPress: onPress, underlayColor: tc.activeColor, activeOpacity: 1, onShowUnderlay: this._highlight, onHideUnderlay: this._unhighlight }, this.props, { style: [{ backgroundColor: tc.backgroundColor }, !full && { borderRadius: buttonRadius, marginVertical: _themes2.default.margin / 2, marginHorizontal: _themes2.default.margin }, round && _styles.buttonStyles.round, disabled && _styles.buttonStyles.disabled, style] }), _react2.default.createElement(_reactNative.View, { style: [_styles.buttonStyles.button, _styles.buttonStyles.outline, size && _styles.buttonStyles[size], full && _styles.buttonStyles.full, disabled && _styles.buttonStyles.disabled, { borderColor: tc.borderColor, backgroundColor: tc.backgroundColor }] }, textContents));
	            }
	            return _reactNative.Platform.OS === 'android' ? _react2.default.createElement(_reactNative.TouchableNativeFeedback, __assign({}, this.props, { onPress: onPress, background: _reactNative.TouchableNativeFeedback.Ripple(tc.activeColor, false), style: [{ backgroundColor: tc.backgroundColor }, !full && { borderRadius: buttonRadius, marginVertical: _themes2.default.margin / 2, marginHorizontal: _themes2.default.margin }, round && _styles.buttonStyles.round, disabled && _styles.buttonStyles.disabled, style] }), _react2.default.createElement(_reactNative.View, { style: [_styles.buttonStyles.button, size && _styles.buttonStyles[size], full && _styles.buttonStyles.full, disabled && _styles.buttonStyles.disabled, { backgroundColor: this.state.active ? tc.activeColor : tc.backgroundColor }] }, textContents)) : _react2.default.createElement(_reactNative.TouchableHighlight, __assign({ onPress: onPress, underlayColor: tc.activeColor, activeOpacity: 1, onShowUnderlay: this._highlight, onHideUnderlay: this._unhighlight }, this.props, { style: [{ backgroundColor: tc.backgroundColor }, !full && { borderRadius: buttonRadius, marginVertical: _themes2.default.margin / 2, marginHorizontal: _themes2.default.margin }, round && _styles.buttonStyles.round, disabled && _styles.buttonStyles.disabled, style] }), _react2.default.createElement(_reactNative.View, { style: [_styles.buttonStyles.button, size && _styles.buttonStyles[size], full && _styles.buttonStyles.full, disabled && _styles.buttonStyles.disabled, { backgroundColor: this.state.active ? tc.activeColor : tc.backgroundColor }] }, textContents));
	        }
	    }, {
	        key: '_highlight',
	        value: function _highlight() {
	            this.setState({ active: true });
	        }
	    }, {
	        key: '_unhighlight',
	        value: function _unhighlight() {
	            this.setState({ active: false });
	        }
	    }]);

	    return Button;
	}(_react.Component);

	Button.propTypes = {
	    onPress: _react.PropTypes.func,
	    children: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    text: _react.PropTypes.any,
	    size: _react.PropTypes.string,
	    full: _react.PropTypes.bool,
	    round: _react.PropTypes.bool,
	    clear: _react.PropTypes.bool,
	    outline: _react.PropTypes.bool,
	    color: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	Button.defaultProps = {};
	exports.default = Button;

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var Container = function Container(props) {
	    var contentStyle = [_styles.containerStyles.container, props.padding && _styles.containerStyles.padding, props.style];
	    return _react2.default.createElement(_reactNative.View, __assign({}, props, { style: contentStyle }), props.children);
	};
	Container.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    padding: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	Container.defaultProps = {};
	exports.default = Container;

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Icon = __webpack_require__(505);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _index = __webpack_require__(491);

	var _index2 = _interopRequireDefault(_index);

	var _index3 = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var FloatButton = function FloatButton(props) {
	    var icon = props.icon;
	    var mini = props.mini;
	    var position = props.position;
	    var depth = props.depth;
	    var offset = props.offset;
	    var active = props.active;
	    var disabled = props.disabled;
	    var style = props.style;

	    var tc = _index2.default.color(props, active);
	    var bc = tc.backgroundColor;
	    var onPress = disabled ? null : props.onPress;
	    var _icon = void 0;
	    if (icon) {
	        if (typeof icon === 'string') {
	            _icon = _react2.default.createElement(_Icon2.default, { name: icon, color: tc.textColor, size: 24, style: [_index3.floatButtonStyles.buttonIcon] });
	        } else {
	            _icon = _react2.default.createElement(_Icon2.default, { name: icon.icon, set: icon.set, color: icon.theme && _index2.default[icon.theme] || tc.textColor, size: icon.size || 24, style: [_index3.floatButtonStyles.buttonIcon, icon.style] });
	        }
	    }
	    return _reactNative.Platform.OS === 'android' ? _react2.default.createElement(_reactNative.TouchableNativeFeedback, { onPress: onPress, background: _reactNative.TouchableNativeFeedback.Ripple(tc.activeColor, false), style: [{ backgroundColor: bc, borderRadius: _index3.floatRadius / 2 }, _index3.floatButtonStyles.container, position && _index2.default.position(position, mini ? { w: _index3.floatRadiusMini, h: _index3.floatRadiusMini } : { w: _index3.floatRadius, h: _index3.floatRadius }, offset)] }, _react2.default.createElement(_reactNative.View, { shadowColor: _index3.floatShadow.color, shadowOffset: _index3.floatShadow.offset, shadowOpacity: _index3.floatShadow.opacity, shadowRadius: props.depth, style: [_index3.floatButtonStyles.button, { backgroundColor: bc }, mini && _index3.floatButtonStyles.mini, disabled && _index3.floatButtonStyles.disabled, style] }, _icon)) : _react2.default.createElement(_reactNative.TouchableHighlight, { onPress: onPress, underlayColor: tc.activeColor, style: [{ backgroundColor: bc, borderRadius: _index3.floatRadius / 2 }, _index3.floatButtonStyles.container, position && _index2.default.position(position, mini ? { w: _index3.floatRadiusMini, h: _index3.floatRadiusMini } : { w: _index3.floatRadius, h: _index3.floatRadius }, offset)] }, _react2.default.createElement(_reactNative.View, { shadowColor: _index3.floatShadow.color, shadowOffset: _index3.floatShadow.offset, shadowOpacity: props.depth === 0 ? 0 : _index3.floatShadow.opacity, shadowRadius: props.depth, style: [_index3.floatButtonStyles.button, { backgroundColor: bc }, mini && _index3.floatButtonStyles.mini, disabled && _index3.floatButtonStyles.disabled, style] }, _icon));
	};
	FloatButton.propTypes = {
	    onPress: _react.PropTypes.func,
	    icon: _react.PropTypes.string,
	    mini: _react.PropTypes.bool,
	    depth: _react.PropTypes.number,
	    position: _react.PropTypes.oneOf(['TL', 'T', 'TR', 'ML', 'M', 'MR', 'BL', 'B', 'BR']),
	    offset: _react.PropTypes.shape({ h: _react.PropTypes.number, v: _react.PropTypes.number }),
	    active: _react.PropTypes.bool,
	    disabled: _react.PropTypes.bool,
	    color: _react.PropTypes.string,
	    style: _react.PropTypes.any
	};
	FloatButton.defaultProps = {
	    depth: _reactNative.Platform.OS === 'android' ? 2 : 0,
	    offset: { h: 0, v: 0 }
	};
		exports.default = FloatButton;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _Icon = __webpack_require__(505);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _themes = __webpack_require__(491);

	var _themes2 = _interopRequireDefault(_themes);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var Range = function (_Component) {
	    _inherits(Range, _Component);

	    function Range(props) {
	        _classCallCheck(this, Range);

	        var _this = _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, props));

	        _this.state = {
	            value: props.value || 0
	        };
	        return _this;
	    }

	    _createClass(Range, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            var _props = this.props;
	            var style = _props.style;
	            var textLeft = _props.textLeft;
	            var textRight = _props.textRight;
	            var iconLeft = _props.iconLeft;
	            var iconRight = _props.iconRight;

	            var hasAttachment = textLeft || textRight || iconLeft || iconRight;
	            var tint = _themes2.default.colors.primary;
	            if (_themes2.default.hasTheme(this.props)) {
	                (function () {
	                    var tc = _themes2.default.color(_this2.props);
	                    tint = function () {
	                        if (_reactNative.Platform.OS === 'ios') {
	                            return tc.backgroundColor;
	                        }
	                    }();
	                })();
	            }
	            if (hasAttachment) {
	                var left = void 0,
	                    right = void 0;
	                if (textLeft || iconLeft) {
	                    if (typeof textLeft === "string") {
	                        left = _react2.default.createElement(_reactNative.Text, { style: [_styles.rangeStyles.text, { color: tint }] }, textLeft);
	                    } else if ((typeof textLeft === 'undefined' ? 'undefined' : _typeof(textLeft)) === "object") {
	                        left = typeof textLeft.text === 'undefined' ? null : _react2.default.createElement(_reactNative.Text, { style: [_styles.rangeStyles.text, { color: tint }, textLeft.color && { color: textLeft.color }, textLeft.size && { fontSize: textLeft.size }, textLeft.style] }, textLeft.text);
	                    }
	                    if (typeof iconLeft === "string") {
	                        left = _react2.default.createElement(_Icon2.default, { style: [_styles.rangeStyles.icon], name: iconLeft });
	                    } else if ((typeof iconLeft === 'undefined' ? 'undefined' : _typeof(iconLeft)) === "object") {
	                        left = iconLeft.name ? _react2.default.createElement(_Icon2.default, { style: [_styles.rangeStyles.icon], name: iconLeft.name, size: iconLeft.size || 18, color: iconLeft.color || tint }) : null;
	                    }
	                }
	                if (textRight || iconRight) {
	                    if (typeof textRight === "string") {
	                        right = _react2.default.createElement(_reactNative.Text, { style: [_styles.rangeStyles.text, _styles.rangeStyles.textRight, { color: tint }] }, textRight);
	                    } else if ((typeof textRight === 'undefined' ? 'undefined' : _typeof(textRight)) === "object") {
	                        right = typeof textRight.text === 'undefined' ? null : _react2.default.createElement(_reactNative.Text, { style: [_styles.rangeStyles.text, _styles.rangeStyles.textRight, { color: tint }, textRight.color && { color: textRight.color }, textRight.size && { fontSize: textRight.size }, textRight.style] }, textRight.text);
	                    }
	                    if (typeof iconRight === "string") {
	                        right = _react2.default.createElement(_Icon2.default, { style: [_styles.rangeStyles.icon, _styles.rangeStyles.iconRight], name: iconRight });
	                    } else if ((typeof iconRight === 'undefined' ? 'undefined' : _typeof(iconRight)) === "object") {
	                        right = iconRight.name ? _react2.default.createElement(_Icon2.default, { style: [_styles.rangeStyles.icon, _styles.rangeStyles.iconRight], name: iconRight.name, size: iconRight.size || 24, color: iconRight.color || tint }) : null;
	                    }
	                }
	                return _react2.default.createElement(_reactNative.View, { style: [_styles.rangeStyles.range] }, left, _react2.default.createElement(_reactNative.Slider, __assign({}, this.props, { minimumTrackTintColor: tint, style: [_styles.rangeStyles.slider, style] })), right);
	            } else {
	                return _react2.default.createElement(_reactNative.Slider, __assign({}, this.props, { minimumTrackTintColor: tint, style: [_styles.rangeStyles.slider, style] }));
	            }
	        }
	    }]);

	    return Range;
	}(_react.Component);

	Range.propTypes = {
	    textLeft: _react.PropTypes.oneOfType([_react.PropTypes.shape({ text: _react.PropTypes.string, color: _react.PropTypes.string, size: _react.PropTypes.number }), _react.PropTypes.object, _react.PropTypes.string]),
	    textRight: _react.PropTypes.oneOfType([_react.PropTypes.shape({ text: _react.PropTypes.string, color: _react.PropTypes.string, size: _react.PropTypes.number }), _react.PropTypes.object, _react.PropTypes.string]),
	    iconLeft: _react.PropTypes.oneOfType([_react.PropTypes.shape({ name: _react.PropTypes.string, color: _react.PropTypes.string, size: _react.PropTypes.number }), _react.PropTypes.object, _react.PropTypes.string]),
	    iconRight: _react.PropTypes.oneOfType([_react.PropTypes.shape({ name: _react.PropTypes.string, color: _react.PropTypes.string, size: _react.PropTypes.number }), _react.PropTypes.object, _react.PropTypes.string]),
	    color: _react.PropTypes.string,
	    style: _react.PropTypes.any
	};
	Range.defaultProps = {};
	exports.default = Range;

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactNative = __webpack_require__(30);

	var _styles = __webpack_require__(493);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};

	var ScrollContainer = function ScrollContainer(props) {
	    var contentStyle = [props.padding && _styles.containerStyles.padding, props.style];
	    return _react2.default.createElement(_reactNative.ScrollView, __assign({}, props, { style: _styles.containerStyles.container, contentContainerStyle: contentStyle }), props.children);
	};
	ScrollContainer.propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    padding: _react.PropTypes.bool,
	    style: _react.PropTypes.any
	};
	ScrollContainer.defaultProps = {};
	exports.default = ScrollContainer;

/***/ }
/******/ ]);
//# sourceMappingURL=actionitem.bundle.js.map